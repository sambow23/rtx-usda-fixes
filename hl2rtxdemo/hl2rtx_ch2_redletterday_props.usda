#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {



        over "mesh_9470A4262B710A17" (
            references = None
        )
        {
            over "mesh"
            {
                float3 xformOp:rotateXYZ = (180, 0, 0)
                float3 xformOp:scale = (1, 1, 1)
                float3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def Xform "ref_69594adf480147b5a771924bfd2f2fea" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_PartsBin_A/SM_Prop_Lab_PartsBin_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "partsbin01"
                {
                    float3 xformOp:rotateXYZ = (180, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "partsbin01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_PartsBin_A/textures/T_Prop_Lab_PartsBin_A_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_PartsBin_A/textures/T_Prop_Lab_PartsBin_A_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_PartsBin_A/textures/T_Prop_Lab_PartsBin_A_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_PartsBin_A/textures/T_Prop_Lab_PartsBin_A_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_FA114FD64508BC81" (
            references = None
        )
        {
            def Xform "ref_95d355f11ff84650bcb50f5694258a74" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_A_Base/SM_Wasteland_Light_Spotlight01_Base.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_light_spotlight01_base"
                {
                    over "Looks"
                    {
                        over "spotlight01_off_001"
                        {
                            over "spotlight01_off_001"
                            {
                                asset inputs:diffuse_texture (
                                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                    hidden = false
                                )
                                int inputs:encoding (
                                    doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                    hidden = false
                                    renderType = "::Z73file_3A::Z18E_3A::Odessa::hl2rtx::assets::ch2_redletterday::models::SM_Fixture_Wasteland_Light_Spotlight_A_Base::SubUSDs::materials::AperturePBR_Normal::normalmap_encoding"
                                    sdrMetadata = {
                                        string __SDR__enum_value = "octahedral"
                                        string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                    }
                                )
                                asset inputs:metallic_texture (
                                    hidden = false
                                )
                                asset inputs:normalmap_texture (
                                    hidden = false
                                )
                                asset inputs:reflectionroughness_texture (
                                    hidden = false
                                )
                            }
                        }
                    }

                    over "light_spotlight01_base_vmdl_c_spotlight_01_base_lod0"
                    {
                        float3 xformOp:rotateXYZ = (-90, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 6.5)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "light_spotlight01_base_vmdl_c_spotlight_01_base_lod0"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_053C6805D29CAB4A" (
            references = None
        )
        {
            def Xform "ref_73e55b6dd37a465c96df5a6a18ff7225" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_B/SM_Fixture_Wasteland_Light_Spotlight_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_light_spotlight02_lamp"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "light_spotlight02_lamp_vmdl_c_spotlight02_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }

                    over "Looks"
                    {
                        over "spotlight02_on"
                        {
                            over "spotlight02_on"
                            {
                                float inputs:emissive_intensity = 10 (
                                    doc = "Intensity of the emission"
                                    hidden = false
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D8806F9BAD35D906" (
            references = None
        )
        {
            def Xform "ref_5ec738b91a574628a070e3fa7e5b563d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/SM_Fixture_Lab_Light_Flourescent_A1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Looks"
                {
                    over "M_Fixture_Lab_Light_Flourescent_A1"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/textures/T_Fixture_Lab_Light_Flourescent_A_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/textures/T_Fixture_Lab_Light_Flourescent_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/textures/T_Fixture_Lab_Light_Flourescent_A_OTH_Normal.dds@ (
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/textures/T_Fixture_Lab_Light_Flourescent_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }

                over "shroud_low_001"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }
            }
        }

        over "mesh_9C2380B4D1CC2007" (
            references = None
        )
        {
            def Xform "ref_0aa88ea208024879ab839a69e1bc3bf1" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_A/SM_Prop_Lab_Receiver_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lab_Receiver_A"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "SM_Prop_Lab_Receiver_A"
                    {
                        float3 xformOp:scale = (1, 1, 1)
                    }

                    over "Looks"
                    {
                        over "T_Prop_Lab_Receiver_A"
                        {
                            over "T_Prop_Lab_Receiver_A"
                            {
                                asset inputs:diffuse_texture (
                                    colorSpace = "sRGB"
                                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:metallic_texture (
                                    colorSpace = "raw"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:normalmap_texture (
                                    colorSpace = "raw"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:reflectionroughness_texture (
                                    colorSpace = "raw"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_765F7495A804FD38" (
            references = None
        )
        {
            def Xform "ref_ab25d69fc4a246628729fe47e284dd90" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_B/SM_Prop_Lab_Receiver_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lab_Receiver_B"
                {
                    over "SM_Prop_Lab_Receiver_B"
                    {
                        float3 xformOp:rotateXYZ = (90, -0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }

                    over "Looks"
                    {
                        over "T_Prop_Lab_Receiver_B"
                        {
                            over "T_Prop_Lab_Receiver_B"
                            {
                                float inputs:emissive_intensity = 0.5 (
                                    doc = """Intensity of the emission

"""
                                    hidden = false
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DC31940F5FA0E9A0" (
            references = None
        )
        {
            def Xform "ref_0e7c3d6c8d2e4aceb0d386b89ea45b06" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/SM_plasticcrate01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "plasticcrate001_vmdl_c_lod0"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (7.412381819449365e-11, 1.5279510989785194e-10, -7.486042177784608)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "plasticcrate001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_color_skin0_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_D5257C96B752F64B" (
            references = None
        )
        {
            def Xform "ref_557f8610add342708bd338b0e08fab8b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_B2/SM_Fixture_Lab_Light_Flourescent_B2.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "light_low_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (1.6091022574378258, 2.495653461664915e-9, 3.89945853385143e-11)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "Cylinder_002"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "Fixture_lab_Light_Flourescent_B2"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity = 40 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_AB593C5997539552" (
            references = None
        )
        {
            def Xform "ref_a9658cb10e1949c6b3d2897a8aba4575" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/SM_Fixture_Lab_Light_Flourescent_A2_off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "shroud_low_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Fixture_Lab_Light_Flourescent_A1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Albedo_Diffuse.dds@ (
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_1EFF71ACA89CE2F4" (
            references = None
        )
        {
            def Xform "ref_1abeefc8e9fb40e2b0069b6ce006d78b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/SM_Fixture_Lab_Light_Flourescent_A2.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Looks"
                {
                    over "M_Fixture_Lab_Light_Flourescent_A1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }

                over "shroud_low_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }


        over "mesh_A96616F9F1DA28B4" (
            references = None
        )
        {
            def Xform "ref_e661780dd79144ad943cdf3c5c7237b0" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/SM_plasticcrate01a_yellow.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "plasticcrate001_vmdl_c_lod0"
                {
                    float3 xformOp:rotateXYZ = (-90.00001, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "plasticcrate001_vmdl_c_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 7.49174700215778, 2.2282620193436742e-11)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "plasticcrate001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_color_skin1_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_C2E40A3D244EA47A" (
            references = None
        )
        {
            def Xform "ref_c55bfad49702439e8cb9e998c4ec7350" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/SM_plasticcrate01a_blue.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "plasticcrate001_vmdl_c_lod0"
                {
                    float3 xformOp:rotateXYZ = (-90.00001, 0.0000068301883, 0.000006830188)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 7)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "plasticcrate001_vmdl_c_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (3.0850191024001106e-7, 14.487, 3.445826450843015e-7)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "plasticcrate001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_color_skin2_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_65B1052A1E730833" (
            references = None
        )
        {
            def Xform "ref_75380f9d296f42d5a4c86edc88a4baaf" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/SM_plasticcrate01a_green.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "plasticcrate001_vmdl_c_lod0"
                {
                    float3 xformOp:rotateXYZ = (-90.00001, 0.0000068301883, 0.000006830188)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "plasticcrate001_vmdl_c_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.039508778706021985, 7.487990490343591, -0.0000020168949959042948)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "plasticcrate001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_color_skin3_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4F03E5D93A75346B" (
            references = None
        )
        {
            def Xform "ref_6c995928ec0e4b358626efa92d4934e5" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/SM_plasticcrate01a_red.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "plasticcrate001_vmdl_c_lod0"
                {
                    float3 xformOp:rotateXYZ = (-90.00001, 0.0000068301883, 0.000006830188)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "plasticcrate001_vmdl_c_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.03951, 7.48799, 8.174914114533749e-7)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "plasticcrate001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_color_skin4_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PlasticCrate/textures/T_plasticcrate001a_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_65C477BD9F9E2D97" (
            references = None
        )
        {
            def Xform "ref_802c58d8a05142dbaf9a4523acfe1f95" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/SM_Prop_Junk_PopCan_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "can_soda_01a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (140, 140, 140)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "can_soda_01a_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (1.7763568394002505e-15, -7.771561172376096e-16, -0.024322496596664966)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "can_soda_01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_Color.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 1 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_metal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_57364E25798FA5FF" (
            references = None
        )
        {
            def Xform "ref_dce9f9a08747491bb79b6bf94bc012f2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/SM_Prop_Junk_PopCan_A_Red.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "can_soda_01a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (140, 140, 140)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "can_soda_01a_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, -0.02413242164074575)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "can_soda_01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_Skin_1_Color.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_metal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_AFF0065C54F49355" (
            references = None
        )
        {
            def Xform "ref_a1ff02acd4c74a6ca9686bdae6ac675f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/SM_Prop_Junk_PopCan_A_Yellow.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "can_soda_01a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (140, 140, 140)
                    double3 xformOp:translate = (0, 0, -0.02413)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "can_soda_01a_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 2.220446049250313e-16, -0.023885461088528237)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "can_soda_01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_Skin_2_Color.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_metal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_PopCan_A/Textures/SM_Prop_Junk_PopCan_A_rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_0A4A5193393923F6" (
            references = None
        )
        {
            def Xform "ref_a088bdce14794e0ba86a42aa35f858ca" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Bucket_Plastic_A/SM_Prop_Junk_PlasticBucket001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "plasticbucket001_vmdl_c_plasticbucket001"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, -90)
                    float3 xformOp:scale = (1.2552581, 1.2552581, 1.2552581)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "plasticbucket001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Bucket_Plastic_A/textures/T_plasticbucket001_color_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Bucket_Plastic_A/textures/T_plasticbucket001_metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Bucket_Plastic_A/textures/T_plasticbucket001_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Bucket_Plastic_A/textures/T_plasticbucket001_rough_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }



        over "mesh_D7DFEF5575C84931" (
            references = None
        )
        {
            def Xform "ref_9fcb8efdc9b24d979eeb8272ab46ac81" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_A/SM_Prop_C17_ConsoleBox_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_ConsoleBox_A"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "T_Prop_C17_ConsoleBox_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_A/textures/T_T_Prop_C17_ConsoleBox_A_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            float inputs:emissive_intensity = 40 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_A/textures/T_T_Prop_C17_ConsoleBox_A_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_A/textures/T_T_Prop_C17_ConsoleBox_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_A/textures/T_T_Prop_C17_ConsoleBox_A_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_A/textures/T_T_Prop_C17_ConsoleBox_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_DDB99C08764AB1EF" (
            references = None
        )
        {
            def Xform "ref_04583e95391841268cae8c383d0a43cd" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_A/SM_Fixture_Lab_Powerbox_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Electrical_Box_J"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "AperturePBR_Opacity"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_A/textures/SM_Fixture_Lab_Powerbox_A_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_A/textures/SM_Fixture_Lab_Powerbox_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_A/textures/SM_Fixture_Lab_Powerbox_A_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_A/textures/SM_Fixture_Lab_Powerbox_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_FF771E7B0EA13D5D" (
            references = None
        )
        {
            def Xform "ref_1a6073f23ecc48c1b66122f41b4ca94b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/SM_Flixture_Light_Bulkhead.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_7E67A5FC180C75FE" (
            references = None
        )
        {
            def Xform "ref_3c2ed11be7f040f68f69d4f36f116fc1" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/SM_Flixture_Light_Bulkhead_Off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_1C3DADEA3AB722C8" (
            references = None
        )
        {
            def Xform "ref_0baf08463faa4a3299f25c0dfbe8d0e3" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/SM_Flixture_Light_Bulkhead_Red_Off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_1B1485B5930DB71D" (
            references = None
        )
        {
            def Xform "ref_5e81cdd7cb224fb3af5c43801ce6afa1" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/SM_Flixture_Light_Bulkhead_Red.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }




        over "mesh_F22442CEBBA08259" (
            references = None
        )
        {
            def Xform "ref_a5fb42b3809449e6a226546dd3149c71" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/SM_Fixture_Lab_Keypad.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Keypad_Buttons"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Glass_Screen"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "keypad"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "glass"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity = 40 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                            )
                            bool inputs:enable_emission = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_CB68ED69C89A26E6" (
            references = None
        )
        {
            def Xform "ref_e91e626a0c504f88be4b30bd9215767f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/SM_Fixture_Lab_Keypad_Access.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Keypad_Buttons"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Glass_Screen"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "keypad"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Emissive_Access_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "glass"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            float inputs:emissive_intensity = 40 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                            )
                            bool inputs:enable_emission = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_908675C9C8D38A2C" (
            references = None
        )
        {
            def Xform "ref_b6eb219ba4a2460ea998fc6a82f804d0" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/SM_Fixture_Lab_Keypad_Error.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Keypad_Buttons"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Glass_Screen"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "keypad"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Emissive_Error_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Keypad/textures/T_Keypad_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "glass"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity = 40 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Color Texture"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }



        over "mesh_F43596C4477F31C1" (
            references = None
        )
        {
            def Xform "ref_7e0fee89ddbe422c86c166f0a5035a2a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Handrail_A_Long_Stairwell_A/SM_Fixture_Lab_Handrail_A_Long_Stairwell_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Plane"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "Plane_001"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (-2.828528522513807e-10, -0.604298868591286, 25.66554637621107)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }
            }
        }





        over "mesh_C09D33312DC36629" (
            references = None
        )
        {
            def Xform "ref_eb74b3146b134940aa9ff30a5e7595a1" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_C/SM_Prop_C17_ConsoleBox_C.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_ConsoleBox_C"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "T_Prop_C17_ConsoleBox_C"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_C/textures/T_T_Prop_C17_ConsoleBox_C_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_C/textures/T_T_Prop_C17_ConsoleBox_C_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_C/textures/T_T_Prop_C17_ConsoleBox_C_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_C/textures/T_T_Prop_C17_ConsoleBox_C_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_C/textures/T_T_Prop_C17_ConsoleBox_C_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_38A747A6A626CA1C" (
            references = None
        )
        {
            def Xform "ref_c3d73b39623f4dfca9c868d26ade5c7a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_E/SM_Prop_C17_ConsoleBox_E.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_ConsoleBox_E"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "T_Prop_C17_ConsoleBox_E"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_E/textures/T_T_Prop_C17_ConsoleBox_E_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_E/textures/T_T_Prop_C17_ConsoleBox_E_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_E/textures/T_T_Prop_C17_ConsoleBox_E_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_ConsoleBox_E/textures/T_T_Prop_C17_ConsoleBox_E_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }








        over "mesh_BFEC38F5294EFD08" (
            references = None
        )
        {
            def Xform "ref_40a6b97b3075401886246ef44de9bbd3" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_B/SM_Fixture_Lab_Powerbox_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "box_low_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Fixture_Lab_Powerbox_B"
                    {
                        over "Shader"
                        {
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_B/textures/T_Fixture_Lab_Powerbox_B_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }


        over "mesh_0AA9DA2014FDADFC" (
            references = None
        )
        {
            def Xform "ref_2af47c2e18b04958bf548f8ff4e7940a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_WallLight_A/SM_Fixture_EmergencyLight.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_EmergencyLight"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "WallLight_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_WallLight_A/textures/T_Fixture_EmergencyLight_A_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_WallLight_A/textures/T_Fixture_EmergencyLight_A_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_WallLight_A/textures/T_Fixture_EmergencyLight_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_WallLight_A/textures/T_Fixture_EmergencyLight_A_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_WallLight_A/textures/T_Fixture_EmergencyLight_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_E6545B6B5BE0B3E9" (
            references = None
        )
        {
            def Xform "ref_fe39644758af4213814361dd3d21b2e9" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderRed_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]



                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 1 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_961E8D6A97D91378" (
            references = None
        )
        {
            def Xform "ref_1c09e12b870d44deba4b2db4d5fad58b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderGreenLabel_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]



                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_EACAFF1347DEE095" (
            references = None
        )
        {
            def Xform "ref_197cca689c83474498e118da2583f962" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderGreen_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]



                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_73A8ABA8798805D8" (
            references = None
        )
        {
            def Xform "ref_95d95e63d4d1415e9bde0e0cb96be9de" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderGrayLabel_B01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]



                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_286B2F3D69DFA0E3" (
            references = None
        )
        {
            def Xform "ref_61a857030832436ab2673e58a335ea8d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderGrayLabel_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]



                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_76DAC592B2D7611C" (
            references = None
        )
        {
            def Xform "ref_7b8ea14f10a74494ac1387cbf7b3a721" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderBlueLabel_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_BinderBlueLabel_A01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "SM_BinderBlueLabel_A01_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_86300A728875EDFB" (
            references = None
        )
        {
            def Xform "ref_6acef645061a470caf7368afd0b871ae" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/SM_BinderBlue_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]



                over "Looks"
                {
                    over "M_LapBinderSet_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_B01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "M_LapBinderSet_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_basecolor_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_metallic_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Binder Set/textures/M_LapBlinderSet_A01_roughness_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_285A6B1B8A7FD316" (
            references = None
        )
        {
            def Xform "ref_a40ffb80490d40c58f6dde19a67f7ec8" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/SM_Prop_Lab_Monitor_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "monitor_body"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "monitor_screen"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "monitor02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_color_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "screen_glass"
                    {
                        over "Shader"
                        {
                            int inputs:encoding = 1 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_tv_soviet_screen_normal_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_E0F07570FE3F7C22" (
            references = None
        )
        {
            def Xform "ref_48fe5ff76e2c487392f12f1f9277b900" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/vendingmachine.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "vending_machine"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (49, 49, 49)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "vending_machine"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 90)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.17458811007497488, 0.12113677342583173, -0.22844259120020216)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "vending_machine_buttons"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (49, 49, 49)
                    double3 xformOp:translate = (0.17459, 0.12114, -0.22844)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "vending_machine_001"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0.4379603535882097, -0.3311125381183757, -0.06714857862613777)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "vendingmachinesoda01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 0.5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "vendingmachinesoda01a_button"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 0.5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Roughness.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_B99DDB0936483675" (
            references = None
        )
        {
            def Xform "ref_c47cd9ca3f5044d38264b775389eb2e2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/vendingmachine_door.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "vending_machine_door_buttons"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-16.06608, 1.70628, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "vending_machine_door"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "vending_machine_006"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (-16.06608248530756, 1.7062812049489366, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "vendingmachinesoda01a_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Diffuse.dds@ (
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 0.5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "vendingmachinesoda01a_button_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 0.5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Interiors_VendingMachineSoda/textures/VendingMachineSoda_Buttons_Roughness.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F6DBE969FB1457AB" (
            references = None
        )
        {
            def Xform "ref_6242faea502e47d991151d26f89d80bb" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Computer_A_Keyboard/SM_Prop_C17_Computer_A_Keyboard.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "keyboard"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "Mesh"
                    {
                        float3 xformOp:rotateXYZ = (0, 5, 3)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (2.6395704694050437, -2.3117635254138804, 1.3535727636698915)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "M_Prop_C17_Computer_A_Keyboard"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Computer_A_Keyboard/textures/T_M_Prop_C17_Computer_A_Keyboard_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            float inputs:emissive_intensity = 40 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Computer_A_Keyboard/textures/T_M_Prop_C17_Computer_A_Keyboard_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Computer_A_Keyboard/textures/T_M_Prop_C17_Computer_A_Keyboard_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Computer_A_Keyboard/textures/T_M_Prop_C17_Computer_A_Keyboard_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Computer_A_Keyboard/textures/T_M_Prop_C17_Computer_A_Keyboard_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }


        over "mesh_B234E61C13F162C8" (
            references = None
        )
        {
            def Xform "ref_3dac3e20b22a4544a23537c6eb2d22c2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/SM_Prop_Junk_Cardboard_Box_A01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Junk_Cardboard_Box_A01"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_Junk_Cardboard_Box_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/textures/T_Prop_Junk_Cardboard_Box_A01_BaseColor_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/textures/T_Prop_Junk_Cardboard_Box_A01_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/textures/T_Prop_Junk_Cardboard_Box_A01_Roughness_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_63ADAF0ABB588812" (
            references = None
        )
        {
            def Xform "ref_55db3516b7574512a141a5a8808cecea" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/SM_Prop_Junk_Cardboard_Box_B01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Junk_Cardboard_Box_B01"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_Junk_Cardboard_Box_B01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/textures/T_Prop_Junk_Cardboard_Box_B02_BaseColor_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/textures/T_Prop_Junk_Cardboard_Box_B02_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/textures/T_Prop_Junk_Cardboard_Box_B02_Roughness_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_B206E2D285E7AE82" (
            references = None
        )
        {
            def Xform "ref_b85a77f6900a4714ad3a117a61675540" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/SM_Prop_Junk_Cardboard_Box_B02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Junk_Cardboard_Box_B02"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_Junk_Cardboard_Box_B02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/textures/T_Prop_Junk_Cardboard_Box_B02_BaseColor_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/textures/T_Prop_Junk_Cardboard_Box_B02_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_B/textures/T_Prop_Junk_Cardboard_Box_B02_Roughness_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_E2BF3FF2E1EEAB15" (
            references = None
        )
        {
            def Xform "ref_d1b8b0376a19498d9f6d1554ac475cd9" (
                prepend references = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/SM_Furniture_Lab_FileCabinet_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "file_cabinet_a_interactive_drawer_3_vmdl_c_file_cabinet_a_inter"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "filecabinet_b"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Color_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Roughness_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }


        over "mesh_5C151478F96F37B1" (
            references = None
        )
        {
            def Xform "ref_2086233a51e74130a31193db121912cf" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_OilBarrel"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "OilBarrel_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_OilBarrel_A_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_OilBarrel_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_OilBarrel_A_Normal_1_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_OilBarrel_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8E6E685345C315C7" (
            references = None
        )
        {
            def Xform "ref_940dc1ebde7f4a878cdbbaf534004fe2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_FloorCable/SM_Prop_Lab_FloorCable.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lab_FloorCable"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-1.4, 9.458744898438454e-11, 0.12)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Prop_FloorCable"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FloorCable/textures/T_Prop_Lab_FloorCable_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FloorCable/textures/T_Prop_Lab_FloorCable_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FloorCable/textures/T_Prop_Lab_FloorCable_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FloorCable/textures/T_Prop_Lab_FloorCable_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }



        over "mesh_FB31351E26873B98" (
            references = None
        )
        {
            def Xform "ref_ad7a2040b96b4d38a9c80eb8a8627dee" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_bracketed_long.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_010"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_2188E937D597E457" (
            references = None
        )
        {
            def Xform "ref_cde83b3cf0464221abb9046130e458f6" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_bracketed_short.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_011"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_9B981865AA197935" (
            references = None
        )
        {
            def Xform "ref_3592475ea4a141cfa4e0957015e6c2e8" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_thin_long.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_016"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_5F1C511AC0564FAF" (
            references = None
        )
        {
            def Xform "ref_12cc81a7d62d449b88b20d631a882960" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_thin_medium.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_018"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_21693766773EAF22" (
            references = None
        )
        {
            def Xform "ref_8a438a55bc9e4c79a1f6aa1f82a19860" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_thin_short.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_019"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_0E4DA6A733A508F2" (
            references = None
        )
        {
            def Xform "ref_95567d9ffdb1473da6d33c3d9ea43812" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_thin_bent.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_015"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_8C399A8D1C52EA70" (
            references = None
        )
        {
            def Xform "ref_e8865fc8582c4eb4ad09a22d14c054ce" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_thin_lshape.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_017"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F020AC5E2DABDCDF" (
            references = None
        )
        {
            def Xform "ref_6f28f489cca1413cba33274c2e99e8b6" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_horizontal_large.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (-90.00000000000051, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_012"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_DC7AFA52DAFBA78A" (
            references = None
        )
        {
            def Xform "ref_5b36e7f9432e4521a5e8081414c7c0e7" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_horizontal_thin.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_014"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_AF37A5DD94935F9B" (
            references = None
        )
        {
            def Xform "ref_60bb7d5c4d2848c6a4613973f0b683c7" (
                prepend references = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/pipesystem_horizontal_small.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]


                over "Looks"
                {
                    over "pipesystem_set_013"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_FIxture_Lab_Pipes_PipesystemSet/textures/T_SM_FIxture_Lab_Pipes_PipesystemSet_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }




        over "mesh_2C4E026E66C30C3D" (
            references = None
        )
        {
            def Xform "ref_dc5104e7a681474897a6c63362ec66da" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Frame_A/SM_Fixture_Lab_Frame_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Frame_A"
                {
                    over "SM_Fixture_Lab_Frame_A_Main"
                    {
                        float3 xformOp:rotateXYZ = (90, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }

                    over "SM_Fixture_Lab_Frame_A_Glass"
                    {
                        float3 xformOp:rotateXYZ = (90, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "Looks"
                {
                    over "M_Frame_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Frame_A/textures/T_M_Frame_A_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Frame_A/textures/T_M_Frame_A_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Frame_A/textures/T_M_Frame_A_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Frame_A/textures/T_M_Frame_A_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_0C4D28C6972B4062" (
            references = None
        )
        {
            def Xform "ref_2f41ee18dc8748b9802978de62f154cf" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/SM_Prop_Lightbulb_01a_Set.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Prop_Lightbulb_01a_Set_Glass"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }

                over "Prop_Lightbulb_01a_Set_Lamp"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_Lightbulb_01a_Set_Lamp"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "Prop_Lightbulb_01a_Set_Glass"
                    {
                        over "Shader"
                        {
                            float inputs:ior_constant = 1.8 (
                                customData = {
                                    float default = 1.3
                                    dictionary range = {
                                        float max = 3
                                        float min = 1
                                    }
                                }
                                displayGroup = "Specular"
                                displayName = "Index of Refraction"
                                doc = "Index of Refraction of the material"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Glass_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            float inputs:transmittance_measurement_distance = 100 (
                                customData = {
                                    float default = 1
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0.001
                                    }
                                }
                                displayGroup = "Volume"
                                displayName = "Transmittance Measurement Distance"
                                doc = "Distance to match the transmittance through the volume at."
                                hidden = false
                            )
                            asset inputs:transmittance_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/Bulb_Glass_Diffuse.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Volume"
                                displayName = "Transmittance or Diffuse Albedo Texture"
                                doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                hidden = false
                            )
                            bool inputs:use_diffuse_layer = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Volume"
                                displayName = "Use diffuse layer"
                                doc = "When set, simulates a diffuse layer on top of the material"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }



        over "mesh_97068D278831E7C6" (
            references = None
        )
        {
            def Xform "ref_3b2c4f68bcd041d89ac174fe2dedc74e" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/SM_Prop_C17_Canister_A1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_Canister_A1"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }

                over "Looks"
                {
                    over "canister01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_7232113F4415B890" (
            references = None
        )
        {
            def Xform "ref_04a83a9aefb447a0bd3bec4c4014680b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/SM_Prop_C17_Canister_B1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_Canister_B1"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }

                over "Looks"
                {
                    over "canister01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Canister_Set/textures/T_Canister01a_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }



        over "mesh_64DB2DFBCF8F6F44" (
            references = None
        )
        {
            def Xform "ref_613682a54f6f4f638e0f6a786755dd22" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/SM_Fixture_Lab_HEV_Machine_A1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_HEV_Machine_A1_04"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }

                over "SM_Fixture_Lab_HEV_Machine_A1_Glass_03"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Fixture_Lab_HEV_Machine_A1_03"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Fixture_Lab_HEV_Machine_A1_02"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Fixture_Lab_HEV_Machine_A1_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "SM_Fixture_Lab_HEV_Machine_A1_04"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_BaseColor_A1_04_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Metallic_A1_04_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Normal_A1_04_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Roughness_A1_04_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "SM_Fixture_Lab_HEV_Machine_A1_03"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_BaseColor_A1_03_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Metallic_A1_03_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Normal_A1_03_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Roughness_A1_03_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "SM_Fixture_Lab_HEV_Machine_A1_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_BaseColor_A1_02_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Metallic_A1_02_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Normal_A1_02_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Roughness_A1_02_Rough.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "SM_Fixture_Lab_HEV_Machine_A1_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_BaseColor_A1_01_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Emissive_A1_01_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Metallic_A1_01_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Normal_A1_01_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Machine/textures/T_Fixture_Lab_HEV_Machine_Roughness._A1_01_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_C436C15B6172A648" (
            references = None
        )
        {
            def Xform "ref_e2265429b404439f90846ffed2d938ac" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Glass_Window_041/SM_Prop_Glass_Window_041.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Prop_Glass_Window_041_Frame"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Glass_Window_041_Glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_Glass_Window_041_Frame"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Glass_Window_041/textures/T_Prop_Glass_Window_041_Frame_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Glass_Window_041/textures/T_Prop_Glass_Window_041_Frame_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Glass_Window_041/textures/T_Prop_Glass_Window_041_Frame_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Glass_Window_041/textures/T_Prop_Glass_Window_041_Frame_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "SM_Prop_Glass_Window_041_Glass"
                    {
                        over "Shader"
                        {
                            bool inputs:thin_walled = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Specular"
                                displayName = "Thin-walled"
                                doc = "Whether the material is thin-walled"
                                hidden = false
                            )
                            float inputs:transmittance_measurement_distance = 45000 (
                                customData = {
                                    float default = 1
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0.001
                                    }
                                }
                                displayGroup = "Volume"
                                displayName = "Transmittance Measurement Distance"
                                doc = "Distance to match the transmittance through the volume at."
                                hidden = false
                            )
                        }
                    }
                }
            }
        }



        over "mesh_1A168A57E7BB2CBB" (
            references = None
        )
        {
            def Xform "ref_9d7ca677ac714238b7a133cbe349e0b4" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "node_SM_Prop_C17_MetalLadder"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "material_SM_Prop_C17_MetalLadder"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_8BF0FD98349FC6A9" (
            references = None
        )
        {
            def Xform "ref_2f5cf4d8b31947f6a9e4feaf951137ef" (
                prepend references = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/SM_Furniture_Lab_Lockers.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Furniture_Lab_Lockers_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "lockers1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "lockers3"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_3_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_3_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_3_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_3_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "lockers2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_2_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_2_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_2_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_2_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_230A5620B5467CA0" (
            references = None
        )
        {
            def Xform "ref_c98e9a85a31b4b7dac503655dc2c84dd" (
                prepend references = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/SM_Furniture_Lab_Lockers_Door_Single.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Furniture_Lab_Lockers_Door_Single_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_Door_Single_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_Door_Single_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "lockers3"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_3_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_3_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_3_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_3_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "lockers1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "lockers2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_2_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_2_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_2_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_2_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_306CC77DE26A4489" (
            references = None
        )
        {
            def Xform "ref_842f5fca13324c5b83ff0879ab2b2273" (
                prepend references = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/SM_Furniture_Lab_Lockers_Door_R.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Furniture_Lab_Lockers_Door_R_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_Door_R_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_Door_R_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "lockers3"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_3_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_3_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_3_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_3_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "lockers1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "lockers2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_2_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_2_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_2_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_2_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_EC2F21E7D9A63BEF" (
            references = None
        )
        {
            def Xform "ref_22a24409a05149a3ba2ff7114d3fc091" (
                prepend references = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/SM_Furniture_Lab_Lockers_Door_L.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Furniture_Lab_Lockers_Door_L_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_Door_L_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Furniture_Lab_Lockers_Door_L_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "lockers3"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_3_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_3_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_3_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_3_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "lockers1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "lockers2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Albedo_2_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Metal_2_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Normal_2_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Lockers/textures/T_Furniture_Lab_Lockers_Rough_2_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }





        over "mesh_440CE3EC98C2D21C" (
            references = None
        )
        {
            def Xform "ref_126d77f332b54b0ba9019a12b5315ece" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder_EndCap.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "LadderB2_001"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }

                over "Looks"
                {
                    over "material_SM_Prop_C17_MetalLadder"
                    {
                        over "Shader"
                        {
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }


        over "mesh_12FD72A3E0C2BF1E" (
            references = None
        )
        {
            def Xform "ref_133ff69dea764994bd9c04029a269f71" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/SM_Prop_Metal_Truss_022a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Metal_Truss_022a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Truss_2"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Truss_1"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Truss_3"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Truss_3"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Albedo_3_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Metal_3_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Normal_3_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Rough_3_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "Truss_1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Normal_2_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "Truss_2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Albedo_2_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Metal_2_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Normal_3_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Truss_022a/textures/T_Prop_Metal_Truss_022a_Rough_2_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }




        over "mesh_EDA6A9EAF2EA9816" (
            references = None
        )
        {
            def Xform "ref_9e178830e61f4629867b8a892d2f9245" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/SM_Prop_Lab_Workspace001.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "radcase_yellow"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace_Computer_AC_Front"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace_Computer_AC_Back"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace001_Shelves"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace001_Desk"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace_ToolTray"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace_001_Radio_B"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace001_LCD"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace001_Cables"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "radcase_red"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "monitor_body"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)

                    over "Mesh_002"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (-0.5237595241501367, 1.6370904631912708e-11, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "monitor_screen"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1.01, 1.01, 1.01)
                    double3 xformOp:translate = (-0.05563274238761551, -0.0882684157404583, -0.4140308033236996)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "radcase_yellow"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Albedo_Yellow_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "radcase_red"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Albedo_Blue_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace_Computer_AC_Front"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Front_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace_Computer_AC_Back"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Metal_Metallic.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace001_Shelves"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace001_Desk"
                    {
                        over "Shader"
                        {
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Desk_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace_ToolTray"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace_001_Radio_B"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_B_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_B_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_B_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_B_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_B_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace001_LCD"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace001_Cables"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Cables_Albedo_Diffuse.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Cables_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Cables_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Cables_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Cables_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "monitor02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_monitor02_color_workspace_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_monitor02_color_workspace_emissive_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace001_LCD_2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_2_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 2 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_2_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Lab_Workspace001_Cables_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Cables_02_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Cables_02_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Cables_02_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Lab_Workspace001_Radios"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "screen_glass"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity = 0 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_tv_soviet_screen_normal_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace_001_Papers"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Papers_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Papers_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Papers_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace_001_Radio_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_A_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_A_Emissive.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_A_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_001_Radio_A_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }

                over "SM_Prop_Lab_Workspace001_LCD_2"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace001_Cables_02"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "M_Prop_Lab_Workspace001_Radios"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace_001_Papers"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)

                    over "Plane_121"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, -8.332879)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (6.72631299648674, 2.6690314848756316, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }

                over "SM_Prop_Lab_Workspace_001_Radio_A"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_B43FA759B6FDB360" (
            references = None
        )
        {
            def Xform "ref_55c03566f6d34be984b9411a9643b48b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/SM_Item_HEVSuit.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "arms_low"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "legs_low"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "HEV_torso"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_torso_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_torso_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_torso_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_torso_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "HEV_legs"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_legs_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_legs_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_legs_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Item_HEVSuit/textures/T_HEV_legs_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_EB262ED73D4502D4" (
            references = None
        )
        {
            def Xform "ref_8bbbbcfe9fa24021b941ea5dcd36a00d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/SM_Prop_Junk_Cardboard_Box_A02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Junk_Cardboard_Box_A02"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0.09244107890845044, 1.3186588541714173, -0.00005552339509939941)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_Junk_Cardboard_Box_A02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/textures/T_Prop_Junk_Cardboard_Box_A01_BaseColor_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "::Z73file_3A::Z18E_3A::odessa::hl2rtxremix::omni_core_materials::Base::AperturePBR_Normal::normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/textures/T_Prop_Junk_Cardboard_Box_A01_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_A/textures/T_Prop_Junk_Cardboard_Box_A01_Roughness_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }



        over "mesh_09E2F076FA12DC34" (
            references = None
        )
        {
            def Xform "ref_8c0d24722c71429cbd4a82b610af3d96" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/SM_Fixture_Lab_Sprinklers_No_Supports.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Sprinklers"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Fixture_Lab_Sprinklers"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_E7579EB9F5D70141" (
            references = None
        )
        {
            def Xform "ref_801600be4b604649beac9b2718f2df27" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/SM_Fixture_Lab_Sprinklers.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Sprinklers"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Fixture_Lab_Sprinklers"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Sprinkler_Set/textures/T_Fixture_Lab_Sprinklers_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_1CA9DEF4352CDA77" (
            references = None
        )
        {
            def Xform "ref_7be71c57667d42678f08692a4f24babb" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_E/SM_Fixture_Lab_Powerbox_E.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Powerbox_E"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Fixture_Lab_Powerbox_E"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_E/textures/T_Fixture_Lab_Powerbox_E_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_E/textures/T_Fixture_Lab_Powerbox_E_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_E/textures/T_Fixture_Lab_Powerbox_E_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_E/textures/T_Fixture_Lab_Powerbox_E_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }

            def Xform "ref_e34f9517308446ab85e4c8db7af787c9" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_E/SM_Fixture_Lab_Powerbox_E_Glass.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Powerbox_E_Glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Fixture_Lab_Powerbox_E_Glass"
                    {
                        over "Shader"
                        {
                            float inputs:emissive_intensity (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            bool inputs:enable_emission (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                        }
                    }
                }
            }
        }

        over "mesh_26D93A945EB921E4" (
            references = None
        )
        {
            def Xform "ref_3bdb678a60724b78a1564a159e1a64c6" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/SM_Prop_Wasteland_PrisonPipes_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Pipes_Sewage_001"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "SM_Fixture_Lab_Pipes_Sewage_002"
                {
                    float3 xformOp:rotateXYZ = (90, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M1_Fixture_Lab_Pipes_Sewage"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M1_Fixture_Lab_Pipes_Sewage_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M1_Fixture_Lab_Pipes_Sewage_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M1_Fixture_Lab_Pipes_Sewage_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M1_Fixture_Lab_Pipes_Sewage_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M2_Fixture_Lab_Pipes_Sewage"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M2_Fixture_Lab_Pipes_Sewage_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M2_Fixture_Lab_Pipes_Sewage_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M2_Fixture_Lab_Pipes_Sewage_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_002a/textures/T_M2_Fixture_Lab_Pipes_Sewage_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }




        over "mesh_E72098BF2ADFC63B" (
            references = None
        )
        {
            def Xform "ref_b58c75154ede4a2fbd0e212b5b22b5ee" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/SM_Prop_Metal_Panel_020B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Metal_Panel_020B"
                {
                    float3 xformOp:rotateXYZ = (90, 3.067101e-22, -6.344475e-30)
                    float3 xformOp:scale = (2.54, 2.54, 2.54)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "SM_Prop_Metal_Panel_020B"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020B_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020B_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020B_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020B_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_7B5EA3671B0F88C7" (
            references = None
        )
        {
            def Xform "ref_dcff98d9e9c246d5b6188f06d0afa8eb" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/SM_Fixture_Lab_Powerbox_F.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Powerbox_F"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Fixture_Lab_Powerbox_F"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/textures/T_Fixture_Lab_Powerbox_F_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 20 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/textures/T_Fixture_Lab_Powerbox_F_Emissive.e.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/textures/T_Fixture_Lab_Powerbox_F_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/textures/T_Fixture_Lab_Powerbox_F_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/textures/T_Fixture_Lab_Powerbox_F_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }

            def Xform "ref_9cfd4b11ff874ed2acd106d8889fcf0a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_F/SM_Fixture_Lab_Powerbox_F_Glass.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Fixture_Lab_Powerbox_F_Glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_0B7C1C03CC71CC09" (
            references = None
        )
        {
            def Xform "ref_a30b9f16ddaa4e3d83c06df79569ed20" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/SM_Prop_Metal_Panel_020A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Metal_Panel_020A"
                {
                    float3 xformOp:rotateXYZ = (90, 3.067101e-22, -6.344475e-30)
                    float3 xformOp:scale = (2.54, 2.54, 2.54)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "SM_Prop_Metal_Panel_020A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020A_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020B_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020A_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Metal_Panel_020_Set/textures/T_Prop_Metal_Panel_020A_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F93926E4EE54905F" (
            references = None
        )
        {
            def Xform "ref_0da1eccf00654e989b3a54dc696d6f3a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/SM_Prop_Wasteland_ControlRoomCloset_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "M_Prop_Wasteland_ControlRoomCloset_001a_03"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "M_Prop_Wasteland_ControlRoomCloset_001a_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "M_Prop_Wasteland_ControlRoomCloset_001a_02"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_ControlRoomCloset_001a_03"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Albedo_03.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Normal_03_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Rough_03.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Wasteland_ControlRoomCloset_001a_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Albedo_01.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Metal_01.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Normal_01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Rough_01.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Wasteland_ControlRoomCloset_001a_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Albedo_02.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Normal_02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001a/textures/T_Prop_Wasteland_ControlRoomCloset_001a_Rough_02.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_99A0AEAE71616A34" (
            references = None
        )
        {
            def Xform "ref_f1250763cc704fcf9b87ad69a0e9b852" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/SM_Prop_Wasteland_ControlRoomCloset_001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "M_Prop_Wasteland_ControlRoomCloset_001b_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "M_Prop_Wasteland_ControlRoomCloset_001b_02"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "M_Prop_Wasteland_ControlRoomCloset_001b_03"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_ControlRoomCloset_001b_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Albedo_01.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Normal_01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Rough_01.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Wasteland_ControlRoomCloset_001b_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Albedo_02.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Normal_02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Rough_02.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Wasteland_ControlRoomCloset_001b_03"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Albedo_03.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Normal_03_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_ControlRoomCloset_001b/textures/T_Prop_Wasteland_ControlRoomCloset_001b_Rough_03.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_BB3F7D2285659B76" (
            references = None
        )
        {
            def Xform "ref_b105b23457c341d483b87e4fae9e1633" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/SM_Prop_Junk_Cardboard_box_C1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Junk_Cardboard_box_C1"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (0.97443175, 0.9629561, 1)
                    double3 xformOp:translate = (5.818821002280462, 1.1125489119824579, -1.9476803816748358)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_Junk_Cardboard_box_C1_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/textures/T_Prop_Junk_Cardboard_box_C1_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/textures/T_Prop_Junk_Cardboard_box_C1_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/textures/T_Prop_Junk_Cardboard_box_C1_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_017C3708E9EF7188" (
            references = None
        )
        {
            def Xform "ref_2d4efdacf69e425fb2cc9df37ead1789" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/SM_Prop_Junk_Cardboard_box_C2.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Junk_Cardboard_box_C2"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Junk_Cardboard_box_C1"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/textures/T_Prop_Junk_Cardboard_box_C2_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/textures/T_Prop_Junk_Cardboard_box_C2_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_Cardboard_box_C_Set/textures/T_Prop_Junk_Cardboard_box_C2_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_C21BE3D734D9FDE3" (
            references = None
        )
        {
            def Xform "ref_2a837eea24034926b14e7e6c07ac3142" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_001a/SM_Prop_Wasteland_PrisonPipes_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Wasteland_PrisonPipes_002a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonPipes_002a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_001a/textures/T_Prop_Wasteland_PrisonPipes_002a_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_001a/textures/T_Prop_Wasteland_PrisonPipes_002a_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_PrisonPipes_001a/textures/T_Prop_Wasteland_PrisonPipes_002a_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }




        over "mesh_1387496D00214E51" (
            references = None
        )
        {
            def Xform "ref_459c63eea6a84fa09b44fabf2b3ac881" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace004/SM_Prop_Lab_Workspace004.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "mesh"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "monitor_screen"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "monitor_body"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace_Computer_AC_Front"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace_Computer_AC_Back"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "radcase_yellow"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "radcase_red"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace_ToolTray"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "M_Prop_Lab_Workspace001_Radios"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace001_Desk"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace001_LCD_Cremator"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace001_LCD"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "SM_Prop_Lab_Workspace001_LCD_2"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "T_SM_Prop_Lab_Workspace001_Shelves"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "T_SM_Prop_Lab_Workspace001_Shelves"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_T_SM_Prop_Lab_Workspace001_Shelves_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace001_Desk"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Desk_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Desk_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Desk_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_Desk_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "M_Prop_Lab_Workspace001_Radios"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_OTH_Normal.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_Prop_Lab_Workspace001_Radios_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace_ToolTray"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_ToolTray_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "radcase_red"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Albedo_Red_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "radcase_yellow"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Albedo_Yellow_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/SM_Prop_Lab_Workspace001_RedCase Set_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "monitor02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_monitor02_color_workspace_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 20 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_monitor02_color_workspace_emissive_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_normal_ogl_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_B/textures/T_monitor02_rough_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace_Computer_AC_Front"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Front_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 20 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Front_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Front_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Front_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Front_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "T_SM_Prop_Lab_Workspace_Computer_AC_Back"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 20 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace_Computer_AC_Back_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace001_LCD"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace001_LCD_2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_2_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_2_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_Lab_Workspace001_LCD_Cremator"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Cremator_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Cremator_Emissive.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Workspace001/textures/T_SM_Prop_Lab_Workspace001_LCD_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }



        over "mesh_327ED511BD37DE99" (
            references = None
        )
        {
            def Xform "ref_94e2a75cad1247ca8179b1d54fe87e24" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/SM_Prop_Lightbulb_01a_Set_Off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Prop_Lightbulb_01a_Set_Glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Prop_Lightbulb_01a_Set_Lamp"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_Lightbulb_01a_Set_Lamp"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Albedo_Diffuse.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_OTH_Normal.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lightbulb_01a_On/textures/T_Prop_Lightbulb_01a_Set_Lamp_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_EF07EB93DE853249" (
            references = None
        )
        {
            def Xform "ref_a50615f82acb47b59ef1983a718b309e" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/SM_Prop_Lab_Receiver_D.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lab_Receiver_D"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Lab_Receiver_C_D"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 0.1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Emissive.e.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_EE80000E2F159971" (
            references = None
        )
        {
            def Xform "ref_dfc262f406324f2c9fc739cc46eaa73f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/SM_Prop_Lab_Receiver_C.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lab_Receiver_C"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Lab_Receiver_C_D"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 0.1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = """Intensity of the emission

"""
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Emissive.e.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = """The texture masking the emissive color

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = """Enables the emission of light from the material

"""
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Receiver_C_D/textures/T_Prop_Lab_Receiver_C_D_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_DD4562D9FF2713AC" (
            references = None
        )
        {
            def Xform "ref_5717a0730bb04ae39a7a782b120be080" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_001a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_ADBC613B5C925CB9" (
            references = None
        )
        {
            def Xform "ref_b7ab3bdebb66453eb839dea0a336d3ae" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_002a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_E0D931F8B17E91C6" (
            references = None
        )
        {
            def Xform "ref_4ce5fa45d2724e34b066bb6db85d4320" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_003a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_003a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_002"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_ECF46B4ED17B7C78" (
            references = None
        )
        {
            def Xform "ref_c0ea106755c548768fa6240b50ee1227" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_004a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_004a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_003"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_90E10B277F339BD0" (
            references = None
        )
        {
            def Xform "ref_93d62f5df8294bc98104d3ca55c855d5" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_005a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_005a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_004"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_7818DD2362D5A7B3" (
            references = None
        )
        {
            def Xform "ref_3222ef309d8f4c2eb1066ff53247b16d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_006a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_006a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_005"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F8A46849D692FE62" (
            references = None
        )
        {
            def Xform "ref_a4891834157e43cdb0785da44cd66ab7" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_Extender_64.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_Extender_64"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_006"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_D9DA4730D3C8796C" (
            references = None
        )
        {
            def Xform "ref_e06aae3eee87452b9e185383d75d7292" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/SM_Prop_PipeCluster_08d_Extender_128.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_PipeCluster_08d_Extender_128"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_PipeCluster_08d_Set_007"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_PipeCluster_08d_Set/textures/T_Prop_PipeCluster_08d Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }



        over "mesh_84353D1EAC5C288F" (
            references = None
        )
        {
            def Xform "ref_41a95e3767914f669fe0047c7fc22c07" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_D/SM_Fixture_Lab_Powerbox_D.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Powerbox_D"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "SM_Fixture_Lab_Powerbox_D"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_D/textures/SM_Fixture_Lab_Powerbox_D_BaseColor.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_D/textures/SM_Fixture_Lab_Powerbox_D_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_D/textures/SM_Fixture_Lab_Powerbox_D_Normal_DIRECTX_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_D/textures/Powerbox_D_UVGrid_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4634EADDD786BE92" (
            references = None
        )
        {
            def Xform "ref_0248f56e420c49faa8ab50596e85a821" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/SM_Prop_Interiors_Furniture_CabinetDrawer_02a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "wood_cupboard_bottom"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "furniture_cabinetdrawer02a_glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "wood_cupboard_top"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "wood_cupboard_bottom"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_bottom_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_bottom_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_bottom_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_bottom_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "wood_cupboard_top"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_top_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_top_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_top_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer02a_top_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "wood_cupboard_top_glass"
                    {
                        over "Shader"
                        {
                            color3f inputs:diffuse_color_constant (
                                customData = {
                                    float3 default = (0.2, 0.2, 0.2)
                                    dictionary range = {
                                        float3 max = (1, 1, 1)
                                        float3 min = (0, 0, 0)
                                    }
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Base Color"
                                doc = "The base albedo color to use if no texture is specified"
                                hidden = false
                                renderType = "color"
                            )
                            color3f inputs:emissive_color_constant (
                                customData = {
                                    float3 default = (1, 0.1, 0.1)
                                    dictionary range = {
                                        float3 max = (1, 1, 1)
                                        float3 min = (0, 0, 0)
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Color"
                                doc = "The emissive color when no emissive color texture is specified."
                                hidden = false
                                renderType = "color"
                            )
                            float inputs:emissive_intensity (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            bool inputs:enable_emission (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            float inputs:opacity_constant (
                                customData = {
                                    float default = 1
                                    dictionary range = {
                                        float max = 1
                                        float min = 0
                                    }
                                }
                                displayGroup = "Diffuse"
                                displayName = "Opacity Amount"
                                doc = "Used when no albedo texture is specified. 0 for completely transparent, 1 for completly opaque."
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_233913A5EB388900" (
            references = None
        )
        {
            def Xform "ref_1b1fed5d182040d398b743138be61522" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/SM_Prop_Interiors_Furniture_CabinetDrawer_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "furniture_cabinetdrawer01a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "furniture_cabinetdrawer01b_base"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "furniture_cabinetdrawer01b_door_glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "cabinet_01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "cabinet_01b"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01b_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01b_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01b_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_CabinetDrawer_Set/textures/furniture_cabinetdrawer01b_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }

                over "furniture_cabinetdrawer01a_001"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                }
            }
        }

        over "mesh_6BD83505585457EE" (
            references = None
        )
        {
            def Xform "ref_9938ec7233eb4280b01b869cee1f2892" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail_Cap_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail_Cap"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_70CE30FB90118387" (
            references = None
        )
        {
            def Xform "ref_fd7f3d3943124251a557ffcf414aad0c" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_End_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_End"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_B587A597EF46F6E6" (
            references = None
        )
        {
            def Xform "ref_d0cb144f1edc4f789b4d3d92e58612a9" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Corner_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Corner"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_3D8BD9CD19442236" (
            references = None
        )
        {
            def Xform "ref_3005bcc4f30d436395891f72015ec986" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Doublerise_Cap_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Doublerise_Cap"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_08D4614DD31D1346" (
            references = None
        )
        {
            def Xform "ref_8009b3c1d6c147b0b1e58a96360f822f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Singlerise_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Singlerise"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_2D0277FCBCA6C944" (
            references = None
        )
        {
            def Xform "ref_65416c6aa89d4521a6712b300f95ae05" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Brokensinglerise_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Brokensinglerise"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_494DB74F12963546" (
            references = None
        )
        {
            def Xform "ref_ce6d2280571f4ec88630ef98bfb9a562" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Brokenlong_Cap_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Brokenlong_Cap"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F80DB04AF7BDDC9F" (
            references = None
        )
        {
            def Xform "ref_7eab82ee332f4a8a99a4e869db2b85b8" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Brokencorner_Cap_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Brokencorner_Cap"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_6D93B62208752E3B" (
            references = None
        )
        {
            def Xform "ref_51a1a6d55f7643558e40b5e48d1a73d6" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Long_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Long"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_D4446841FDE879C1" (
            references = None
        )
        {
            def Xform "ref_ba4bd7e2ff8d472286fe0b848c4983d5" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Short_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Short"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_02_004"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_3ECE348C4B13A127" (
            references = None
        )
        {
            def Xform "ref_c1450d4e0de84b4588b1febea615835d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/SM_Prop_Handrail04_Medium_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Handrail04_Short"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Prop_C17_Handrail04_Set_02"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Handrail04/textures/T_Prop_C17_Handrail04 Set 02_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_2378CE8D840ACE8F" (
            references = None
        )
        {
            def Xform "ref_dda0cbdb51e74f1c85ae0e50049982d0" (
                prepend references = @./assets/ch2_redletterday/models/SM_Item_Healthkit/SM_Item_Healthkit.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "healthvial_juice"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "healthvial_glass"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "healthvial"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "healthkit"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "healthkit_lights"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "healthkit"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_Base_Color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "healthkit_lights"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_lights_Base_Color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_lights_Emissive.e.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_lights_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthkit_lights_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "healthvial"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_Base_Color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 10 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_Emissive.e.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "healthvial_juice"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_juice_Base_Color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 2.5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_juice_Emissive.e.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emission"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emission"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = true
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_juice_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_juice_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Item_Healthkit/textures/healthvial_juice_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "healthvial_glass"
                    {
                        over "Shader"
                        {
                            float inputs:ior_constant = 2 (
                                customData = {
                                    float default = 1.3
                                    dictionary range = {
                                        float max = 3
                                        float min = 1
                                    }
                                }
                                displayGroup = "Specular"
                                displayName = "Index of Refraction"
                                doc = "Index of Refraction of the material"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }



        over "mesh_9E288C2E03CF10D7" (
            references = None
        )
        {
            def Xform "ref_05d7ae7ed03c47368f93bfb0273808b2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder_Tan.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_C17_MetalLadder_Tan"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C032E5957CB6EE70" (
            references = None
        )
        {
            def Xform "ref_f223811293034ff6b91730411cc04338" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder_EndCap_Tan.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (89, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_C17_MetalLadder_Tan"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DB4D77D01F9E7F7E" (
            references = None
        )
        {
            def Xform "ref_e180efa322794da9973430643d5d6066" (
                prepend references = @./assets/ch2_redletterday/models/SK_Prop_Junk_Cardboard_Box_D_Set/SM_Prop_Junk_Cardboard_Box_D1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:translate:pivot = (0, 0, 0)
                }
            }
        }

        over "mesh_77161C0692962593" (
            references = None
        )
        {
            def Xform "ref_84dcd23eaa3a4b269522d0f37a2edc37" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder_Large.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (-6.714628852932947e-13, -52.192845477981194, -1.7763568394002505e-15)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "material_SM_Prop_C17_MetalLadder_001"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_Metal_Metallic.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_ SM_Prop_C17_MetalLadder_OTH_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "node_SM_Prop_C17_MetalLadder_001"
                        {
                            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (0, 0, -5219.54931640625)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_F3281A7F76E219FF" (
            references = None
        )
        {
            def Xform "ref_6f879051968846048c0a52422dec9b9b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder_Large_Tan.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, -52.19285, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "material_SM_Prop_C17_MetalLadder_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_PaintedLadder_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_60833163889D81ED" (
            references = None
        )
        {
            def Xform "ref_3e9fd2a774d6443eaa35c7366203ccda" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_B2/SM_Fixture_Lab_Light_Flourescent_B2.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "light_low_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (1.6091, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Fixture_lab_Light_Flourescent_B2"
                    {
                        over "Shader"
                        {
                            bool inputs:enable_emission = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_6D26226E92FAAEA0" (
            references = None
        )
        {
            def Xform "ref_beb0ef5152d0410eb84e8977f29232f9" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/SM_Fixture_Lab_Light_Flourescent_A1_off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "shroud_low_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Fixture_Lab_Light_Flourescent_A1"
                    {
                        over "Shader"
                        {
                            asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/textures/T_Fixture_Lab_Light_Flourescent_A_Metal_Metallic.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A1/textures/T_Fixture_Lab_Light_Flourescent_A_Rough.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F2B548BB5BB34D2A" (
            references = None
        )
        {
            def Xform "ref_9212d5fb8c4c4d2c9dbb60dfbcf079ce" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_B1/SM_Fixture_Lab_Light_Flourescent_B1.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Fixture_Lab_Light_Flourescent_B1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Albedo_Diffuse.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Metal_Metallic.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_OTH_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_226EB00E3F4381D9" (
            references = None
        )
        {
            def Xform "ref_449b06017b5342ffb36e403d2ae8433d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_B1/SM_Fixture_Lab_Light_Flourescent_B1_On.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Fixture_Lab_Light_Flourescent_B1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Albedo_Diffuse.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Emissive.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Metal_Metallic.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_OTH_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Light_Flourescent_A2/textures/T_Fixture_Lab_Light_Flourescent_A_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_73958018464F1217" (
            references = None
        )
        {
            def Xform "ref_d0c74faeb1134621b4fc966210514b59" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/SM_Prop_C17_Fence_01a_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_3FC4226E043B91BF" (
            references = None
        )
        {
            def Xform "ref_bf4668a07c2349fc8c6b23117cf14a5a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/SM_Prop_C17_Fence_02a_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set_009"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9260834DA4D32240" (
            references = None
        )
        {
            def Xform "ref_5e0851573f23465a89a3981b0fa32748" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/SM_Prop_C17_Fence_02b_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set_011"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_65ABBF50C7835101" (
            references = None
        )
        {
            def Xform "ref_861ed443ed2a4a69a90cea11d5a06bb8" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/SM_Prop_C17_Fence_04a_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set_012"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_44C7D70B99F4EB5A" (
            references = None
        )
        {
            def Xform "ref_b32f60209ff047b8974d066e0124312c" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/SM_Prop_C17_Fence_01b_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B3D339BC123F1354" (
            references = None
        )
        {
            def Xform "ref_80b06217ba4c42f18cddbf6487c811f3" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/SM_Prop_C17_Fence_03a_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_B2FEB2F527544D62" (
            references = None
        )
        {
            def Xform "ref_b59c8de436e9494ead041b0b6c9fba63" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_002e.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_gateFrame"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_47C65FB1A6151BC6" (
            references = None
        )
        {
            def Xform "ref_391a434119324452aeeec9b65c5e6520" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_001g.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-7.993605777301127e-13, 1.137970683202866, -2.1435666410752674)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_gate_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_gate_Trim_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_12D8AE6572EAAE6B" (
            references = None
        )
        {
            def Xform "ref_821ff2a6859c4b1e89135ef890592485" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_002d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_C01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Albedo.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_C01_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }




        over "mesh_A618AFCA01F4399E" (
            references = None
        )
        {
            def Xform "ref_4a5d0df169ea4809a5e2123cdc68f6de" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_B01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FE3951259B2261EF" (
            references = None
        )
        {
            def Xform "ref_f0c58176e80147c391ab114a657a0a3d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_A01_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_A01_Trim_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_ACCA1AD409D3A7F8" (
            references = None
        )
        {
            def Xform "ref_28e095dcf34548d5b53e446e03debf1f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_C.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3578CB9D26189C37" (
            references = None
        )
        {
            def Xform "ref_044a710b4a3d4a7e8b5b87d38ce7b681" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_D.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0D26A1EEB54BDAF5" (
            references = None
        )
        {
            def Xform "ref_f3e6d71332b548f590f37ce74dfc0ffb" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_E.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A2_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_63A802B4D1736767" (
            references = None
        )
        {
            def Xform "ref_ad9f1f4bbc4a4a78a6325888beb77d30" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_F.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A3"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A3_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A3_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A3_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A3_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0681827E5DCA44E0" (
            references = None
        )
        {
            def Xform "ref_bbaf77d7d31f424592a168770f74dcac" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_G.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_838E9C654DFD59A7" (
            references = None
        )
        {
            def Xform "ref_ff4efb2646144900aaa56926508acf07" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrum_H.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A4_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7333F5C8C0C14161" (
            references = None
        )
        {
            def Xform "ref_4438ab45878d43ff895dc9017728073b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrumChunk_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8EE2EEC2EA7BBB9D" (
            references = None
        )
        {
            def Xform "ref_ef4f539ea5e542dc99ac068487a28376" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrumChunk_01b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A3"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_695F60E3EA709040" (
            references = None
        )
        {
            def Xform "ref_c2e29379e84d4ac2887fe9b2e5680581" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrumChunk_01c.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_719CF69B07D9275B" (
            references = None
        )
        {
            def Xform "ref_c1a4f265bd4a4c06b021ffd32b962448" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrumChunk_01d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2701722B1E8EBE18" (
            references = None
        )
        {
            def Xform "ref_a0024cf15c1d424798c30f06772a2804" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/SM_Prop_C17_OilDrumChunk_01e.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_OilDrum_Set_A1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_OilDrum_Set/SM_Prop_C17_OilDrum_A/textures/T_Prop_C17_OilDrum Set_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AFBB6D559EF099A0" (
            references = None
        )
        {
            def Xform "ref_e4941561328341fd8e6255377457599a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Junk_WoodCrate_002a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_94B1106ADF84FD3E" (
            references = None
        )
        {
            def Xform "ref_e9f0debebfb44865aea19479e7dbf928" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Junk_WoodCrate_002a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_002a_skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F0A05B9C8018772A" (
            references = None
        )
        {
            def Xform "ref_e14dfe630d284a048d631d1582f90307" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CBAA26A3C16C13B4" (
            references = None
        )
        {
            def Xform "ref_04f765a846854586a258e2ac6561152d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E9748720DBE05AF8" (
            references = None
        )
        {
            def Xform "ref_89e9431c38064d5ba7e72dfd1be2d09d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D27EFA1F9A943E66" (
            references = None
        )
        {
            def Xform "ref_89ecb981ee48407da88ff0a6a001ced2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8FA0B7F05B0CE926" (
            references = None
        )
        {
            def Xform "ref_378017feb7d049d19a9c7151a9eedb3e" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, -90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B4AACACF1A788DB8" (
            references = None
        )
        {
            def Xform "ref_b198b8e90b774824b6a2564291c310d4" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, -90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_083852A6BBBEB523" (
            references = None
        )
        {
            def Xform "ref_b9b54da1f20449d78e0c0078a9a58ee4" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_33322F99FACAD1BD" (
            references = None
        )
        {
            def Xform "ref_b072f3190f8b413e8c4f70947192ab89" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ABE9949AC959B1E6" (
            references = None
        )
        {
            def Xform "ref_c985805ad290419a84a7f2aa05377b9d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_90E3E9A5882DD578" (
            references = None
        )
        {
            def Xform "ref_9e45b95745154a2eb640c14b8a05a0eb" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7515EEC79082AA82" (
            references = None
        )
        {
            def Xform "ref_2681c9927e2540b1a7ece725f7e692c6" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk06.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4E1F93F8D1F6CE1C" (
            references = None
        )
        {
            def Xform "ref_bf77f5dfee6c4278806913e59d77ccbe" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk06.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4B06C06917794488" (
            references = None
        )
        {
            def Xform "ref_d963a37e81f944a18e49ce8a2b6ff029" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk07.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_700CBD56560D2016" (
            references = None
        )
        {
            def Xform "ref_8935d567deba486ea97e5fe1f7349a86" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk07.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_42715F364EE23628" (
            references = None
        )
        {
            def Xform "ref_85dad97bff3343e3a7177a810a4ff80a" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk09.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_797B22090F9652B6" (
            references = None
        )
        {
            def Xform "ref_50e5c9331b8945c1a3ace17122ca857f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_Chunk09.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_129E2B0B79938DC5" (
            references = None
        )
        {
            def Xform "ref_d1afdac815414e9cb3c7e3025331c40f" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_C/SM_Fixture_Lab_Powerbox_C.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.0114, 0.011)
                    double3 xformOp:translate = (-0.6174859756902151, -0.07832795766330491, -5.9117155615240335e-12)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Fixture_Lab_Powerbox_B"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Powerbox_C/textures/T_Fixture_Lab_Powerbox_B_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_AC120AC966A1C355" (
            references = None
        )
        {
            def Xform "ref_38d88da91e114d039becdc45667c2756" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_B/SM_Fixture_Wasteland_Light_Spotlight_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_light_spotlight02_lamp"
                {
                    over "light_spotlight02_lamp_vmdl_c_spotlight02_lod0"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 90)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "light_spotlight02_lamp_vmdl_c_spotlight02_lod0" (
                            prepend apiSchemas = ["MaterialBindingAPI"]
                        )
                        {
                            rel material:binding = </RootNode/meshes/mesh_AC120AC966A1C355/ref_38d88da91e114d039becdc45667c2756/SM_light_spotlight02_lamp/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/Looks> (
                                bindMaterialAs = "strongerThanDescendants"
                            )

                            def Material "Looks"
                            {
                                token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_AC120AC966A1C355/ref_38d88da91e114d039becdc45667c2756/SM_light_spotlight02_lamp/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/Looks/Shader.outputs:out>
                                token outputs:mdl:surface.connect = </RootNode/meshes/mesh_AC120AC966A1C355/ref_38d88da91e114d039becdc45667c2756/SM_light_spotlight02_lamp/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/Looks/Shader.outputs:out>
                                token outputs:mdl:volume.connect = </RootNode/meshes/mesh_AC120AC966A1C355/ref_38d88da91e114d039becdc45667c2756/SM_light_spotlight02_lamp/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/light_spotlight02_lamp_vmdl_c_spotlight02_lod0/Looks/Shader.outputs:out>

                                def Shader "Shader"
                                {
                                    uniform token info:implementationSource = "sourceAsset"
                                    uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                    uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_B/SubUSDs/textures/T_spotlight02_color_Diffuse.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_B/SubUSDs/textures/T_spotlight02_metal_Metallic.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_B/SubUSDs/textures/T_spotlight02_rough_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    token outputs:out (
                                        renderType = "material"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EABA3EB7D5A5B2E9" (
            references = None
        )
        {
            def Xform "ref_80a0787ee53e4b3ca0a2bd370ef819dc" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_A_Base/SM_Wasteland_Light_Spotlight02_Base.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "spotlight01_off_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_A_Base/SubUSDs/textures/T_spotlight_01_metal_Metallic.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_A_Base/SubUSDs/textures/T_spotlight_01_normal_ogl_OTH_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Wasteland_Light_Spotlight_A_Base/SubUSDs/textures/T_spotlight_01_rough_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_E6AE91B9E3FF8EC7" (
            references = None
        )
        {
            def Xform "ref_a6b9cacc36f54c6881f59893ead25c27" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Padlock_001a/SM_Prop_Wasteland_Prison_Padlock_Broken.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "padlock"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Padlock_001a/SubUSDs/textures/T_Prop_Padlock_A_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Padlock_001a/SubUSDs/textures/T_Prop_Padlock_A_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Padlock_001a/SubUSDs/textures/T_Prop_Padlock_A_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1FA4D6015C045074" (
            references = None
        )
        {
            def Xform "ref_1c3a0da5456545bfbc1a081d8c5b8569" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/SM_Flixture_Light_Bulkhead.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_5552918B2615BFF3" (
            references = None
        )
        {
            def Xform "ref_8bbba471ce2848febc6d51eac981050b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/SM_Flixture_Light_Bulkhead_Off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_E694E8F4DDFEC5A4" (
            references = None
        )
        {
            def Xform "ref_7baa8ab2ef12433da21724980ecc0c56" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/SM_Flixture_Light_Bulkhead_Red.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_AFA06D1D8941D337" (
            references = None
        )
        {
            def Xform "ref_85dd63c675dc4ae599ce685141bb84d1" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/SM_Flixture_Light_Bulkhead_Red_Off.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_F936221695725E0F" (
            references = None
        )
        {
            def Xform "ref_841a293268934a9ba40eac4409a22ed9" (
                prepend references = @./assets/ch2_redletterday/models/SK_Prop_Junk_Cardboard_Box_D_Set/SM_Prop_Junk_Cardboard_Box_D1_Skinned.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over Xform "cardboard_box004a_gib01ragdoll_skeleton0"
                        {
                            over "cardboard_box004a_gib01ragdoll"
                            {
                                uniform token[] skel:joints = None
                                rel skel:skeleton = </RootNode/meshes/mesh_F936221695725E0F/skel>
                            }
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Junk_Cardboard_Box_D1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SK_Prop_Junk_Cardboard_Box_D_Set/SubUSDs/textures/SM_Prop_Junk_Cardboard_Box_D1_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SK_Prop_Junk_Cardboard_Box_D_Set/SubUSDs/textures/SM_Prop_Junk_Cardboard_Box_D1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SK_Prop_Junk_Cardboard_Box_D_Set/SubUSDs/textures/SM_Prop_Junk_Cardboard_Box_D1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Junk_Cardboard_Box_D1_Transparent"
                            {
                                over "Shader"
                                {
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_3ECAD180C13EA9FC" (
            references = None
        )
        {
            def Xform "ref_6804dd2aea174802a644cfe89885e438" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_001d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01_Trim_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_C01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Albedo.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_C01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_C01_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_73139DED87A3E7B2" (
            references = None
        )
        {
            def Xform "ref_2fe21ea3f2204bda8f74cf78f02c3ae3" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1.07, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_A01_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_A01_Trim_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9821F25419B83429" (
            references = None
        )
        {
            def Xform "ref_b54d9864419743dc9e3aab7da8738dca" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_gateFrame"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_gateFrame_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_5DFC6AE92409A424" (
            references = None
        )
        {
            def Xform "ref_ac5c4e8afb134de9b528a1cebfa6f546" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01_Trim_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_2F57616E1346C76D" (
            references = None
        )
        {
            def Xform "ref_a5ba1ee6a0d64409b13171eb939dbe9d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (1, 1, 1.07)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01_Trim_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_E2AFA7CC920A9D29" (
            references = None
        )
        {
            def Xform "ref_8b2ce6bad6c740968478050f133a73a4" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1.07, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_fixture_fence_B01_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0BFE790F5B5E7003" (
            references = None
        )
        {
            def Xform "ref_260720750b8a4f9c89cb9b64aa98e18b" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/SM_Prop_Lab_Teleport_Plug.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "tpplug_plug"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "tpplug_plug"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "tpplug_plug_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0D04B57A40B5DA77" (
            references = None
        )
        {
            def Xform "ref_d1dca04ee15343a0a901f679e35058c0" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/SM_Prop_Lab_Teleport_Plug_Holder_Single.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Fixture_PowerTerminal"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 13, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Fixture_PowerTerminal_A1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Normal_OTH_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_570B448424F2992D" (
            references = None
        )
        {
            def Xform "ref_25fa9c0235284b4f9ae21a4385712dfe" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/SM_Prop_Lab_Teleport_Plug_Holder.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Fixture_PowerTerminal"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_Fixture_PowerTerminal_A1_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Normal_OTH_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "tpplug_plug"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "tpplug_plug_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/tpplug_plug_low_tpplug_plug_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Fixture_PowerTerminal_A1_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Normal_OTH_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Teleport_Plug Set/textures/T_Fixture_PowerTerminal_A1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CB032C77274943D4" (
            references = None
        )
        {
            def Xform "ref_d4ca4199124148f2a8f28a175ed41a70" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_43DCC110D58C621B" (
            references = None
        )
        {
            def Xform "ref_9e41fdcd73b64e928db511032afb8a5d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_003c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1.07)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_fixture_fence_B01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_C0753CA9623E218A" (
            references = None
        )
        {
            def Xform "ref_ae8cf324454b4ad4b89c15f587d3908e" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_001f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01_Trim_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_gateFrame_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_26D75D95AC989B1B" (
            references = None
        )
        {
            def Xform "ref_f4bae6390f0a4570bbe24d328697c38e" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_001b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_A01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_A01_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_A01_Trim_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_DDC02F4627CB1A58" (
            references = None
        )
        {
            def Xform "ref_bc8bfc7d3d074eacb517e6b6d72f0b08" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01_002"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01_Trim_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_51A546C509E62338" (
            references = None
        )
        {
            def Xform "ref_59efdb2c57ea4cd7a807f8af5dfdf2b8" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/SM_Prop_Wasteland_Interior_Fence_001c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_fixture_fence_B01_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_fixture_fence_B01_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_fixture_fence_B01_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Metal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Normal_OTH.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Wasteland_Interior_Fence_Set/textures/T_fixture_fence_A01_Rough.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_E16AE157E273AA62" (
            references = None
        )
        {
            def Xform "ref_c25df63d33644f40b6223c260a08bff7" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_01b/SM_Prop_Lab_Monitor_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "geo_LabMonitor"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "UV"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_01b/textures/T_Prop_Lab_Monitor_01b_Color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_01b/textures/T_Prop_Lab_Monitor_01b_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_01b/textures/T_Prop_Lab_Monitor_01b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_Monitor_01b/textures/T_Prop_Lab_Monitor_01b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_81EE9C1D461D08E3" (
            references = None
        )
        {
            def Xform "ref_3afad6eafa6540859295fc1bf7b4acb5" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/SM_Prop_Lab_FreightElevator_Button.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Lab_FreightElevator_Button"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Lab_FreightElevator_Button_Base"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionGreen.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Lab_FreightElevator_Button_Emission"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Emission_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_25286E21810A1183" (
            references = None
        )
        {
            def Xform "ref_e0d9b650905745cea6985f27997bd0d8" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/SM_Prop_Lab_FreightElevator_Button.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Lab_FreightElevator_Button"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Lab_FreightElevator_Button_Base"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionGreen.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Lab_FreightElevator_Button_Emission"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    color3f inputs:emissive_color_constant = (1, 0, 0) (
                                        customData = {
                                            float3 default = (1, 0.1, 0.1)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Color"
                                        doc = "The emissive color when no emissive color texture is specified."
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:emissive_intensity = 1 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionRed.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Emission_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5AD382FCDCDB8C8C" (
            references = None
        )
        {
            def Xform "ref_0aac29db24c04f9eaac29c8f057e9745" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/SM_Prop_Lab_FreightElevator_Button.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Lab_FreightElevator_Button"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Lab_FreightElevator_Button_Base"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionGreen.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Lab_FreightElevator_Button_Emission"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 1 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionGreen.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Emission_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_42D9D5FE0080CBCE" (
            references = None
        )
        {
            def Xform "ref_92048f938fe94d63992dbd052ea3aeef" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_WoodCrate_001a_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "ReferenceTarget"
                            {
                                over "XForms"
                                {
                                    over "World"
                                    {
                                        over "SM_Prop_Junk_WoodCrate_001a_003"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 0)
                                            float3 xformOp:scale = (1, 1, 1)
                                        }

                                        over "Looks"
                                        {
                                            over "WoodCrate_001_skin0"
                                            {
                                                over "Shader"
                                                {
                                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Albedo/Opacity Map"
                                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Metallic Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Normal Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Roughness Map"
                                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_79D3A8C141F4AF50" (
            references = None
        )
        {
            def Xform "ref_fb7cee1b17d4498d8f37c0c5cbc390c2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_WoodCrate_001a_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "ReferenceTarget"
                            {
                                over "XForms"
                                {
                                    over "World"
                                    {
                                        over "SM_Prop_Junk_WoodCrate_001a_003"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 0)
                                            float3 xformOp:scale = (1, 1, 1)
                                        }

                                        over "Looks"
                                        {
                                            over "WoodCrate_001_skin0"
                                            {
                                                over "Shader"
                                                {
                                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Albedo/Opacity Map"
                                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Metallic Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Normal Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Roughness Map"
                                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F5CDBFE0D6DA10D4" (
            references = None
        )
        {
            def Xform "ref_42c520a2e410469e8fc3e4b51d1c450d" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a_Damaged.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_WoodCrate_001a_Damaged_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "ReferenceTarget"
                            {
                                over "XForms"
                                {
                                    over "World"
                                    {
                                        over "SM_Prop_Junk_WoodCrate_001a_Damaged_005"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 0)
                                            float3 xformOp:scale = (1, 1, 1)
                                        }

                                        over "Looks"
                                        {
                                            over "WoodCrate_001_skin0_001"
                                            {
                                                over "Shader"
                                                {
                                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Albedo/Opacity Map"
                                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Metallic Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Normal Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Roughness Map"
                                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CEC7C2DF97AE744A" (
            references = None
        )
        {
            def Xform "ref_10a21d5c18704e9ca6f6d5724cfa2aa5" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a_Damaged.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_WoodCrate_001a_Damaged_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "ReferenceTarget"
                            {
                                over "XForms"
                                {
                                    over "World"
                                    {
                                        over "SM_Prop_Junk_WoodCrate_001a_Damaged_005"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 0)
                                            float3 xformOp:scale = (1, 1, 1)
                                        }

                                        over "Looks"
                                        {
                                            over "WoodCrate_001_skin0_001"
                                            {
                                                over "Shader"
                                                {
                                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Albedo/Opacity Map"
                                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Metallic Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Normal Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Roughness Map"
                                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_867298CF03452A2B" (
            references = None
        )
        {
            def Xform "ref_f85fd01d5ee74fc680cd94e38c58d824" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a_DamagedMax.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "WoodCrate_001a_DamagedMax_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "ReferenceTarget"
                            {
                                over "XForms"
                                {
                                    over "World"
                                    {
                                        over "WoodCrate_001a_DamagedMax_001"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 0)
                                            float3 xformOp:scale = (1, 1, 1)
                                        }

                                        over "Looks"
                                        {
                                            over "WoodCrate_001_skin0_002"
                                            {
                                                over "Shader"
                                                {
                                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_Albedo.a.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Albedo/Opacity Map"
                                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_metal.m.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Metallic Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin1_OTH_Normal.n.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Normal Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin1_rough.r.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Roughness Map"
                                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BD78E5F042314EB5" (
            references = None
        )
        {
            def Xform "ref_22333824a9584551b784fc90c5d485bd" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a_DamagedMax.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "WoodCrate_001a_DamagedMax_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "ReferenceTarget"
                            {
                                over "XForms"
                                {
                                    over "World"
                                    {
                                        over "WoodCrate_001a_DamagedMax_001"
                                        {
                                            float3 xformOp:rotateXYZ = (0, -0, 0)
                                            float3 xformOp:scale = (1, 1, 1)
                                        }

                                        over "Looks"
                                        {
                                            over "WoodCrate_001_skin0_002"
                                            {
                                                over "Shader"
                                                {
                                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Albedo/Opacity Map"
                                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Metallic Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Normal Map"
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                                        colorSpace = "auto"
                                                        customData = {
                                                            asset default = @@
                                                        }
                                                        displayGroup = "Base Material"
                                                        displayName = "Roughness Map"
                                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                        hidden = false
                                                        renderType = "texture_2d"
                                                    )
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_951A549DDB086F55" (
            references = None
        )
        {
            def Xform "ref_499fa417d95647fd9f1cb09131f5ab4b" (
                prepend references = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/PipeCluster16d_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "pipe_low001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, -90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Pipe_Cluster"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6206FF7C929E73F7" (
            references = None
        )
        {
            def Xform "ref_20b659fa50d844a291851b5ef777d160" (
                prepend references = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/PipeCluster16d_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "pipe_low017"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Pipe_Cluster_001"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C7094D468EDC62B1" (
            references = None
        )
        {
            def Xform "ref_0703589b09b742ecbdc151229845a562" (
                prepend references = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/PipeCluster16d_003a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "pipe_low020"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Pipe_Cluster_002"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch3_routekanal/models/SM_Prop_Pipes_Pipecluster16d_Set/textures/T_Prop_Pipes_Pipecluster16d_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA8BB608A516470E" (
            references = None
        )
        {
            def Xform "ref_b1d1bf79d04448a6ac08cf51a243b305" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Green/SM_Flixture_Light_Bulkhead_Green.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "root"
                    {
                        float3 xformOp:scale = (1, 1, 1)
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "SM_Flixture_Light_Bulkhead__"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Green/textures/T_Fixture_C17_Light_Bulkhead_Red_Albedo.a.rtex.dds@
                                    custom float inputs:emissive_intensity = 0.25
                                    custom asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Green/textures/T_Fixture_C17_Light_Bulkhead_Red_Emissive.e.rtex.dds@
                                    custom bool inputs:enable_emission = 1
                                    custom asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B8E47F45A439536C" (
            references = None
        )
        {
            def Xform "ref_bc45a24f32bb4e1a89581a2844ea1fc2" (
                prepend references = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Green/SM_Flixture_Light_Bulkhead_Green.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "root"
                    {
                        float3 xformOp:scale = (1, 1, 1)
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "SM_Flixture_Light_Bulkhead__"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Green/textures/T_Fixture_C17_Light_Bulkhead_Red_Albedo.a.rtex.dds@
                                    custom asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Emissive.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    over "Looks"
    {



        over "mat_7B45F5D8C0FC4602"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Albedo.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_FA554E5FD6510EA1"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Albedo.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_9F266E165D50CC42"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/textures/T_Fixture_C17_Light_Bulkhead_Red_Albedo.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/textures/T_Fixture_C17_Light_Bulkhead_Red_Emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_980F4649F4EA5997"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/textures/T_Fixture_C17_Light_Bulkhead_Red_Albedo.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_EF75EF9266FDD93B" (
            delete references = @./deps/captures/materials/mat_EF75EF9266FDD93B.usd@</Looks/mat_EF75EF9266FDD93B>
            prepend references = @./materials/AperturePBR_Translucent.usda@</Looks/mat_AperturePBR_Translucent>
        )
        {
            over "Shader"
            {
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_glass_normal_ogl_OTH_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                float inputs:thin_wall_thickness = 2 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 65504
                            float min = 0.001
                        }
                        dictionary soft_range = {
                            float max = 1
                            float min = 0.001
                        }
                    }
                    displayGroup = "Specular"
                    displayName = "Thin-walled material thickness"
                    doc = "Simulated thickness for thin-walled materials (0 disables thin-walled mode)"
                    hidden = false
                )
                bool inputs:thin_walled = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Specular"
                    displayName = "Thin-walled"
                    doc = "Whether the material is thin-walled"
                    hidden = false
                )
                color3f inputs:transmittance_color = (0.97, 0.97, 0.97) (
                    customData = {
                        float3 default = (0.97, 0.97, 0.97)
                        dictionary range = {
                            float3 max = (1, 1, 1)
                            float3 min = (0, 0, 0)
                        }
                    }
                    displayGroup = "Volume"
                    displayName = "Transmittance Color"
                    doc = "Expected transmittance after the specified transmittance distance through the volume."
                    hidden = false
                )
                float inputs:transmittance_measurement_distance = 5 (
                    customData = {
                        float default = 1
                        dictionary range = {
                            float max = 65504
                            float min = 0.001
                        }
                    }
                    displayGroup = "Volume"
                    displayName = "Transmittance Measurement Distance"
                    doc = "Distance to match the transmittance through the volume at."
                    hidden = false
                )
                asset inputs:transmittance_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Volume"
                    displayName = "Transmittance or Diffuse Albedo Texture"
                    doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                    hidden = false
                )
                bool inputs:use_diffuse_layer = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Volume"
                    displayName = "Use diffuse layer"
                    doc = "When set, simulates a diffuse layer on top of the material"
                    hidden = false
                )
            }
        }

        over "mat_99C1DBF2C7686090"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_ends_color_Diffuse.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                float inputs:emissive_intensity = 2 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_Emissive.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_ends_metal_Metallic.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_ends_normal_ogl_OTH_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_ends_rough_Rough.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                )
            }
        }

        over "mat_205ABD4A925B0A30"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_box_color_Diffuse.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_box_metal_Metallic.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_box_normal_ogl_OTH_Normal.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_HEV_Case/textures/SM_Fixture_Lab_HEV_Case_box_rough_Rough.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                )
            }
        }


        over "mat_5F3CDB387FD77972"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Handrail_A_Long_Stairwell_A/textures/T_DefaultMaterial_Albedo_Diffuse.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Handrail_A_Long_Stairwell_A/textures/T_DefaultMaterial_OTH_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_Lab_Handrail_A_Long_Stairwell_A/textures/T_DefaultMaterial_Rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_8DD50997D9C3A45C" (
            delete references = @./materials/AperturePBR_Translucent.usda@</Looks/mat_AperturePBR_Translucent>
            prepend references = @./materials/AperturePBR_Translucent.usda@</Looks/mat_AperturePBR_Translucent>
        )
        {
        }

        over "mat_8EE6260575F4DBD6" (
            delete references = @./deps/captures/materials/mat_8EE6260575F4DBD6.usd@</Looks/mat_8EE6260575F4DBD6>
            prepend references = @./materials/AperturePBR_Translucent.usda@</Looks/mat_AperturePBR_Translucent>
        )
        {
            over "Shader"
            {
                float inputs:ior_constant = 5 (
                    customData = {
                        float default = 1.3
                        dictionary range = {
                            float max = 3
                            float min = 1
                        }
                    }
                    displayGroup = "Specular"
                    displayName = "Index of Refraction"
                    doc = "Index of Refraction of the material"
                    hidden = false
                )
            }
        }




        over "mat_29CE84957DE7ADEF"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Color_Diffuse.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Metal_Metallic.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Normal_ogl_OTH_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Furniture_Lab_Filecabinet_B/textures/SM_Furniture_Lab_FileCabinet_Roughness_Rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }





        over "mat_71FC786FCB9CD5D5"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                )
                asset inputs:reflectionroughness_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                )
            }
        }









        over "mat_B9232C5C20FD0093"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 0.5 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_F3D56BD65AECEF14"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_401312A9A1079543"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/textures/T_Fixture_C17_Light_Bulkhead_Red_Albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 1 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = """Intensity of the emission

"""
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/textures/T_Fixture_C17_Light_Bulkhead_Red_Emissive.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_09279740F5B883D0"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead_Red/textures/T_Fixture_C17_Light_Bulkhead_Red_Albedo.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Metal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Normal.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Fixture_C17_Light_Bulkhead/textures/T_Fixture_C17_Light_Rough.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_D84C1F1A07E2A285"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionGreen.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Metallic.m.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Emission_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_7C8AED26C0F5BBE5"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Albedo.a.rtex.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:emissive_mask_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_EmissionGreen.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Metallic.m.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Emission_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Lab_FreightElevator_Button/textures/SM_Prop_Lab_FreightElevator_Button_Roughness.r.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }
    }

    over "lights"
    {
        over "light_D2ED7048436183D1"
        {
            float intensity = 0
            float3 xformOp:rotateZYX = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (-6469.91796875, -1614.867919921875, 23.914762496948242)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]
        }

        over "light_136FA7CA0B07CF5D"
        {
            float intensity = 40
        }

        over "light_4D2E974205F0DF7C"
        {
            float intensity = 4
        }

        over "light_99BA08FB2089CAAA"
        {
            float intensity = 300
            float3 xformOp:rotateZYX = (20.73405, -14.560501, -1.5844353)
            float3 xformOp:scale = (1, 1, 1)
            double3 xformOp:translate = (-6366.890136718751, -1289.7099609375, 122.37925468762623)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateZYX", "xformOp:scale"]
        }

        over "light_50124A4A48415AF1" (
            references = None
        )
        {
            over "DiskLight"
            {
                color3f color = (0.32553184, 0.62051505, 0.98841697)
                float intensity = 375
            }

            def Xform "ref_fba9baae469c404baf22790b94279698" (
                prepend references = @./deps/captures/lights/light_50124A4A48415AF1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }
    }
}

