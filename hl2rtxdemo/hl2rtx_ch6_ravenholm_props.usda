#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_6425930029C31D65" (
            references = None
        )
        {
            def Xform "ref_c530e974b9f749498ebe67a794704a79" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Conducter/utilityconductor001.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "body_low"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "utilityconducter001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Conducter/textures/utilityconducter001_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Conducter/textures/utilityconducter001_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Conducter/textures/utilityconducter001_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4908FAEFE7DF3272" (
            references = None
        )
        {
            def Xform "ref_1a85c91c10014b499fc535176bd57d01" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/SM_Prop_Wasteland_ChimneyPipe_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate:pivot = (0, 0, 0)

                    over "World"
                    {
                        over "Looks"
                        {
                            over "lambert1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B85EFD77BDD54A4F" (
            references = None
        )
        {
            def Xform "ref_427347e17b4a4cda8f384cf1823ec32b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/SM_Prop_Wasteland_ChimneyPipe_01b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate:pivot = (0, 0, 0)

                    over "World"
                    {
                        over "Looks"
                        {
                            over "lambert1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3E12F19EC7CA75E5" (
            references = None
        )
        {
            def Xform "ref_5e391da0504e459b8292757ba006ed51" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/SM_Prop_Wasteland_ChimneyPipe_02a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate:pivot = (0, 0, 0)

                    over "World"
                    {
                        over "Looks"
                        {
                            over "lambert1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_99A5462233A19237" (
            references = None
        )
        {
            def Xform "ref_3eee450b31dc428ea2a4967b361055c2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/SM_Prop_Wasteland_ChimneyPipe_02b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)
                    float3 xformOp:translate:pivot = (0, 0, 0)

                    over "World"
                    {
                        over "Looks"
                        {
                            over "lambert1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_ChimneyPipe/textures/T_ChimneyPipe_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5BA465033C0B203E" (
            references = None
        )
        {
            def Xform "ref_6bf0d9ab652240fca3afb9f495d86208" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_PropaneTank001a/SM_Prop_Junk_PropaneTank001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, -90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PropaneRavenholm"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_PropaneTank001a/textures/T_PropaneRavenholm_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_PropaneTank001a/textures/T_PropaneRavenholm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_PropaneTank001a/textures/T_PropaneRavenholm_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F5751450FF087E9E" (
            references = None
        )
        {
            def Xform "ref_27d5e64d76b6423ab87fc901179cf5ad" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_RavenholmSign/SM_Prop_Junk_RavenholmSign.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.394, 0.384, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Junk_RavenholmSign"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_RavenholmSign/textures/SM_Prop_Junk_RavenholmSign_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_RavenholmSign/textures/SM_Prop_Junk_RavenholmSign_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_848EADF044309427" (
            references = None
        )
        {
            def Xform "ref_c698a5057c8a414ab1b5203f9a05e346" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_LaundryCart_002a/SM_Prop_Wasteland_LaundryCart_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_LaundryCart_002a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_LaundryCart_002a/textures/M_Prop_LaundryCart_002a_Base_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_LaundryCart_002a/textures/M_Prop_LaundryCart_002a_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_LaundryCart_002a/textures/M_Prop_LaundryCart_002a_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_LaundryCart_002a/textures/M_Prop_LaundryCart_002a_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_20C99CB326956D57" (
            references = None
        )
        {
            def Xform "ref_3b58ad5e36c442d09875e293fd97bb0e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/SM_Prop_C17_TrapPropeller_Engine.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.394, 0.394, 0.394)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_TrapPropeller_Engine"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DA73089716AC445F" (
            references = None
        )
        {
            def Xform "ref_df983109eb13445b97390dce8a8f35dc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/SM_Prop_C17_TrapPropeller_Lever.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.394, 0.394, 0.394)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_TrapPropeller_Engine"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0AA0DD5F657F34AC" (
            references = None
        )
        {
            def Xform "ref_8cddde27774c4f1ebbdf5d0dd35014bd" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/SM_Prop_C17_TrapPropeller_Blade.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.394, 0.394, 0.394)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_TrapPropeller_Blade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Blade_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Blade_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Blade_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Blade_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2FE1F69AE7573858" (
            references = None
        )
        {
            def Xform "ref_542b88f5254542e598673bea3ee4e598" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/SM_Prop_C17_Lampfixture01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.55, 0.55, 0.55)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "lamp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "glass"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled"
                                        hidden = false
                                    )
                                    float inputs:transmittance_measurement_distance = 10 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance or Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }

                            over "lamp_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.3 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                }
                            }

                            over "lamp_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 3 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Lampfixture01a/textures/T_Prop_C17_Lampfixture01a_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E39CF5CDBCB2F697" (
            references = None
        )
        {
            def Xform "ref_5ee7342d64834a52bd1b1d692329adfa" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/utilityconnecter006.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "utilityconnector006"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_36506BCD18F4D4E8" (
            references = None
        )
        {
            def Xform "ref_f74ed2864c214e16b5db5c672e8abb36" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/utilityconnecter006b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "utilityconnector006"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0CF281B578CDB5B8" (
            references = None
        )
        {
            def Xform "ref_6fe36456074b4f6a943abebaf32dc004" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/utilityconnecter006c.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "utilityconnector006"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F0B6FC33E22E9124" (
            references = None
        )
        {
            def Xform "ref_8df79e703e394f0ba5a9b9b56ee8e493" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/utilityconnecter006d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "utilityconnector006_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/utilityconnector006_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B6F3711A6FA0BA5C" (
            references = None
        )
        {
            def Xform "ref_246103c7dcd94c6893140851663aa25d" (
                prepend references = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/SK_Prop_Combine_HeadcrabCanister_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "headcannister01b_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1F35CC0EA8C59225" (
            references = None
        )
        {
            def Xform "ref_a3a8b675f0854ed99b615bc2b40e187e" (
                prepend references = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/SK_Prop_Combine_HeadcrabCanister_01a_skybox.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "headcannister01b_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_12AC3253530649EF" (
            references = None
        )
        {
            def Xform "ref_302ff0153ed449e8b1a6c6b3165ffb30" (
                prepend references = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/SK_Prop_Combine_HeadcrabCanister_01b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "skel_12AC3253530649EF"
                        {
                            over "skel"
                            {
                                over Xform "root0"
                                {
                                    over "Mesh_024"
                                    {
                                        uniform token[] skel:joints = None
                                        rel skel:skeleton = </RootNode/meshes/mesh_12AC3253530649EF/skel>
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "headcannister01b"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SK_Prop_Combine_HeadcrabCanister_Set/textures/headcrabcannister01b_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FF0BC76B4AEEADA4" (
            references = None
        )
        {
            def Xform "ref_efbfe22637bb4676837404558d988c78" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/SM_Prop_BSPmesh_PropaneHolder.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PropaneHolder"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Base_Color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Normal_DirectX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7DABCF96074DD989" (
            references = None
        )
        {
            def Xform "ref_289659e3a1bd4a028e868e30caac2fb3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/SM_Prop_C17_TrapPropeller_Engine_Junk.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_TrapPropeller_Engine"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_TrapPropeller_Set/textures/T_Prop_C17_TrapPropeller_Engine_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C103FAC1C3D2AEB1" (
            references = None
        )
        {
            def Xform "ref_96c5f94ab0404843a12cc362ea5e8a38" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/SM_Prop_C17_Utility_Pole_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Utility_Pole_01_Main"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Main_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Main_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Utility_Pole_01_Detail"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Detail_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Detail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1D3C9157FAAB3BD3" (
            references = None
        )
        {
            def Xform "ref_8de0c3ff6b1641c597a98e27b7c5faad" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/SM_Prop_C17_Utility_Pole_01b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Utility_Pole_01_Main"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Main_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Main_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Utility_Pole_01_Detail"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Detail_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Detail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A913ED3DCE3FE5B8" (
            references = None
        )
        {
            def Xform "ref_3d99b3bf660d4f00a671361d797646f9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/SM_Prop_C17_Utility_Pole_01d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Utility_Pole_01_Main"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Main_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Main_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Utility_Pole_01_Detail"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Detail_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Pole_Set/textures/M_Prop_C17_Utility_Pole_01_Detail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7E940FE762E9FA64" (
            references = None
        )
        {
            def Xform "ref_353f8fae72bd44138bc5013f00834d16" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Sawblade/SM_Prop_Junk_Sawblade.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.55, 0.55, 0.55)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Junk_Sawblade"
                            {
                                over "Shader"
                                {
                                    float inputs:anisotropy_constant = 0.5 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = -1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Anisotropy Amount"
                                        doc = "0 for isotropic, extents of -1 to 1 for anisotropy"
                                        hidden = false
                                    )
                                    asset inputs:anisotropy_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Sawblade/textures/T_$tAniso Angle.a.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Anisotropy Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Sawblade/textures/T_Prop_Junk_Sawblade_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6126F469A47CE166" (
            references = None
        )
        {
            def Xform "ref_3fc928c39a954ab59e4841627479b839" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_SawbladeHolder/SM_Prop_BSPmesh_SawbladeHolder.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PropaneHolder"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Base_Color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Normal_DirectX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_PropaneHolder/textures/PropaneHolder_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_27BAD5BAC290A948" (
            references = None
        )
        {
            def Xform "ref_adf81fa7f3ef4db8871bb1c552c54e67" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/SM_Prop_CitizenTech_Till_SafetyArm.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "tillset"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B2B5041B82CB8BAA" (
            references = None
        )
        {
            def Xform "ref_b532daad2e124e70aad42cfad364959f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/SM_Prop_CitizenTech_Till_Base.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "tillset"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_Till_Set/textures/T_SM_Prop_CitizenTech_TillSet_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_90296BE25FF9FEFD" (
            references = None
        )
        {
            def Xform "ref_650f9e700a1d4128a401cc8f009039f0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/SM_Fixture_Wasteland_Light_Spotlight_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (180, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0.09092896946669526, 5.684341886080802e-14, 4.357853291072274)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "spotlight01_off"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_selfillum.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3907092EEBC496E2" (
            references = None
        )
        {
            def Xform "ref_db106993577143448bcb0f47be96e836" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/SM_Fixture_Wasteland_Light_Spotlight_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (180, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0.09093, 0, 4.35785)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "spotlight01_off"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Fixture_Wasteland_Light_Spotlight_A/textures/T_spotlight_01_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C3A413775F912FA3" (
            references = None
        )
        {
            def Xform "ref_6e4d89f501214a57bd97196a803b4ecd" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/SM_Prop_BSPmesh_Town_01_Fence_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_BSPmesh_Town_01_Fence"
                            {
                                over "Shader"
                                {
                                    bool inputs:blend_enabled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    bool inputs:inverted_blend = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Inverted Blend"
                                        doc = """Indicates if an inverted blend type should be used.\r
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/textures/M_Prop_BSPmesh_Town_01_Fence_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/textures/M_Prop_BSPmesh_Town_01_Fence_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    bool inputs:blend_enabled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo_Diffuse.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:inverted_blend = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Inverted Blend"
                                        doc = """Indicates if an inverted blend type should be used.\r
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal_Metallic.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_OTH_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CCA76440C685F1D0" (
            references = None
        )
        {
            def Xform "ref_0bdee7acd2d64e25864b372ed4681cc1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/SM_Prop_BSPmesh_Town_01_Fence_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_BSPmesh_Town_01_Fence"
                            {
                                over "Shader"
                                {
                                    bool inputs:blend_enabled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    bool inputs:inverted_blend = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Inverted Blend"
                                        doc = """Indicates if an inverted blend type should be used.\r
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/textures/M_Prop_BSPmesh_Town_01_Fence_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/textures/M_Prop_BSPmesh_Town_01_Fence_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    bool inputs:blend_enabled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo_Diffuse.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    bool inputs:inverted_blend = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Inverted Blend"
                                        doc = """Indicates if an inverted blend type should be used.\r
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal_Metallic.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_OTH_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C510EB3A69CB966A" (
            references = None
        )
        {
            def Xform "ref_39f375854acc449a9ab65b0f06d378fb" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_GrainElevator/SM_Prop_Wasteland_GrainElevator.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrainElevator"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_GrainElevator/textures/T_grainElevatTex_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_GrainElevator/textures/T_grainElevatTex_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_GrainElevator/textures/T_grainElevatTex_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_GrainElevator/textures/T_grainElevatTex_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0D97BC85B93CC570" (
            references = None
        )
        {
            def Xform "ref_cadddd0a0f044306ad36cda10633ac3d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Workbench/SM_Prop_BSPmesh_Town_01_Workbench.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_BSPmesh_Town_01_Workbench"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Workbench/textures/Prop_BSPmesh_Town_01_Workbench_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Workbench/textures/Prop_BSPmesh_Town_01_Workbench_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Workbench/textures/Prop_BSPmesh_Town_01_Workbench_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Workbench/textures/Prop_BSPmesh_Town_01_Workbench_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_844BD52815864B8C" (
            references = None
        )
        {
            def Xform "ref_124b13170c6c407981d3c8184fb3c368" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Fence/SM_Prop_BSPmesh_Town_01_Fence_03.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Albedo_Diffuse.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Metal_Metallic.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_OTH_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_fixture_fence_A01_Trim_Rough.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B0EF8C0E18D5A294" (
            references = None
        )
        {
            def Xform "ref_4a893be192e44ea5a093e011ee5e8567" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DEC577E1FE7F7422" (
            references = None
        )
        {
            def Xform "ref_fe00ca0d722f47f2b662fd09bcad2cc9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01_ChunkA.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01_ChunkA"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_54E4703BF7EDF572" (
            references = None
        )
        {
            def Xform "ref_affd81e068994665bcd05bffd7cdc138" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01_ChunkB.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01_ChunkB"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4027BE6122F094CF" (
            references = None
        )
        {
            def Xform "ref_dbc2404f499d43b1929f43e9322c9ced" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01_ChunkD.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01_ChunkD"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9A4D73C0D9AAFFA5" (
            references = None
        )
        {
            def Xform "ref_bd6c49d8a1954d5fbad1352938827429" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01_ChunkE.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01_ChunkE"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D73B8C932E47382" (
            references = None
        )
        {
            def Xform "ref_980e420cd7ff434e9d20326fe1b756c7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01_ChunkF.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01_ChunkF"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_05B0F7D5452C2988" (
            references = None
        )
        {
            def Xform "ref_f3df1ae7e87548dfbacbfbca9ca1b6b1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_01_ChunkG.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_01_ChunkG"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F5B71DA5E8350834" (
            references = None
        )
        {
            def Xform "ref_bc3e10f931664f5d896d2d1ab4da26c0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_97A87296C259E35E" (
            references = None
        )
        {
            def Xform "ref_e2a31ef681a745d8b46fc167789f60b6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_02_ChunkD.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_02_ChunkD"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_049987B0F5E4823E" (
            references = None
        )
        {
            def Xform "ref_4c518867f72c4c0291650b3c1f74bc9d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_02_ChunkE.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_02_ChunkE"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1E4196A388AD12AD" (
            references = None
        )
        {
            def Xform "ref_f8a30310610b4bbba1d410f84b2a0767" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_ShardA.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_ShardA"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1014980FAB68279D" (
            references = None
        )
        {
            def Xform "ref_f2af399c9d274497b2ebefafbb499f4e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_ShardB.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_ShardB"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BC7E2BD30928DC6E" (
            references = None
        )
        {
            def Xform "ref_f45c0ad5c78a4c1b9dedc53b0286cde0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_ShardD.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_ShardD"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ED7B202A20D63DC8" (
            references = None
        )
        {
            def Xform "ref_fe8fc5a861c147cca83abf887308edd3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_ShardE.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_ShardE"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_89B58E3ECC208B0C" (
            references = None
        )
        {
            def Xform "ref_8d553801291a41b08c5db3168828cc44" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/SM_Prop_Debris_MetalPanel_ShardC.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Debris_MetalPanel_ShardC"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (39.37008, 39.37008, 39.37008)
                            double3 xformOp:translate = (1240.627872291705, 121.34958433390057, -906.2218120519692)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Prop_Debris_MetalPanel"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_MetalPanel Set/textures/M_Prop_Debris_MetalPanel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C7C2501FF58E875E" (
            references = None
        )
        {
            def Xform "ref_160502974dd9490abaa50bf37d541633" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/SM_Prop_C17_Utility_Connector_005.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Utility_Connectors"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/T_Prop_C17_Utility_Connectors_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_90F1CD8F74815E86" (
            references = None
        )
        {
            def Xform "ref_218c9aa6448f476f91023c684f7b5877" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/SM_Prop_C17_Utility_Connector_003.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Utility_Connectors"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/T_Prop_C17_Utility_Connectors_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F3E556504D74BC74" (
            references = None
        )
        {
            def Xform "ref_1d256bb80452445cb2207693f079a0e4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/SM_Prop_C17_Utility_Connector_002.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Utility_Connectors"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Utility_Connector_Set/textures/T_Prop_C17_Utility_Connectors_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9B0236069A3CCF41" (
            references = None
        )
        {
            def Xform "ref_d86be7be47fd448abc77661c39c0f769" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_LampBell_Set/SM_Prop_C17_LampBell_On.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "phong1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_LampBell_Set/textures/T_SM_Prop_C17_LampBell_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_LampBell_Set/textures/T_SM_Prop_C17_LampBell_Emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_LampBell_Set/textures/T_SM_Prop_C17_LampBell_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_LampBell_Set/textures/T_SM_Prop_C17_LampBell_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_LampBell_Set/textures/T_SM_Prop_C17_LampBell_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1CE0F213A20F9C2F" (
            references = None
        )
        {
            def Xform "ref_51866773c12640218c766093172f396f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/Prop_C17_PulleyWheel_Large.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (45, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "pullywheel"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_14E08B29207C0641" (
            references = None
        )
        {
            def Xform "ref_c98b4cd39dcf4703a70bae06c82fea7f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/Prop_C17_PulleyWheel_Small.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_Prop_C17_PulleyWheel"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyWheel_Set/textures/T_Prop_C17_PulleyWheel_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_89E04A1B1FA1A2A2" (
            references = None
        )
        {
            def Xform "ref_5904cff88daf46faa415f2fd2817566c" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/SM_Prop_Canal_Winch02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Canal_Winch02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_71C4850128585691" (
            references = None
        )
        {
            def Xform "ref_52474bd1125440ce87bdc4c1ca86c663" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/SM_Prop_Canal_Winch02b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Canal_Winch02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_289E6B28BDE06467" (
            references = None
        )
        {
            def Xform "ref_3b70fb7adf3b47b2be91b1b846304176" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/SM_Prop_Canal_Winch02d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Canal_Winch02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/textures/T_Prop_Canal_Winch02_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C7A22294F97B9220" (
            references = None
        )
        {
            def Xform "ref_2a19503aafa44e589bddf4906ce6e383" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_002a_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }







        over "mesh_946535CEEDC333FA" (
            references = None
        )
        {
            def Xform "ref_6893424ef02a43d3884ab5929f6b2fb3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_002b_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D84BCCA24768BCCE" (
            references = None
        )
        {
            def Xform "ref_29f07316d6384cebab6094421a7dbde6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_002c_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_50AD40FD325268D6" (
            references = None
        )
        {
            def Xform "ref_dea4ac28828c44a481743f065584a213" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_002d_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A7A3C14E4D95575A" (
            references = None
        )
        {
            def Xform "ref_60f38e8286f049919dd0114d2630d1c4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_003a_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3F6794DA3EADCCD6" (
            references = None
        )
        {
            def Xform "ref_6229624a9546404999330cd4198fb7c7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_003b_Frame.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BCAC2A86594CD212" (
            references = None
        )
        {
            def Xform "ref_83f2bab6e0924cdba6ffddcdb58f7559" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/SM_Prop_Junk_Garbage_Composite_256_002b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Junk_Garbage_BoxesA"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesA_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesA_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesA_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesA_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Junk_Garbage_BoxesB"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesB_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesB_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesB_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_BoxesB_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Junk_Garbage_Planks"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_Planks_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_Planks_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Garbage_Composite_Set/textures/T_Prop_Junk_Garbage_Planks_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_81BB8C97A9A688A2" (
            references = None
        )
        {
            def Xform "ref_cb8781acad8643b88768f81107ad3674" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E84CB351C0BEEAF8" (
            references = None
        )
        {
            def Xform "ref_97679c80b7e94b3091217981ad44a374" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7F9CFB617787510A" (
            references = None
        )
        {
            def Xform "ref_af4649332eac48efb093340e28848515" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A0379070C1D4B08D" (
            references = None
        )
        {
            def Xform "ref_e7858bddffaa4b5db015b4ebb71439bb" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_69A51003A8CE5D56" (
            references = None
        )
        {
            def Xform "ref_692b7b1522a44c269c47918fbd68686a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E93A7E2CE9D46121" (
            references = None
        )
        {
            def Xform "ref_1bdce90c1ad84556bf3702b2ae0328ce" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AEF71E63B37BCF45" (
            references = None
        )
        {
            def Xform "ref_2cc22c69c401448686339402c5fed86c" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_66886D7D00F952AA" (
            references = None
        )
        {
            def Xform "ref_8244168fe0cc4e61864e321e73ed9ff4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BAFD9F4B0B2E4529" (
            references = None
        )
        {
            def Xform "ref_99c388eb64974fd4a90f25a50ddb3e57" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_897747257C0DC347" (
            references = None
        )
        {
            def Xform "ref_afc29d638565489a8e85401a034e1476" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_55D8368AF58FFFC2" (
            references = None
        )
        {
            def Xform "ref_efdcda37ecfb4b2cbfeb81cbc2a5c7dc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D9EB477B48B97FE7" (
            references = None
        )
        {
            def Xform "ref_31f41a294ec24596b3bec1a30041274f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01_ChunkE.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FFA0079B4569D61C" (
            references = None
        )
        {
            def Xform "ref_b90dcfc1e2684ffdb209678f3cf8cab9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_01_ChunkF.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DAC53D02BAFD95CD" (
            references = None
        )
        {
            def Xform "ref_aad3c5c8689e4faeb80bd8007c5c2af9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -1.2050804798491299e-11, -15.263178759834318)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_89C3DD14D3927457" (
            references = None
        )
        {
            def Xform "ref_0ced879d6d1d46959f762ad1743c6cdf" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -1.0857093002414331e-11, 13.431154617950767)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4FD824FC961F8A14" (
            references = None
        )
        {
            def Xform "ref_d8b4af7850ff4168902745d25b16a7aa" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -3.637978807091713e-11, -16.5243615412926)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E149988414D3D60D" (
            references = None
        )
        {
            def Xform "ref_b3cfd8d577314aa4a7a418384505104a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -0.6076809350925032, -15.381120957090218)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8BFDEFEB81AB924D" (
            references = None
        )
        {
            def Xform "ref_97c0713b60b141a49cc317e7418264cc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02_ChunkE.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -0.025111631063339246, -0.49052619694792554)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1354EEC2D341959C" (
            references = None
        )
        {
            def Xform "ref_34548ea877884cb481291c610bc52f9b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_02_ChunkF.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -0.38047528230504213, 13.331716673436176)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_10EAB70571175536" (
            references = None
        )
        {
            def Xform "ref_6cba2f0ac157452a9b9f9f35e06db7c0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 0, -24.466538771144243)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4D294B73E2A8E670" (
            references = None
        )
        {
            def Xform "ref_d146d4403fff411fbf34ed387b96a94a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -5.684341886080802e-14, 23.71994560353778)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8721C197A118B294" (
            references = None
        )
        {
            def Xform "ref_d418804cebe1426dbf5a29d9e181ebfb" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A3D3F5DEAF88336C" (
            references = None
        )
        {
            def Xform "ref_b46d7224f6cb4cf5867014a8f1935aec" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03_ChunkC_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -1.008305614550295, -24.322327088232377)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BF0F64411A701242" (
            references = None
        )
        {
            def Xform "ref_17d80b30063c4745a3d9bf2f9892837e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -1.9999999999999716, 32.000000000000014)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_61BD4D7545F25878" (
            references = None
        )
        {
            def Xform "ref_faa3452b3d6149538aa15fcdf6a91fbd" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_03_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D9A5F3B2D5B689E4" (
            references = None
        )
        {
            def Xform "ref_10cd8b281c874d0286435695614b3f63" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -8.526512829121202e-14, -16.142261522061546)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_69E9E7864C456818" (
            references = None
        )
        {
            def Xform "ref_e5acf6be9403424eb3ea1d83d1c423aa" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -2.842170943040401e-14, 6.4194630276076765)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_108EFB78A304AE7A" (
            references = None
        )
        {
            def Xform "ref_ed8d8c9317984ce2b05056ce9cde77e7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 1.263870852277634, -17.145615107620998)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ACC1C240AE95F7EE" (
            references = None
        )
        {
            def Xform "ref_24ef5767f13444f0b2157b305fe99522" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -1.9766574185089354, -16.2166246442629)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2E5A1A5BE797D94E" (
            references = None
        )
        {
            def Xform "ref_1b147ece35494ed6a36f62b65df2b941" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04_ChunkE.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -1.747781787091597, 10.367808182735033)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Debris_WoodBoard_04_ChunkE"
                        {
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_22B804A8E91BB754" (
            references = None
        )
        {
            def Xform "ref_03b9345671fe475ea9e166fff3486a8d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_04_ChunkF.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 2.037049959952867, 16.04758392865199)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_39C5E51C30E2C283" (
            references = None
        )
        {
            def Xform "ref_7f0849db2e934cb5a6add992b8fe6e7f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -5.542233338928781e-13, -26.1197716077642)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_81C2814101CFE0DC" (
            references = None
        )
        {
            def Xform "ref_c7cd5685c1ee43869adefce88cb7ffdc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 3.608224830031759e-15, 13.74608655573742)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B37E3D078916B13D" (
            references = None
        )
        {
            def Xform "ref_a513055c368c46559ab165970436c263" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 3.912499173351911, -37.26579010028892)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_850E8D664CF6C32A" (
            references = None
        )
        {
            def Xform "ref_d4ee52ed940b455a8ce00124ee4f5a7f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -3.273999403062838, -27.468321234709272)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3A37DE0D07AFF502" (
            references = None
        )
        {
            def Xform "ref_ccf8d01008c1453e99529376bb8ef0aa" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05_ChunkE.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 3.980232711686554, 15.232951175389871)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5995927F2E4CD366" (
            references = None
        )
        {
            def Xform "ref_571288b88ba947fc971a35d5b8c531e8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_05_ChunkF.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -4.100405646667518, 20.042377453761333)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3E125260CB89FD8C" (
            references = None
        )
        {
            def Xform "ref_991b4c5aad00477da796b597e5e06660" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 0, -11.145196080368848)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8CCC37C1C2DB0662" (
            references = None
        )
        {
            def Xform "ref_a7e1a5911ff840e5b1250556abdcb423" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (3.979039320256561e-13, 1.4495071809506044e-12, 13.714533003826006)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A9399406FBC6AA0D" (
            references = None
        )
        {
            def Xform "ref_181f319df09742118c7356a25bbc108a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (3.979039320256561e-13, 4.173551208591306, -9.990045510616952)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_98BE1886FA688007" (
            references = None
        )
        {
            def Xform "ref_0cf26e4a6e5a48c5afa83dbdd897f2ee" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (-0.17044890733183138, -4.289495566719694, -11.240103660948044)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3881A975A5A237E8" (
            references = None
        )
        {
            def Xform "ref_98f66fff3e9746228b10443bbb8d6f2e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06_ChunkE.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, 3.1304378350703246, 11.238747108207463)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FE34F10277C06DE2" (
            references = None
        )
        {
            def Xform "ref_e2abdd63a8754fb3b720937268b9ac0d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_06_ChunkF.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -4.578224123248702, 10.91136291734044)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BBE9F71AF02AD0AE" (
            references = None
        )
        {
            def Xform "ref_f1c91f3995414ff2b011d522eba36f87" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 1.1368683772161603e-13, -33.088334497693516)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4F2714881E874407" (
            references = None
        )
        {
            def Xform "ref_3446e83fdb24419bb04e8ecc44b97ef1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07_ChunkB.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 1.1368683772161603e-13, 13.656982877772577)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D2FAA86FFA9BBAB6" (
            references = None
        )
        {
            def Xform "ref_7c2b12250b8e40abab9f857574bcebb4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07_ChunkC.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 2.414624583724901, -39.18096292133171)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DB786253E3412CB0" (
            references = None
        )
        {
            def Xform "ref_7f699bc62a10466488d08f789aa3e59f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07_ChunkD.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -2.1249594534942844, -37.57266773147862)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_650679FDB477AC99" (
            references = None
        )
        {
            def Xform "ref_514aa71e6d4640819822142248637150" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07_ChunkE.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (-0.32991430144335254, -2.5880288836632985, 16.550046063689393)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1EAE13D33BD6E165" (
            references = None
        )
        {
            def Xform "ref_e02940d5a88645c8a5ddeb5d3bc5446d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_07_ChunkF.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (5.684341886080802e-14, -2.1574771457773636, 17.4924928542097)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AD148D3BE92BCBFD" (
            references = None
        )
        {
            def Xform "ref_dda864aa391a44cc941e09a256bb78a3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_Chunk_08B.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5DE01AE8EC95BD2E" (
            references = None
        )
        {
            def Xform "ref_227e3665ea6a4a4e867191cf59d3e073" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_Chunk_08D.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0.5462932514460022, 0.09556394129580781)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3DD19B352F25BAD3" (
            references = None
        )
        {
            def Xform "ref_fbe9a94f226b421da010ea4a795ff242" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_Chunk_08E.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0327040418769CC3" (
            references = None
        )
        {
            def Xform "ref_407a924de8ef4849aa9b7b07441d837e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/SM_Prop_Debris_WoodBoard_Chunk_08F.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Debris_WoodBoard_Set/textures/T_Prop_Debris_WoodBoard_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2674038038743CFA" (
            references = None
        )
        {
            def Xform "ref_c6d7a026bdc04d47912e09c315d7a79d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_256_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5AD18244DF447CFF" (
            references = None
        )
        {
            def Xform "ref_04efe8c719034d7c80e73b776a65601c" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_256_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D940631E35F01C2" (
            references = None
        )
        {
            def Xform "ref_ebba9d37439b431f84bf3a9d60eea778" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_256_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E13187F5046F41C7" (
            references = None
        )
        {
            def Xform "ref_17a9567761be4460818aa999337b4bff" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_256_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2C43254F8E77AA83" (
            references = None
        )
        {
            def Xform "ref_2c1d974a5b1c42dfbab8cbea2710ffe8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_320_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_50E6A48B6947EA86" (
            references = None
        )
        {
            def Xform "ref_ca167b2eab4148d0b3bc4fa44f9db2d0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_320_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2188903797B88A57" (
            references = None
        )
        {
            def Xform "ref_a34012615e334b849dffcddcc6a21682" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_320_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5D2D11F37088CA52" (
            references = None
        )
        {
            def Xform "ref_1790e20bbab54d318dc57832dced006f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_320_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E738C7939A1ECA42" (
            references = None
        )
        {
            def Xform "ref_b1eb199b0d504db78ea7e877b3ba8592" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_384_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9B9D46577D2E8A47" (
            references = None
        )
        {
            def Xform "ref_bf745741441147e1b173c7f8dc4b09e2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_384_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A75D8794D5DF36A6" (
            references = None
        )
        {
            def Xform "ref_3ffd9a576379471f9cd4da37c0b70ea9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_384_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DBF8065032EF76A3" (
            references = None
        )
        {
            def Xform "ref_ff7405c07fde4771922d09ef8840091a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_384_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_834E090F9F327434" (
            references = None
        )
        {
            def Xform "ref_1c570050445745529c16b2b50dfee7b3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_448_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FFEB88CB78023431" (
            references = None
        )
        {
            def Xform "ref_a3204fd703e34cde9807ac10828a9e39" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_448_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:anisotropy_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Anisotropy Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_296DA655A6E2DE57" (
            references = None
        )
        {
            def Xform "ref_f66ce3433021470bb82ea53b33663244" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_448_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_55C8279141D29E52" (
            references = None
        )
        {
            def Xform "ref_cad84d98bea74dd9ab1ce79be42e8949" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_448_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DC706A3309E4F091" (
            references = None
        )
        {
            def Xform "ref_d764f883b697429ba6ef38ec42139bde" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_512_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A0D5EBF7EED4B094" (
            references = None
        )
        {
            def Xform "ref_05dbeb1c88704860b0a4169b6d49a441" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_512_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8DD0D7603E8C2031" (
            references = None
        )
        {
            def Xform "ref_ff57f4188c6e4b0195926e23f7737349" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_512_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F17556A4D9BC6034" (
            references = None
        )
        {
            def Xform "ref_9716c84d36c74792bb295ff244f0ff83" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_512_02_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C9388194CDEC8354" (
            references = None
        )
        {
            def Xform "ref_bc4e4f9e6f3248c1bd8e2da39db9ad26" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_576_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B59D00502ADCC351" (
            references = None
        )
        {
            def Xform "ref_6a967c2476e243cf8ef7542b2bde45cf" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_576_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8AE6ECC65FFA7BB5" (
            references = None
        )
        {
            def Xform "ref_d592b7704b6e4140bd4b03ae0a98a9a1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/SM_Prop_Pipe_Gutter_704_01_Skin0.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_SM_Prop_Pipe_Gutter_Set_Skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipe_Gutter Set/textures/T_SM_Prop_Pipe_Gutter_Set_Skin0_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_986C651414C13E08" (
            references = None
        )
        {
            def Xform "ref_0bb286d59920412896ac9c45ff42e44b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Stool/SM_Prop_C17_Stool.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Stool/textures/T_Prop_C17_Stool_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Stool/textures/T_Prop_C17_Stool_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }




        over "mesh_E7E27284D39A1757" (
            references = None
        )
        {
            def Xform "ref_1a37f0499a274d8994b5e5627e913c48" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_001a_Frame.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Wasteland_Exterior_Fence_Set_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_51C4D03362CF86C5" (
            references = None
        )
        {
            def Xform "ref_6e815da242b14500a66bec76b8e3d0e1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_001b_Frame.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence Set 02_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B76A85785F0150F3" (
            references = None
        )
        {
            def Xform "ref_b28bcaa5e5b546acb066230feaacc8ae" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/SM_Prop_Wasteland_Exterior_Fence_002e_Frame.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Exterior_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Exterior_Fence_Set/textures/T_Prop_Wasteland_Exterior_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Prop_C17_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_Fence_Set/textures/T_Prop_C17_Fence Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0075F199325E3FF4" (
            references = None
        )
        {
            def Xform "ref_776f86da96a34d899798431b08ab9208" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/SM_Prop_Wasteland_Gear_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Wasteland_Gear_Set_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4AF64979EA25885B" (
            references = None
        )
        {
            def Xform "ref_997b842306ab4bebba0e9545f3fe6a43" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/SM_Prop_Wasteland_Gear_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Wasteland_Gear_Set_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_937A77E9164CEB9D" (
            references = None
        )
        {
            def Xform "ref_013df6c9c6f54b0db22d360583a63064" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Canal_Winch02_Set/SM_Prop_Canal_Winch02c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "SM_Prop_Canal_Winch02c"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Prop_Wasteland_Gear_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Gear_Set/textures/T_Prop_Wasteland_Gear Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E40EF38F53B80597" (
            references = None
        )
        {
            def Xform "ref_35135d95570d4cf29c330c831420b60c" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/SM_Prop_Foliage_Tree_Deciduous_03b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/textures/trunk_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/textures/trunk_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/textures/trunk_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }

            def Xform "ref_126ebc9a92cc4cd997e6cb8ed4e0cbc8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/SM_Prop_Foliage_Tree_Deciduous_03b_branches.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Wye_Joint_047__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/textures/branches_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/textures/branches_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_03b/textures/branches_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_8960AF2524536986" (
            references = None
        )
        {
            def Xform "ref_e9827528f1644814b7bd34baabdd0c51" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/SM_Prop_Foliage_Tree_Deciduous_01_Branches.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Wye_Joint_072__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/textures/branches_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/textures/branches_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/textures/branches_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }

            def Xform "ref_fdc9b7ed3cc3410bae900fa702224f35" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/SM_Prop_Foliage_Tree_Deciduous_01_Trunk.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/textures/trunk_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/textures/trunk_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Deciduous_01/textures/trunk_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_67BD7E144F3D3CB9" (
            references = None
        )
        {
            def Xform "ref_2fb712cd9cce4fc1ae48983870e93b69" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/SM_Prop_Foliage_Tree_Cliff_01_Trunk.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "DefaultMaterial"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/textures/trunk_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/textures/trunk_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/textures/trunk_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }

            def Xform "ref_3bc4bea08bb34004b80f305d0fdaf4b8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/SM_Prop_Foliage_Tree_Cliff_01_Branches.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Wye_Joint_002__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/textures/branches_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/textures/branches_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Tree_Cliff_01/textures/branches_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_FA19178BC0A226C7" (
            references = None
        )
        {
            def Xform "ref_109c7f8539084d3ba66b9ffc944a9803" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EBDA710977FD1E39" (
            references = None
        )
        {
            def Xform "ref_7d84a68aedfd49c68c2f34c5acc49de8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate_Gib1"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Item_ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_97921ADCE30AE914" (
            references = None
        )
        {
            def Xform "ref_d4389eef1f734f71bf08c7a6f4ed45b6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate__Gib2"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_49E4E2284B5F8C9A" (
            references = None
        )
        {
            def Xform "ref_5ce197a7e137466db9283102f3c116b3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate_Gib3"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Item_ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F9B003B55E855CEB" (
            references = None
        )
        {
            def Xform "ref_4455059844a643ccb08cbe2bc996d883" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate_Gib4"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Item_ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DAC8D2744C569458" (
            references = None
        )
        {
            def Xform "ref_411d84e08df84d44a27ed4de90ec3ef5" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate_Gib5"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Item_ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_704BDF2D4858B1C6" (
            references = None
        )
        {
            def Xform "ref_b92ff38ecb2f41aa83e10387b0e20e6d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib6.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate_Gib6"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Item_ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E2A14233AB8D873C" (
            references = None
        )
        {
            def Xform "ref_51ee254fe5934db1981206cbef104ff2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/SM_Item_ItemCrate_Gib7.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Item_ItemCrate_Gib7"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Item_ItemCrate"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_ItemCrate_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Item_Itemcrate/textures/M_Item_ItemCrate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_73683ACE511FDEDE" (
            references = None
        )
        {
            def Xform "ref_be2593398cef4e12bc19d1dca15d5c48" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "woodpallet"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/SM Pallet_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/SM Pallet_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/SM Pallet_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/SM Pallet_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "models_props_junk_Wood_PalletCrate001a_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C4FAADF07F0DCE7F" (
            references = None
        )
        {
            def Xform "ref_6afe9f0f67ea4714b6815adba516fae5" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_ChunkA.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "wood_pallet001a_chunka"
                        {
                            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (-1.8346774040799119, 1.4411826073468141, -13.6213036040308)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5F0DFBDA14186F8C" (
            references = None
        )
        {
            def Xform "ref_23d3c612902c461fa05424fe0384495a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_ChunkA3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (-0.07817256440728215, -3.851399087033144, -0.30778467228521)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_03571DD2EFC41B8D" (
            references = None
        )
        {
            def Xform "ref_6b7f488a48c347d28db624399342f96b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_ChunkA4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, -5.684341886080802e-14, 0.5228504298611236)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_25055B226360C6D3" (
            references = None
        )
        {
            def Xform "ref_b1c4a9bed85a4efeb9522e9f2990f2e1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_ChunkB2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8F83BC3423D0FBEF" (
            references = None
        )
        {
            def Xform "ref_0549299b171f4222a7899445e7baebbc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_ChunkB3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (-5.684341886080802e-14, 0.03995801988082803, 0.001416342752855293)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4DDB8B46D1831E4C" (
            references = None
        )
        {
            def Xform "ref_728d2e744dbd4d92acf9dff2fac480d9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_Shard01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7AB70BA77B7B3302" (
            references = None
        )
        {
            def Xform "ref_f4a228f4fe5840568092fb6a702b9b11" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/SM_Prop_Junk_WoodPallet_ChunkA1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (1.9326762412674725e-12, 3.6745791279859645, 0.3092316224003495)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "models_props_junk_Wood_PalletCrate001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_WoodPallet_Set/textures/gibs_low_models_props_junk_Wood_PalletCrate001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_40136BB1B103BA7F" (
            references = None
        )
        {
            def Xform "ref_63c3e80b52214eeda909dc63e25f5dc2" (
                prepend references = @./assets/ch6_ravenholm/models/SK_Weapon_Annabelle/SK_Weapon_Annabelle.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Weapon_Annabelle"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SK_Weapon_Annabelle/textures/T_Weapon_Annabelle_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SK_Weapon_Annabelle/textures/T_Weapon_Annabelle_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SK_Weapon_Annabelle/textures/T_Weapon_Annabelle_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SK_Weapon_Annabelle/textures/T_Weapon_Annabelle_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B191B31A860F217D" (
            references = None
        )
        {
            def Xform "ref_dcd09c46f63946c1a4aad1e14f7881fc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01_MetalTruss_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_125__"
                            {
                                over "Shader"
                                {
                                    asset inputs:anisotropy_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Anisotropy Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1D4694B17AE6EFBA" (
            references = None
        )
        {
            def Xform "ref_ce9ed39cade846e7aae39fa58acaa8f4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01_MetalTruss_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_006__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_59E0E6C3F9695308" (
            references = None
        )
        {
            def Xform "ref_7ae5d81d8785431983d542097bd64f05" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01_MetalTruss_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (-106, 0, -180)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_017__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A0C429EBB18B76D1" (
            references = None
        )
        {
            def Xform "ref_866c6593683d4eceba418d5c465f29ce" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01_MetalTruss_01e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_010__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_398FA3FBB16E87B8" (
            references = None
        )
        {
            def Xform "ref_269be76ed3904b8089d479559c4990a1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01a_MetalTruss_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_125__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2412BD7A362D6D0D" (
            references = None
        )
        {
            def Xform "ref_048e313f54c54cd3b371e9e109eb997b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01a_MetalTruss_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "root"
                    {
                        over "SM_Prop_BSPmesh_d1_town_01a_MetalTruss_02a"
                        {
                            over "Cube_011"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (-15.999999999999659, 0, -216)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_011__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9976A573BBE8F12C" (
            references = None
        )
        {
            def Xform "ref_66fd8dcb74c74158a28f0bc4de68f144" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01a_MetalTruss_03a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_012__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_909DE3624FD41B26" (
            references = None
        )
        {
            def Xform "ref_e7ed42e0cc5a491585f38ca42e761f12" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_02_MetalTruss.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_016__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FE904CE906BC5C21" (
            references = None
        )
        {
            def Xform "ref_95c0031d6f5b4b62875ee61dab1ab3ec" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_03_MetalTruss.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_092__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1CCF79DB284CAB33" (
            references = None
        )
        {
            def Xform "ref_b44d6790f7b24576ad069bb8795e6243" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/SM_Prop_BSPmesh_d1_town_01_MetalTruss_01d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 180)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-8.526512829121202e-14, 235, -104)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_005__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Norm_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_MetalTruss_Set/textures/M_MetalTrussSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0A3C1493C0BC0A40" (
            references = None
        )
        {
            def Xform "ref_e644f56089bf421aa6829e0726c21738" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Meathook/SM_Prop_Junk_MeatHook.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Junk_MeatHook"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (-0.25, -21.5, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Prop_Junk_MeatHook"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Meathook/textures/Prop_Junk_MeatHook_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Meathook/textures/Prop_Junk_MeatHook_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Junk_Meathook/textures/Prop_Junk_MeatHook_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EE5BEB8CE030E313" (
            references = None
        )
        {
            def Xform "ref_0edc1c0da67f4c2ea79b07768c071c7d" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Switchbox001a/SM_Prop_Wasteland_Prison_Switchbox001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {

                        over "Looks"
                        {
                            over "Cables"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Switchbox001a/textures/T_Prop_Wasteland_Prison_Switchbox001as_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Switchbox001a/textures/T_Prop_Wasteland_Prison_Switchbox001a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Switchbox001a/textures/T_Prop_Wasteland_Prison_Switchbox001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Switchbox001a/textures/T_Prop_Wasteland_Prison_Switchbox001a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3576B5CCEEED5BD4" (
            references = None
        )
        {
            def Xform "ref_23cab4f78ebb4f44accd860d738e61af" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/SM_Prop_CitizenTech_FireTrap_Button.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PropaneCanister_Button"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7C7C3F620D198E25" (
            references = None
        )
        {
            def Xform "ref_c424367dbf83411b869756f44a625a2d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/SM_Prop_CitizenTech_FireTrap_ButtonPad.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PropaneCanister_Button_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA5691ACD4164F07" (
            references = None
        )
        {
            def Xform "ref_2da4ba0937f74db9b752aaf0398ca66f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/SM_Prop_CitizenTech_FireTrap_GasHose_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_CitizenTech_FireTrap_Hoses"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_97C916F2D46B5AF8" (
            references = None
        )
        {
            def Xform "ref_6a17ddd752f649b993fb43b9cd0ca7f0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/SM_Prop_CitizenTech_FireTrap_GasHose_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_CitizenTech_FireTrap_Hoses_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_51ADC638302D5D9A" (
            references = None
        )
        {
            def Xform "ref_23849682476342fcba583353a476d6b4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/SM_Prop_CitizenTech_FireTrap_GasHose_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_CitizenTech_FireTrap_Hoses_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_Hoses_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E88C42CDEE3D76CD" (
            references = None
        )
        {
            def Xform "ref_5182ad86a4c04f55891f37b48272e0e3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/SM_Prop_CitizenTech_FireTrap_PropaneCanister.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PropaneCanister_Button_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_CitizenTech_FireTrap_PropaneCanister_Button"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_CitizenTech_FireTrap_Set/textures/Prop_CitizenTech_FireTrap_PropaneCanister_Button_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_7C7CA8874D661B07" (
            references = None
        )
        {
            def Xform "ref_476fbb4c91e14456966d63b14aa3e71b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/SM_Prop_C17_FloodLight_02_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "light_floodlight_wheels_vmdl_c_light_floodlight_wheels"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "light_floodlight_wheels"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "light_floodlight_glow"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_glow_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_944EE42CAABECE9A" (
            references = None
        )
        {
            def Xform "ref_25fac8d813de4c25b952fdac2cf00625" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/SM_Prop_C17_FloodLight_02_On.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "light_floodlight_wheels_vmdl_c_light_floodlight_wheels"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "light_floodlight_wheels"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_wheels_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "light_floodlight_glow"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_glow_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 1 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_FloodLight_02_Set/textures/light_floodlight_glow_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C235B6575CB27340" (
            references = None
        )
        {
            def Xform "ref_123bb926c23943859939b07c3b761c47" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/SM_Prop_Wasteland_CoolingTank_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Circle_039"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Prop_Wasteland_CoolingTank_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/textures/T_Prop_Wasteland_CoolingTank_02_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/textures/T_Prop_Wasteland_CoolingTank_02_Skin3_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1DF5A2F1974BD1E2" (
            references = None
        )
        {
            def Xform "ref_23107c9cdf884ac1b71889edf51fc6a4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/SM_Prop_Wasteland_CoolingTank_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Circle_039"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Prop_Wasteland_CoolingTank_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/textures/T_Prop_Wasteland_CoolingTank_02_Skin2_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/textures/T_Prop_Wasteland_CoolingTank_02_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_66F6F5EF2BF19C28" (
            references = None
        )
        {
            def Xform "ref_e019cfa0058b46bbb71aff694f5c3f42" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/SM_Prop_Wasteland_CoolingTank_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Circle_039"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Prop_Wasteland_CoolingTank_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/textures/T_Prop_Wasteland_CoolingTank_02_Skin1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_02_Set/textures/T_Prop_Wasteland_CoolingTank_02_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_75912CC2B86749DA" (
            references = None
        )
        {
            def Xform "ref_b4d4ac8095df45969a98c8cb6500dbe4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (0, -9.094947017729282e-13, 0.08154845775590047)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_008"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_517BC8BBBEA94C8C" (
            references = None
        )
        {
            def Xform "ref_fdc37add71164126b15b23499689a907" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk01"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 180)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4CF98B6940178377" (
            references = None
        )
        {
            def Xform "ref_4113245a703e44339e0d5181461f8096" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk02"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 180)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_010"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_84E5F4D456E6E9E8" (
            references = None
        )
        {
            def Xform "ref_8930c2109af641cc9a3d278f0d741561" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk03"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 180)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (4.2727833715616725e-8, -0.9774469378417052, -5.684341886080802e-14)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_010"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_08FC4AA608D3CD0F" (
            references = None
        )
        {
            def Xform "ref_76a30d7928a04808a466f8358ff9a53b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk04"
                        {
                            float3 xformOp:rotateXYZ = (3.2933438, 1.4391046e-7, 180)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (-3.410605131648481e-12, 5.4569682106375694e-12, 0.3513642987116725)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_005"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4BA5AE9D5AF6B689" (
            references = None
        )
        {
            def Xform "ref_bd35dda12baf4fabac2b6aa271847869" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk05"
                        {
                            float3 xformOp:rotateXYZ = (-0.5175002, -2.2620355e-8, 180)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (-1.3791394450001917, 1.3392253789957067, -0.738687768574863)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2E0BD47E2C25B62A" (
            references = None
        )
        {
            def Xform "ref_1d6107d2ade1463a87c125ddd53d9fa8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk06.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk06"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 180)
                            float3 xformOp:scale = (53, 53, 53)
                            double3 xformOp:translate = (-4.547473508864641e-13, 0, -1.1586967382575892)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AB28D9ADC0A13D0B" (
            references = None
        )
        {
            def Xform "ref_f32e84a0312845908b65a53d91590451" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk07.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk07"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 182.23418)
                            float3 xformOp:scale = (49, 49, 49)
                            double3 xformOp:translate = (1.3002825829612448, 1.0586589839831504, 2.289641956778837)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8F0F811B85F37F80" (
            references = None
        )
        {
            def Xform "ref_ca43c7af956e4d649ae34fda96b58d2b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/SM_Prop_Wasteland_CafeteriaTable_Chunk08.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_CafeteriaTable_Chunk08"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 180)
                            float3 xformOp:scale = (54, 54, 54)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_010"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CafeteriaTable_Set/textures/T_Prop_Wasteland_CafeteriaTable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E536FD665B4C957C" (
            references = None
        )
        {
            def Xform "ref_27beccc656d2467089607039e0f5168c" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Buildings_WaterTower_001c/SM_Building_WaterTower_001c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (-10, 0, -199.9)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Building_WaterTower_001c_Part_1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Buildings_WaterTower_001c/textures/Part_1_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Building_WaterTower_001c_Main_Metal_Trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Buildings_WaterTower_001c/textures/Main_Metal_Trim_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Building_WaterTower_001c_Part_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Buildings_WaterTower_001c/textures/Part_2_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_20D0F3F918920311" (
            references = None
        )
        {
            def Xform "ref_d9410191548a49dca73d651a13df7cee" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BDFAFD4362262004" (
            references = None
        )
        {
            def Xform "ref_bf190d41fe304c07b6fb38ba2cf7d061" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01d"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (-0.0000027975293050985783, -64, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_89CE776B07412A65" (
            references = None
        )
        {
            def Xform "ref_9b2d5b8796a44809980ea9208f185942" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (33.96965803827857, 1.8189894035458565e-12, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_59C78B20A6121908" (
            references = None
        )
        {
            def Xform "ref_96dab79e66c340ce8f7e05056bbdb7d6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (-134.23720297581144, 1.8189894035458565e-12, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0638A77E9BCC9023" (
            references = None
        )
        {
            def Xform "ref_e12078bcffa94b3a8acee9838912ac8b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01c"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (-52.2525382572245, 2.7284841053187847e-12, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2DE4EAE6A4A2F015" (
            references = None
        )
        {
            def Xform "ref_312aa648d17f43ad9e1093720b81e83a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01e"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0.0000026359903131378815, 60.30565360433047, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E8F9A71DD2FAA4EC" (
            references = None
        )
        {
            def Xform "ref_f6a3a22c078444b5ada33e8f7a39e170" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/SM_Prop_BSPmesh_town_01_strut_01f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_town_01_strut_01f"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "strut_lp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Strut_01_Set/textures/SM_Prop_BSPmesh_town_01_strut_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A003B7E2144B3F42" (
            references = None
        )
        {
            def Xform "ref_e513584164154aae830773f9cba18ecc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Boiler/SM_Waterboiler.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Waterboiler"
                        {
                            float3 xformOp:rotateXYZ = (180, 0, 180)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0.9310034534787519, -6.172382871358877, -45)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Mat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Boiler/textures/T_Waterboiler_albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Boiler/textures/T_Waterboiler_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Boiler/textures/T_Waterboiler_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Boiler/textures/T_Waterboiler_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5ACB4CE9B8986C98" (
            references = None
        )
        {
            def Xform "ref_85ef3c95c58d4f9e9b55b65403231142" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Prop_Treetrunk/SM_Prop_BSPmesh_Prop_Treetrunk.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Prop_Treetrunk"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "M_Caps_WoodBeam002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Prop_Treetrunk/textures/T_TreeTrunkWoodBeam002_Caps_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Prop_Treetrunk/textures/T_TreeTrunkWoodBeam002_Caps_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Prop_Treetrunk/textures/T_TreeTrunkWoodBeam002_Caps_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "M_Wood_Beam_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/materials/wood/M_Wood_Beam_002a/T_Wood_Beam_002a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/materials/wood/M_Wood_Beam_002a/T_Wood_Beam_002a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/materials/wood/M_Wood_Beam_002a/T_Wood_Beam_002a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_11AA1D86C31326BD" (
            references = None
        )
        {
            def Xform "ref_0c00002d06974fb7a00fbaecaaba3342" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Bracket_Rectangle.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Brick_Wall_014_Bracket_Rectangle"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_F1749BD6EC4A5A7E" (
            references = None
        )
        {
            def Xform "ref_e3136b32f0554c64951af6c74ca49bfc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Bracket_Square.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Brick_Wall_014_Bracket_Square"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_637668544098E023" (
            references = None
        )
        {
            def Xform "ref_3bdecb1f40124f63b78777e8f7198563" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Trim_128.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Brick_Wall_014_Trim_128"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_1E5501A1F2CC9273" (
            references = None
        )
        {
            def Xform "ref_99527c111c6341d6ba92833a1cb994a4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Trim_32.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Brick_Wall_014_Trim_32"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_742FC9F736599AF8" (
            references = None
        )
        {
            def Xform "ref_e15cdd45100646febd9774459452a064" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Trim_16.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Brick_Wall_014_Trim_16"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_92734D0506C8C63C" (
            references = None
        )
        {
            def Xform "ref_ce157020cc3149e7baa7ce1e193fdbd1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Trim_8.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Brick_Wall_014_Trim_8"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_2EE1530951914058" (
            references = None
        )
        {
            def Xform "ref_d6cb9931392e4c5ebe2647169d225215" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Trim_Corner.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Brick_Wall_014_Trim_Corner"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_A1977B94F387F53B" (
            references = None
        )
        {
            def Xform "ref_8ff3b537b1dd49af84965789931ca5c6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyHook/SM_Prop_C17_PulleyHook.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "sm_prop_c17_pulleyhook"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (39.5, 39.5, 39.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "sm_prop_c17_pulleyhook"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyHook/textures/T_mat_37995A775EE1529D_Albedo.a.rtex.dds@ (
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyHook/textures/T_mat_37995A775EE1529D_Metal.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyHook/textures/T_mat_37995A775EE1529D_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_PulleyHook/textures/T_mat_37995A775EE1529D_Rough.r.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4CCB6DD9FF19B748" (
            references = None
        )
        {
            def Xform "ref_ed1e7aeb80ca4d9d993c8e6e3d08b5e9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_C17_Paper01/SM_Prop_C17_Paper01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "mat_7C49F81EF9B2E4E8"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Paper01/textures/T_Prop_C17_Paper01_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Paper01/textures/T_Prop_C17_Paper01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_C17_Paper01/textures/T_Prop_C17_Paper01_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1B68A047410F8755" (
            references = None
        )
        {
            def Xform "ref_f2eb6ece1f9541b4a3aaf5487d577118" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Plaster_Wall_Set/M_Plaster_Wall_Trim_128.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Plaster_Wall_Trim_128"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_4F9782481148318D" (
            references = None
        )
        {
            def Xform "ref_7598a2eec35a4fb7bac6dfe140c0cb6b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Plaster_Wall_Set/M_Plaster_Wall_Trim_32.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Plaster_Wall_Trim_32"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_12B2A0B11F4B6699" (
            references = None
        )
        {
            def Xform "ref_d24b78d708314a2281c871fc3b78c992" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Plaster_Wall_Set/M_Plaster_Wall_Trim_16.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Plaster_Wall_Trim_16"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_0D7B742BD518FD34" (
            references = None
        )
        {
            def Xform "ref_226d530793994e85816f3d7ef382badb" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Plaster_Wall_Set/M_Plaster_Wall_Trim_8.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Plaster_Wall_Trim_8"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_E9CE5DCED3959830" (
            references = None
        )
        {
            def Xform "ref_8ed25dc60fc14491bc6a45204e9bb943" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Plaster_Wall_Set/M_Plaster_Wall_Trim_corner.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Plaster_Wall_Trim_Corner"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_31C5C02080168B46" (
            references = None
        )
        {
            def Xform "ref_5f4fa3aaede94a14bd0c726417b3e336" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_02a_fences_01/SM_Prop_BSPmesh_d1_town_02a_fences_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_d1_town_02a_fences_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Prop_BSPmesh_d1_town_02a_fences_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_02a_fences_01/textures/SM_Prop_BSPmesh_d1_town_02a_fences_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_02a_fences_01/textures/SM_Prop_BSPmesh_d1_town_02a_fences_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_02a_fences_01/textures/SM_Prop_BSPmesh_d1_town_02a_fences_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_02a_fences_01/textures/SM_Prop_BSPmesh_d1_town_02a_fences_01_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D59B87710F73A83B" (
            references = None
        )
        {
            def Xform "ref_c57e0beac2b34742b5bbb816085eca6a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Concrete_Wall_032_Set/M_Concrete_Wall_032_Trim_128.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Concrete_Wall_032_Trim_128"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_352C2E63A666C46A" (
            references = None
        )
        {
            def Xform "ref_0cd5b9a6256b471b9a56bf2b163c6f97" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Concrete_Wall_032_Set/M_Concrete_Wall_032_Trim_32.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Concrete_Wall_032_Trim_32"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_4FDEF1CC28AEF963" (
            references = None
        )
        {
            def Xform "ref_eeb7bf6a57e0408d9bcd0d46db158e12" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Concrete_Wall_032_Set/M_Concrete_Wall_032_Trim_16.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Concrete_Wall_032_Trim_16"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_0396E443CD2A1805" (
            references = None
        )
        {
            def Xform "ref_9fd22bebb6b94a19961f91ecb1d91a45" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Concrete_Wall_032_Set/M_Concrete_Wall_032_Trim_8.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Concrete_Wall_032_Trim_8"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_F3F9F0E4050F8B94" (
            references = None
        )
        {
            def Xform "ref_aa72add1320a407486bc4939d0b26cc9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Concrete_Wall_032_Set/M_Concrete_Wall_032_Trim_Corner.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Concrete_Wall_032_Trim_Corner"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_5E722C20C1DC2974" (
            references = None
        )
        {
            def Xform "ref_6ab45261e79245369efaa5fd9fea3f32" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_049_Set/M_Brick_Wall_049b_Arch.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Brick_Wall_049b_Arch"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Brick_Wall_049b_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_049_Set/textures/brickwall049b_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }



        over "mesh_337C60BC1728B198" (
            references = None
        )
        {
            def Xform "ref_6c5ff27d26254d18a8ea8ead2982fb60" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bars_01/SM_Prop_BSPmesh_d1_town_03_bars_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (180, 0, 90)
                        float3 xformOp:scale = (0.01, 0.01, 0.01)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "M_SM_Prop_BSPmesh_d1_town_03_bars_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bars_01/textures/T_Prop_BSPmesh_d1_town_03_bars_01_D.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bars_01/textures/T_Prop_BSPmesh_d1_town_03_bars_01_MT.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bars_01/textures/T_Prop_BSPmesh_d1_town_03_bars_01_N_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bars_01/textures/T_Prop_BSPmesh_d1_town_03_bars_01_R.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_36F815AFDC023D47" (
            references = None
        )
        {
            def Xform "ref_36f67a61f1124b85bbb9271d0519ba04" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/SM_Prop_Lab_Box01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Lab_Box01a"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Lab_Box01a__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_D.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_M.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_N_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_R.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_70F556F9758E9AF8" (
            references = None
        )
        {
            def Xform "ref_8a368870469047298a1b1d9e8a9a0da2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/SM_Prop_Lab_Box01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Lab_Box01b__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_D.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_M.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_N_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Lab_Box01_Set/textures/T_Lab_Box_01_R.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_59F68AAFAE059F8A" (
            references = None
        )
        {
            def Xform "ref_05eb943ab3bb4b2a9047513e33f18e65" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_049_Set/M_Brick_Wall_049d_Arch.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "M_Brick_Wall_049d_Arch"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Brick_Wall_049d_trim"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_049_Set/textures/brickwall049d_trim_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_77E37F35494FF8EA" (
            references = None
        )
        {
            def Xform "ref_7094c012cba4445d8e586b79004d1b5e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_MineHopper/SM_Prop_BSPmesh_MineHopper.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -10)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "MineHopper_HALF"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (-58.999999999999886, 0, 2.842170943040401e-14)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "MineHopper_SBS"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_MineHopper/textures/MineHopper_FULL_SBS2_MineHopper_SBS_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_MineHopper/textures/MineHopper_FULL_SBS2_MineHopper_SBS_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_MineHopper/textures/MineHopper_FULL_SBS2_MineHopper_SBS_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_MineHopper/textures/MineHopper_FULL_SBS2_MineHopper_SBS_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_01CF6617D57580F3" (
            references = None
        )
        {
            def Xform "ref_b6f0a7128c5a4511931fc00529ec70f6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_014_Set/M_Brick_Wall_014_Trim_Rounded_64.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Brick_Wall_014_Trim_Rounded_64"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_8736F6E7DABC1566" (
            references = None
        )
        {
            def Xform "ref_91d12865d60e4719a5c110b6f71704ce" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "furnirturedrawer001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7562C168C708C5ED" (
            references = None
        )
        {
            def Xform "ref_c8c856541fa04679aafd80562745bd2d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_gib1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "gib1_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D1FFA7841F48693B" (
            references = None
        )
        {
            def Xform "ref_f47ea33fcc944b91b628390ad4408402" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_gib2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "gib2_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_29F11516EB08003E" (
            references = None
        )
        {
            def Xform "ref_e11a41733f9e45d2adca7f724149e0b7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_gib3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "gib3_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_124EE8F75FFA1958" (
            references = None
        )
        {
            def Xform "ref_27ae85d2a3e045bcb475dffe92ce8084" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_gib4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "gib4_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8E700C661694199C" (
            references = None
        )
        {
            def Xform "ref_39fce35e304a4ed79f0151ce569ac949" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_gib5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "gib5_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_195F0838016636D9" (
            references = None
        )
        {
            def Xform "ref_5062d8cb1d9c4d2dacf05ed5a47c8a3f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_gib6.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "gib6_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_69A6960BF8AFFBE0" (
            references = None
        )
        {
            def Xform "ref_70d9905f20e34a1b8e4bc46f62899dd7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/furnirturedrawer001_shard1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard1_n"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Furniture_Drawer001/textures/T_Material_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_92478AAB63728897" (
            references = None
        )
        {
            def Xform "ref_aa53b46302e842628d0e3bbdbee87f9a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/SM_Prop_BSPmesh_d1_town_03_bucket_platform.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT4_1kx4k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT4_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT4_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT4_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT4_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT5_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT5_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT5_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT5_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_bucket_platform/textures/T_Prop_BSPmesh_d1_town_03_bucket_platform_MAT5_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C0DE7766E977D919" (
            references = None
        )
        {
            def Xform "ref_c0931880ead242939f007270eeb9a9f8" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/SM_Prop_BSPmesh_d1_town_03_fence_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pasted__polySurface88"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, -63.6, 0.5)
                            float3 xformOp:translate:pivot = (0.7382217, 63.62084, -0.009109174)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]
                        }

                        over "Looks"
                        {
                            over "lambert4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_BC.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_67ABAD43FA005861" (
            references = None
        )
        {
            def Xform "ref_6201b952524448fb878bab33ff9d3e90" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_Brick_Wall_048_Set/M_Brick_Wall_048e_Arch.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Stone_Arch"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Brick_Arch"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Stone_bottom"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Stone_Top_Ornament"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_27898E88BDDF52EF" (
            references = None
        )
        {
            def Xform "ref_2769c494bc43422f8c896536e50d87c7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/SM_Prop_Wasteland_PowerTower.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 90)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 0.25 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT2_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            over "World"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 90)
                                float3 xformOp:scale = (0.395, 0.395, 0.395)
                                double3 xformOp:translate = (0, 0, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                                over "Looks"
                                {
                                    over "MAT2"
                                    {
                                        over "Shader"
                                        {
                                            asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT2_Albedo.a.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Albedo/Opacity Map"
                                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT2_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT2_Roughness.r.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Roughness Map"
                                                doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                        }
                                    }

                                    over "MAT1"
                                    {
                                        over "Shader"
                                        {
                                            asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT1_Albedo.a.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Albedo/Opacity Map"
                                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT1_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_PowerTower/textures/T_Prop_Wasteland_PowerTower_MAT1_Roughness.r.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Roughness Map"
                                                doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }







        over "mesh_832855FB7B6905A0" (
            references = None
        )
        {
            def Xform "ref_a2d8f6aa46aa405a958f763b1e117352" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_02a_fences_02/SM_Prop_BSPmesh_d1_town_02a_fences_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Fence"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "lambert4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_BC.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_03_fence_01/textures/T_Prop_BSPmesh_d1_town_03_fence_01_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }




        over "mesh_869F3DBE7821FB58" (
            references = None
        )
        {
            def Xform "ref_064fd6066414419996c9f306a8b7ad8f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/ravenholm_ladder_gate_breakablebit.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "breakablebit_"
                        {
                            over "Breakable_Bit"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, -90)
                                float3 xformOp:scale = (0.395, 0.395, 0.395)
                                double3 xformOp:translate = (0, 0, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        over "Looks"
                        {
                            over "Ladder_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6BF87D5CD56A944B" (
            references = None
        )
        {
            def Xform "ref_c1aaa60de76a424e86ee28678416af24" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/ravenholm_ladder_gate_support.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0.75, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, -90)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "Ladder_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B876D02F25269EF9" (
            references = None
        )
        {
            def Xform "ref_42776b92237e42f2a09544bd6172d736" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/ravenholm_ladder_gate_hinge.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0.25, -2.5, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Ladder_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_94BE1310E0397554" (
            references = None
        )
        {
            def Xform "ref_0dfb89566b28475bb25a2beb877712d5" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/ravenholm_ladder_gate_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Ladder_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DA5891F5EB67C9E7" (
            references = None
        )
        {
            def Xform "ref_06461c03c98c487b9501d0086a593f2a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/ravenholm_ladder_gate_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Ladder_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_BaseColor.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Ravenholm_Ladder_Set/textures/Ladder_Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0168FA9A90BA10C8" (
            references = None
        )
        {
            def Xform "ref_f41fcfca151a499987cff1cc821c913a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/SM_d1_town_01_grate_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.01, 0.01, 0.01)
                        double3 xformOp:translate = (-1, 1, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "m_grate_set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_58BD84F94FE5A7AA" (
            references = None
        )
        {
            def Xform "ref_0a4d8f655e564d20a8fb8b53b3a7aeb6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/SM_d1_town_01_grate_03_broken.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (-1, 1, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "grate_broken_001_low"
                        {
                        }

                        over "Looks"
                        {
                            over "m_grate_broken_burned"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_burned_albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_burned_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_burned_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_burned_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_512B14741CC3EF9C" (
            references = None
        )
        {
            def Xform "ref_25d5a565c6914ac6a13a42a375c7eee4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/SM_d1_town_01_grate_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 180)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "m_grate_set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_rough.r.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_30F6E6663F410C60" (
            references = None
        )
        {
            def Xform "ref_25d5a565c6914ac6a13a42a375c7eee4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/SM_d1_town_01_grate_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "m_grate_set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Props_BSPmesh_d1_town_01a_grate_Set/textures/T_grate_set_rough.r.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "bars_round_low_443"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_39F4E97FEF518A46" (
            references = None
        )
        {
            def Xform "ref_5b2d0aebe33b488589e8f01963176770" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_01_catwalk_set/d1_town_01_catwalk_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Catwalk02Tile_010"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_663D816E4A5FBEF0" (
            references = None
        )
        {
            def Xform "ref_f9cd48c1113d47d08b328b773a46040f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_01_catwalk_set/d1_town_01_catwalk_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Catwalk02Tile_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Catwalk02Tiles_Mat_005"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_79D72271A5D3AC34" (
            references = None
        )
        {
            def Xform "ref_a4ad85ac94814c3e985b6d85af908692" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_01_catwalk_set/d1_town_01_catwalk_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Catwalk02Tile_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat_007"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_22EEF3CB6297F13A" (
            references = None
        )
        {
            def Xform "ref_925cdc5955c74febb38e80b7da4beb1d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_d1_town_01_catwalk_set/d1_town_01_catwalk_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Catwalk02Tile_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E697E52AEC8D211D" (
            references = None
        )
        {
            def Xform "ref_489d34247b134193a64d25834681bf90" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_town_01a_catwalk/SM_Prop_BSPmesh_town_01a_catwalk.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Catwalk02Tile_006"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DB10F63F86F10331" (
            references = None
        )
        {
            def Xform "ref_b7525397bcdd4b52b7e8a2db12330578" (
                prepend references = @./assets/ch6_ravenholm/models/SM_prop_BSPmesh_town_01_catwalk_05/SM_prop_BSPmesh_town_01_catwalk_05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Catwalk02Tile_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Catwalk_Set/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Catwalk_Set/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Catwalk_Set/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Catwalk_Set/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E850EF9EC0471B96" (
            references = None
        )
        {
            def Xform "ref_ea5e9be6f44b4046b900b0c398f7885b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Catwalk_Support/SM_Prop_BSPmesh_Catwalk_Support.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "frame_low"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 31, -34.2)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "mat_lp_001"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Catwalk_Support/textures/SM_Prop_BSPmesh_Catwalk_Support_albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Catwalk_Support/textures/SM_Prop_BSPmesh_Catwalk_Support_metallic.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Catwalk_Support/textures/SM_Prop_BSPmesh_Catwalk_Support_normal_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Catwalk_Support/textures/SM_Prop_BSPmesh_Catwalk_Support_rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_84656132CEC7FE36" (
            references = None
        )
        {
            def Xform "ref_cd30dd28b50645e9884716f133ff355e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_GravelFloor_002 Set/M_Nature_GravelFloor_002b_traintrack_128.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Nature_GravelFloor_002b_traintrack_128"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_5BFC93677DC0323A" (
            references = None
        )
        {
            def Xform "ref_f8f566a971b04acaad87a41eb96a0fde" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_GravelFloor_002 Set/M_Nature_GravelFloor_002b_traintrack_512.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "M_Nature_GravelFloor_002b_traintrack_512"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_792DC74535013075" (
            references = None
        )
        {
            def Xform "ref_6ac49c6b7577481596aa86d3347f7640" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Prop_Foliage_Ivy_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_00E5D1F8A87322C2" (
            references = None
        )
        {
            def Xform "ref_d409b6fe624a477a85bca86090181f29" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Straight.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.395, 0.395, 0.395)
                double3 xformOp:translate = (0, 0, -8.212875270106167)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms" (
                    active = false
                )
                {
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_E2AA67F774F0C63B" (
            references = None
        )
        {
            def Xform "ref_1103b243081c4c82b416a883b094701b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Corner.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.35987923, 0.395, 0.395)
                double3 xformOp:translate = (-5.036362409122148, 3.988729487485216, -6.110667527536862e-13)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_4C9FF0FC62EE4912" (
            references = None
        )
        {
            def Xform "ref_a5ed1fb5da674b8d860afc8d0b49f4b2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Straight.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.2, 0.2, 0.23003437)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms" (
                    active = false
                )
                {
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_132647C11E42B5C7" (
            references = None
        )
        {
            def Xform "ref_7990b5b90e254ab3bb006000fd4e9324" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Straight.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.8, 0.8, 0.8)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms" (
                    active = false
                )
                {
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_ED6C7F99581E29F0" (
            references = None
        )
        {
            def Xform "ref_fb6c5b8cea4c49eaac6f22496ebf2f25" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Corner.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.2, 0.2190266, 0.21842195)
                double3 xformOp:translate = (2.2737367544323206e-13, 4.547473508864641e-13, -1.1561683711798452)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_93C84E44DD6C7C30" (
            references = None
        )
        {
            def Xform "ref_a2db0edf894646428437d6660aad1915" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Corner.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.825447, 0.9273639, 0.9016989)
                double3 xformOp:translate = (0, 1.2960299500264227e-11, -6.997837091006929)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_769156B15C2F94B5" (
            references = None
        )
        {
            def Xform "ref_7885775b0f3b4ad1a076d6ebd6cf0fd3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Foliage_HangingVines_Straight.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                float3 xformOp:scale = (0.48591924, 0.88892114, 0.8)
                double3 xformOp:translate = (-29.952223588114748, 66.53882293799325, 62.10000092536211)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_04E1017B1A49B697" (
            references = None
        )
        {
            def Xform "ref_a90c5d07b6ce4a85aec78473770d6411" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Prop_Foliage_Ivy_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                float3 xformOp:rotateXYZ = (0, -0.5, 180)
                double3 xformOp:scale = (-1, 1, 1)
                double3 xformOp:translate = (0.10000000149011612, 26.41224207135184, 1.2305923359290245)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_0BB2849209D5EEFB" (
            references = None
        )
        {
            def Xform "ref_3da387c4a67c4dadb1088862cbd30b05" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Prop_Foliage_Ivy_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (-1, 1, 1)
                double3 xformOp:translate = (2.400000035762787, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_144BE25358778F31" (
            references = None
        )
        {
            def Xform "ref_df102170f7d4464cb9b290a4a7bd24a2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Ivy_Set/SM_Prop_Foliage_Ivy_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 180)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.400000095367432, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_D777DA09D87212E9" (
            references = None
        )
        {
            def Xform "ref_cdb21788cfa54300943a20efb52b41db" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/SM_Prop_Wasteland_CoolingTank_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "SM_Prop_Wasteland_CoolingTank_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Prop_Wasteland_CoolingTank_01_1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_1_Base_color.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_1_Metallic.m.rtex.dds@
                                }
                            }

                            over "M_Prop_Wasteland_CoolingTank_01_2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_2_Base_color.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_2_Metallic.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_2_Normal_OpenGL_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_2_Roughness.r.rtex.dds@
                                }
                            }

                            over "M_Prop_Wasteland_CoolingTank_01_3"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_3_Base_color.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_3_Metallic.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_3_Normal_OpenGL_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_CoolingTank_01/textures/M_Prop_Wasteland_CoolingTank_01_3_Roughness.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C981ACF29BB79FC5" (
            references = None
        )
        {
            def Xform "ref_cb00bd1ca94e42af8f3ecfc3df5821ab" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/SM_Prop_BSPmesh_Town_01_Railing_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Town_01_Railing_04"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Town_01_Railing_04"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Metallic.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Roughness.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1356E2EFDE17C166" (
            references = None
        )
        {
            def Xform "ref_071ece5fb1b34611ae9bccbbb4ca2d4e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BB9E6F1656557862" (
            references = None
        )
        {
            def Xform "ref_30c0887874d44424a8349dc20b9e7e72" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CD9C49402BEC2C96" (
            references = None
        )
        {
            def Xform "ref_d5f9b91f0fa34f1ba0d5a2b046094111" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F00093BBCFCFC46D" (
            references = None
        )
        {
            def Xform "ref_751dc29b187c460486bbe6ab6128f877" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D56CA29A7BCAD4BE" (
            references = None
        )
        {
            def Xform "ref_0f6fab95e2224b269a8ae28e45731fcf" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AC931842C91AD51E" (
            references = None
        )
        {
            def Xform "ref_66998b2779264ff894fba88c1a2d8c44" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DAE20C7FB8829E45" (
            references = None
        )
        {
            def Xform "ref_8e76a65cf8ac4cc2b9eb1c34c1e50389" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1283A9A45318B7F2" (
            references = None
        )
        {
            def Xform "ref_0385e9ba638542ba8416aaa0be12ce14" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_scurve02_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D3C0CFAB79248E6C" (
            references = None
        )
        {
            def Xform "ref_9409e5ea82594016bad0b40db66321d2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E08F30D0A2188416" (
            references = None
        )
        {
            def Xform "ref_e6396667660a444480787ec4336bafcb" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_36163963E88A7976" (
            references = None
        )
        {
            def Xform "ref_212046d05802439e87cb550dcf40e0ec" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_tjoint.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DEFC780C24740449" (
            references = None
        )
        {
            def Xform "ref_e1371895c48549b79f7e3b8a46042e8a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7634F5F5AC36BD4D" (
            references = None
        )
        {
            def Xform "ref_82560cff1785410bb95a4c29d9c8e0e1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0036D3A3D18FE9B9" (
            references = None
        )
        {
            def Xform "ref_b7cf6e7e69f543aba9ade4e7ee9d751e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3DAA095835AC0142" (
            references = None
        )
        {
            def Xform "ref_d251199bf12745e4815ef6418d39db52" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_18C6387981A91191" (
            references = None
        )
        {
            def Xform "ref_af97e8a5738f46a3aec93947db274d4b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_613982A133791031" (
            references = None
        )
        {
            def Xform "ref_4e06ab66f72d438c950a7e32b6a262b5" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1748969C42E15B6A" (
            references = None
        )
        {
            def Xform "ref_083418291a3d4280b2568a54b16a1e5f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DF293347A97B72DD" (
            references = None
        )
        {
            def Xform "ref_26c29540494c4807825c3e044dea48ed" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_scurve02_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1E6A554883474B43" (
            references = None
        )
        {
            def Xform "ref_36149a89620c448c8c60b27732dc935b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2D25AA33587B4139" (
            references = None
        )
        {
            def Xform "ref_e8414878a61a45f2bc688b424c6bdd9e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FBBCA38012E9BC59" (
            references = None
        )
        {
            def Xform "ref_c9c0b02fb16347b590eddde496408403" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_tjoint.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5300B202A0088D72" (
            references = None
        )
        {
            def Xform "ref_43dea60dc76b406298eb9e3bfc549f76" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FBC83FFB284A3476" (
            references = None
        )
        {
            def Xform "ref_3b1e29e8859642f3b187b730799e3a53" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8DCA19AD55F36082" (
            references = None
        )
        {
            def Xform "ref_8f82e40e3eac434586f022f450982613" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B056C356B1D08879" (
            references = None
        )
        {
            def Xform "ref_b7591ba71d3242babda87bafea9356b4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_953AF27705D598AA" (
            references = None
        )
        {
            def Xform "ref_9732daecf7c24f7c9278aafcc17ecf42" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ECC548AFB705990A" (
            references = None
        )
        {
            def Xform "ref_96b373620c344a56b7ca158b7b49b132" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9AB45C92C69DD251" (
            references = None
        )
        {
            def Xform "ref_3036d77611194a4fb136fe7d147e390a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_52D5F9492D07FBE6" (
            references = None
        )
        {
            def Xform "ref_be944721bac7465da24229f3bb311564" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_scurve02_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_93969F46073BC278" (
            references = None
        )
        {
            def Xform "ref_50c791b8c2404220a03b358c47b58c35" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A0D9603DDC07C802" (
            references = None
        )
        {
            def Xform "ref_0ed86e372422447f913e3f5ca0397b21" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7640698E96953562" (
            references = None
        )
        {
            def Xform "ref_5514f80b28f44bd29f98aed30d608b8e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_tjoint.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CD5CB15BE4DCB15E" (
            references = None
        )
        {
            def Xform "ref_8acacaec08e8406e837bf8c1c1db45ab" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Background_Treeline/BgTreeLine.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "BgTreeLine"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.1, 0.1, 0.1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }

        over "mesh_71FBE1C0E2E43FF6" (
            references = None
        )
        {
            def Xform "ref_da621b2cb87941ed8304c8647b354b6f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Foliage_Giant_Oak/SM_Prop_GiantOak.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }


        over "mesh_C2F7889A14CC55A9" (
            references = None
        )
        {
            def Xform "ref_af3472911924437fa9f656114d273902" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9F657456EACF70C8" (
            references = None
        )
        {
            def Xform "ref_87079940c8624d4bbf6f1530aa43fab2" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_049C0B9281D116AB" (
            references = None
        )
        {
            def Xform "ref_411df25065cb40d597a7e34fc1f7175a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8D6471063873C03C" (
            references = None
        )
        {
            def Xform "ref_a338b1e6735b45bcad02470d6a342d12" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3B7EAB1A9647DE2E" (
            references = None
        )
        {
            def Xform "ref_91cc428dc08a49d791acb305514361e5" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.5)
                    double3 xformOp:translate = (0, 0, -2)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_509CFD8034E2AEA9" (
            references = None
        )
        {
            def Xform "ref_346d21979c6c425aa1ce2cf13af370d0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, -2)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D366763CE816B86" (
            references = None
        )
        {
            def Xform "ref_3ad04bf8215d495e8fc007de65943d28" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, -2)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F6D431F96C241B01" (
            references = None
        )
        {
            def Xform "ref_f99ad01a278b4a31babe6d3e465cc0bf" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.5)
                    double3 xformOp:translate = (0, 0, -2)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_40CEEBE5C2100513" (
            references = None
        )
        {
            def Xform "ref_a0d410c76c2b4d47b5a5c4ad8aca5ea5" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C93691717BB2D384" (
            references = None
        )
        {
            def Xform "ref_51575acb93ac4fee98644280e798a88d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_52CFEEB510ACB5E7" (
            references = None
        )
        {
            def Xform "ref_1f97cd0431dd4413844a4d1a149f18e0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0F5D1279EEAF9086" (
            references = None
        )
        {
            def Xform "ref_73c00843e57841e28e2f831a55a777cf" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_10CAAD6D4AFDE2BD" (
            references = None
        )
        {
            def Xform "ref_2f3f99227dae45dd9b6d8bc92c8b9e4f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, -2)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7B28FBF7E858923A" (
            references = None
        )
        {
            def Xform "ref_7b406be6900f40a6bb6072499e4b28a9" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.5)
                    double3 xformOp:translate = (0, 0, -2)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CD3221EB466C8C28" (
            references = None
        )
        {
            def Xform "ref_19c35bd899ef4526b4a96453bf9b2f67" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_44CA5B7FFFCE5ABF" (
            references = None
        )
        {
            def Xform "ref_902f0d2344714716949904e668e311d4" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DF3324BB94D03CDC" (
            references = None
        )
        {
            def Xform "ref_1120ebc70d3549f6ae1818bc181e6c6c" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_82A1D8776AD319BD" (
            references = None
        )
        {
            def Xform "ref_8ea69110f3824421aa85286779e32758" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.25, 0.25, 0.25)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2579EC2319C02E8F" (
            references = None
        )
        {
            def Xform "ref_25d46196da50494b9fb59029a44dd79a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4F338486DE5E6F2A" (
            references = None
        )
        {
            def Xform "ref_336b1522871a4ff2890f147aca9fd9cc" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BC3834E78C207A5D" (
            references = None
        )
        {
            def Xform "ref_bbbd80c50e3244a5833b73b071b83d98" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_99C5BF0BB91153F4" (
            references = None
        )
        {
            def Xform "ref_3477f092f03a4001b32717279422a304" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9C4D29E60271AD7B" (
            references = None
        )
        {
            def Xform "ref_5dce9f54edb54e0197e5b9017202c543" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CBFC481DB0FA3CDB" (
            references = None
        )
        {
            def Xform "ref_94bdbef211e04a149f478194b754208a" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_43BF204A18FDD981" (
            references = None
        )
        {
            def Xform "ref_33fc1c681d59488e8ccdbac0fb6020ae" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5522D76C78C703C9" (
            references = None
        )
        {
            def Xform "ref_69a81bfa8bc446e6acd769e3991d58e6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_tjoint.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarC_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_98884D8F82A4C6E6" (
            references = None
        )
        {
            def Xform "ref_fb11757ac5874d3989fca1ddf6648689" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_tjoint.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1574878106D84FDD" (
            references = None
        )
        {
            def Xform "ref_549521d0e8364372947532831f19095b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_tjoint.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8E15BAA9E29E1CAE" (
            references = None
        )
        {
            def Xform "ref_fd3213775c43416faa5a1834b41fc21d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0656D2FE4A99F9F4" (
            references = None
        )
        {
            def Xform "ref_bf50b352ea3e4afa99fe42f02697135f" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_51E7B305F8126854" (
            references = None
        )
        {
            def Xform "ref_e411fd18c5a2474eaf5a43b92ebd7a0d" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_546F25E8437296DB" (
            references = None
        )
        {
            def Xform "ref_60e3bbf58e3c455ab7d64f3456379461" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7192AE047643BF72" (
            references = None
        )
        {
            def Xform "ref_bc150857bf804e2789a8df7a1799d562" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_82991E65243DAA05" (
            references = None
        )
        {
            def Xform "ref_8940ba7f390f42bd8397ab9bac614d29" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E8D376C0E3A3EBA0" (
            references = None
        )
        {
            def Xform "ref_0bd9d56242044cd383866eecad937ed7" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarB_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_03E970A766E29595" (
            references = None
        )
        {
            def Xform "ref_2057fe5d045d42e58e340b026dac1504" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8BAA18F0CEE570CF" (
            references = None
        )
        {
            def Xform "ref_1f6eca870e7148c7b1490dc20c8ec517" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_straight_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DC1B790B7C6EE16F" (
            references = None
        )
        {
            def Xform "ref_a8e12688ab434c46b34df41bd93aee97" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve02_short.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D993EFE6C70E1FE0" (
            references = None
        )
        {
            def Xform "ref_a3d778a2e0834c2480d2932c0f9127ff" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_lcurve01_long.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FC6E640AF23F3649" (
            references = None
        )
        {
            def Xform "ref_f908e808f1f24fbf93882ac349caa105" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0F65D46BA041233E" (
            references = None
        )
        {
            def Xform "ref_43a53ebc75e741578d7bf70de7a682ea" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_90degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_652FBCCE67DF629B" (
            references = None
        )
        {
            def Xform "ref_d54bd6a16ac543408270c67535f48a5b" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/SM_Prop_Pipes_03_45degrees.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Albedo.a.rtex.dds@
                                    bool inputs:enable_emission = 0
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Pipes_01-02-03_Set/textures/T_Prop_Pipes_VarA_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B556915CC1062405" (
            references = None
        )
        {
            def Xform "ref_3f9e83b29c4d4897b96ff17ff938fbff" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/SM_Prop_Wasteland_Tram_Bucket.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 180)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT1_4k"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_Metallness.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_Roughness.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0DF36D8FA09CD314" (
            references = None
        )
        {
            def Xform "ref_e81199dc9ea44980aa7f7d7e422a98aa" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/SM_Prop_Wasteland_Tram_Bracket.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT1_4k"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_Metallness.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT1_Roughness.r.rtex.dds@
                                }
                            }

                            over "MAT2_1kx2k"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT2_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT2_Metallness.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT2_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT2_Roughness.r.rtex.dds@
                                }
                            }

                            over "MAT3_1k"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT3_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT3_Metallness.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT3_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Tram_Set/textures/T_Prop_Wasteland_Tram_MAT3_Roughness.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1B92C55B1DE38CF9" (
            references = None
        )
        {
            def Xform "ref_d7be232f0cab430ebbae5f48e94be650" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPMesh_d1_town_02_Elevator_Catwalk/SM_Prop_BSPMesh_d1_town_02_Elevator_Catwalk.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "SM_Catwalk02Tile_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Catwalk02Tiles_Mat"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_46D3155ABDEFE53A" (
            references = None
        )
        {
            def Xform "ref_1dcdaadf37c74da3a6881f994eb383f3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/SM_Prop_Junk_Cinderblock01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_CinderBlock_A1_01"
                {
                    float3 xformOp:rotateXYZ = (0, 90, 0)
                    float3 xformOp:scale = (0.78, 0.78, 0.735)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_CinderBlock_A1_01"
                    {
                        over "Shader"
                        {
                            custom asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/textures/T_Prop_CinderBlock_A1_Albedo.a.rtex.dds@
                            custom asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/textures/T_Prop_CinderBlock_A1_Normal_OTH_OTH_Normal.n.rtex.dds@
                            custom asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/textures/T_Prop_CinderBlock_A1_Rough.r.rtex.dds@
                        }
                    }
                }
            }
        }

        over "mesh_31CDEA5CD3A855E3" (
            references = None
        )
        {
            def Xform "ref_d7d3464de159426e99b719c56d1cd15e" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/SM_Prop_Wasteland_Wheel_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "World"
                            {
                                over "Looks"
                                {
                                    over "SM_Prop_Wasteland_Wheel_01"
                                    {
                                        over "Shader"
                                        {
                                            custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_01_Albedo.a.rtex.dds@
                                            custom float inputs:metallic_constant = 0.25
                                            custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_01_OTH_Normal.n.rtex.dds@
                                            custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_01_Rough.r.rtex.dds@
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_86CF63BA4A3A1F38" (
            references = None
        )
        {
            def Xform "ref_759a9e094a5146629e3f6e0237b1fc89" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/SM_Prop_Wasteland_Wheel_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "ReferenceTarget"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "XForms"
                        {
                            float3 xformOp:scale = (1, 1, 1)

                            over "World"
                            {
                                over "Looks"
                                {
                                    over "SM_Prop_Wasteland_Wheel_01"
                                    {
                                        over "Shader"
                                        {
                                            custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_01_Albedo.a.rtex.dds@
                                            custom float inputs:metallic_constant = 0.25
                                            custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_01_OTH_Normal.n.rtex.dds@
                                            custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_01_Rough.r.rtex.dds@
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_04E58107953C8A2D" (
            references = None
        )
        {
            def Xform "ref_729d7f05482544eebab169e08bfa43d1" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/SM_Prop_Wasteland_Wheel_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Wheel_02a"
                            {
                                over "Shader"
                                {
                                    custom float inputs:metallic_constant = 0.25
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_02a_OTH_Normal.n.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_47A8EC5FF28CABE7" (
            references = None
        )
        {
            def Xform "ref_b06e03a4b57e4d4abf93d7e62e2d04ae" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/SM_Prop_Wasteland_Wheel_02b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Wheel_02b"
                            {
                                over "Shader"
                                {
                                    custom float inputs:metallic_constant = 0.25
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_02b_OTH_Normal.n.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_768B70A593C82CB5" (
            references = None
        )
        {
            def Xform "ref_93a85601454d4efaba81d4b05c193e89" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/SM_Prop_Wasteland_Wheel_03a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "ReferenceTarget"
                    {
                        over "XForms"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "World"
                            {
                                over "Looks"
                                {
                                    over "SM_Prop_Wasteland_Wheel_03a"
                                    {
                                        over "Shader"
                                        {
                                            custom asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_03a_Albedo.a.rtex.dds@
                                            custom float inputs:metallic_constant = 0.25
                                            custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_03a_OTH_Normal.n.rtex.dds@
                                            custom asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_03a_Rough.r.rtex.dds@
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8C6D75FBB146C0AA" (
            references = None
        )
        {
            def Xform "ref_e81d8173a8134b1d973bd360690aa1c6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/SM_Prop_Wasteland_Wheel_03b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Wheel_03b"
                            {
                                over "Shader"
                                {
                                    custom float inputs:metallic_constant = 0.25
                                    custom asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_Wasteland_Wheel_Set/textures/SM_Prop_Wasteland_Wheel_03b_OTH_Normal.n.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CF7C6352DA8C3212"
        {
            def Xform "BgTreeLine_0" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Background_Treeline/BgTreeLine.usd@
            )
            {
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "BgTreeLine"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }
                }
            }

            over "mesh" (
                active = false
            )
            {
            }
        }
    }

    over "Looks"
    {

        over "mat_610EBE662E8916DC"
        {
            over "Shader"
            {
                asset inputs:metallic_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_38C9D8448FCEB10D"
        {
            over "Shader"
            {
                asset inputs:reflectionroughness_texture = @@
            }
        }



        over "mat_6D8330E456D913A5"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Albedo.a.rtex.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Metal.m.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_d2_prison_02_catwalks/textures/T_PrisonCatwalkTiles_Rough.r.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

    }

    over "instances"
    {
        over "inst_D484746A8DF2DDFE_0"
        {
            over "mesh"
            {
                token visibility = "invisible"
            }
        }
    }

    over "cameras"
    {
        over "Camera"
        {
            matrix4d xformOp:transform = ( (-0.437986551819307, -0.8989815239623646, 3.537062531755916e-9, 0), (0.38835387981723596, -0.18920719612467446, 0.901876876832844, 0), (-0.8107706484921837, 0.3950099448231242, 0.43199317012474187, 0), (734.2002600636688, 222.18797506128374, 196.38978211752064, 1) )
        }
    }
}

