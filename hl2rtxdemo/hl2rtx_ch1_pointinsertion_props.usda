#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {
        over "mesh_B9D102C72B6AEBAA" (
            references = None
        )
        {
            def Xform "ref_7888fa64d93740f1815ae08eaa6a6a84" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Stunbaton_Worldmodel/SM_Prop_Weapon_Stunbaton_Worldmodel.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "stunstick"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "stunbaton"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Stunbaton_Worldmodel/textures/stunbaton_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 1 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Stunbaton_Worldmodel/textures/stunbaton_emissive.e.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Stunbaton_Worldmodel/textures/stunbaton_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Stunbaton_Worldmodel/textures/stunbaton_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Stunbaton_Worldmodel/textures/stunbaton_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4D01D1FCAC390FCE" (
            references = None
        )
        {
        }

        over "mesh_95BBE109B28CC083" (
            references = None
        )
        {
            def Xform "ref_8940ff4f22814e8ea64193f7fb612eef" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Woodwall030b_Window_Set/woodwall030b_window02a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "frame_64_low"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_86724F599E0C46AB" (
            references = None
        )
        {
            def Xform "ref_6446f169efe7402b82e8e44bc86f8fe5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Woodwall030b_Window_Set/woodwall030b_window02a_bars.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "bars_64"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_3A9ED8078B2E2DFF" (
            references = None
        )
        {
            def Xform "ref_9e10288d40ee4e7a84d35f8ab42b8a20" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Outdoor/SM_Prop_Trainstation_Bench_Outdoor.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_Bench_Outdoor"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "SM_Prop_Trainstation_Bench_Outdoor"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Outdoor/textures/T_Prop_Trainstation_Bench_Outdoor_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Outdoor/textures/T_Prop_Trainstation_Bench_Outdoor_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Outdoor/textures/T_Prop_Trainstation_Bench_Outdoor_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Outdoor/textures/T_Prop_Trainstation_Bench_Outdoor_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_3CAEEFF4C73E4C98" (
            references = None
        )
        {
            def Xform "ref_db553b40171944f981b02c25d10e27e7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MetalCan_001a/SM_Prop_Junk_Garbage_MetalCan_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Circle_014"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (54, 54, 54)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "SM_Prop_Junk_Garbage_MetalCan_001a_001"
                    {
                        over "Shader"
                        {
                            float inputs:metallic_constant = 0.5 (
                                customData = {
                                    float default = 0
                                    dictionary range = {
                                        float max = 1
                                        float min = 0
                                    }
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Amount"
                                doc = """How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified).

"""
                                hidden = false
                            )
                        }
                    }
                }
            }
        }

        over "mesh_36331630D82FFFA7" (
            references = None
        )
        {
            def Xform "ref_78ffb2e9964f45baa41046ddb70f4fe8" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_002a/SM_Prop_Junk_Garbage_MilkCarton_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Cube_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "Material_002"
                    {
                        over "Material_002"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_002a/textures/T_Prop_Junk_Garbage_MilkCarton_002a_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_002a/textures/T_Prop_Junk_Garbage_MilkCarton_002a_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_002a/textures/T_Prop_Junk_Garbage_MilkCarton_002a_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_2634BE2B78341B4F" (
            references = None
        )
        {
            def Xform "ref_0bddc3b48b874fc2a0e768dfc98d2efe" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Package/w_package.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "w_package"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "w_package"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Package/textures/w_package_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Package/textures/w_package_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Package/textures/w_package_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Weapon_Package/textures/w_package_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_C5399AB8A1677CCE" (
            references = None
        )
        {
            def Xform "ref_b7896ce2d3ae421c8911c1b82d6efa3e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Payphone_001a/payphone001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "payphone001a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_6C99A1620E0C7F19" (
            references = None
        )
        {
            def Xform "ref_9ba8c4e2a5aa4579ad3488b567d46302" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SM_Prop_Mug.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_94EF9C63D9A89DCA" (
            references = None
        )
        {
            def Xform "ref_e7b1d16a43a14366b64c306515dea735" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SM_Prop_Mug_Damage_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_11F62C2AC65C0813" (
            references = None
        )
        {
            def Xform "ref_8046b812eff34721ab151365251deebb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SM_Prop_Mug_Damage_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_D50C9C5FCD78690C" (
            references = None
        )
        {
            def Xform "ref_c900c3b7f2b24f9194ec5cd81394315c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SM_Prop_Mug_Damage_03.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Mug_004"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_Prop_Mug_004"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SubUSDs/textures/T_M_Prop_Mug_Albedo.a.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SubUSDs/textures/T_M_Prop_Mug_Metal.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SubUSDs/textures/T_M_Prop_Mug_Normal_OTH.n.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Coffeemug001a_Set/SubUSDs/textures/T_M_Prop_Mug_Rough.r.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4A3AC865133856FC" (
            references = None
        )
        {
            def Xform "ref_8ee5dc39da0446beb17a2971ec9d221f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/SM_Prop_Trainstation_TrashcanIndoor_001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_TrashcanIndoor_Empty_NoCup"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Trainstation_TrashcanIndoor_Set"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F9FC4AC797FED4E3" (
            references = None
        )
        {
            def Xform "ref_a4103e6b23504c4e99a63db386d518c2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/SM_Prop_Trainstation_TrashcanIndoor_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_TrashcanIndoor_Full_Cup"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Trainstation_TrashcanIndoor_Set_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrashcanIndoor_Set/textures/T_Prop_Trainstation_TrashcanIndoor_Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_BB8F71B6ECA8D482" (
            references = None
        )
        {
            def Xform "ref_17d385aa318140c28c6d8199b6a05ef0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Padlock_001a/SM_Prop_Wasteland_Prison_Padlock_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_C8C1EAB0735041D8" (
            references = None
        )
        {
            def Xform "ref_6eaf94bc28ac4a06b560138d8a01d292" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackLight_01/SM_Prop_Trainstation_TrackLight_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_TrackLight_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Trainstation_TrackLight_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackLight_01/textures/T_Prop_Trainstation_TrackLight_01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 10 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackLight_01/textures/T_Prop_Trainstation_TrackLight_01_Emissive.e.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackLight_01/textures/T_Prop_Trainstation_TrackLight_01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackLight_01/textures/T_Prop_Trainstation_TrackLight_01_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackLight_01/textures/T_Prop_Trainstation_TrackLight_01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_32B5A826CF3DAF99" (
            references = None
        )
        {
            def Xform "ref_1166c65ecc3c4ece807be9759efc7859" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Tower/combinetower001.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "combinetower001_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "combinetower001"
                    {
                        over "Shader"
                        {
                            bool inputs:blend_enabled = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Material Flags"
                                displayName = "Blend Enabled"
                                doc = "Indicates if alpha state blending should be enabled."
                                hidden = false
                            )
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Tower/textures/combinetower001_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            bool inputs:ignore_material = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Material Flags"
                                displayName = "Ignore Material"
                                doc = "Runtime will not render any objects using an ignored material.  RTX Remix will render with a pink and black checkerboard."
                                hidden = false
                            )
                            bool inputs:inverted_blend = 0 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Material Flags"
                                displayName = "Inverted Blend"
                                doc = "Indicates if an inverted blend type should be used."
                                hidden = false
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Tower/textures/combinetower001_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Tower/textures/combinetower001_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Tower/textures/combinetower001_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_B75F4599C056C866" (
            references = None
        )
        {
            def Xform "ref_821fb313281b42b796279f260bed5c1a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Bedframe_Set/prison_bedframe001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "prison_bedframe001a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_D2D6F772DD1A4BF3" (
            references = None
        )
        {
            def Xform "ref_89056a18a277487e90c85954b5948eb2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Bedframe_Set/prison_bedframe001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "prison_bedframe001b"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_7EC645100A35784C" (
            references = None
        )
        {
            def Xform "ref_7ec4b3e73efe4fc98333e99927001a2b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/SM_Prop_Interiors_KitchenSink.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "sinkkitchen01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "sinkkitchen01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 1 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_metal.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "sinkkitchen01_005"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_KitchenSink/textures/sinkkitchen01_sinkkitchen01_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_98088B88559177DF" (
            references = None
        )
        {
            def Xform "ref_9c74b75c93db4f9bb02732a874f3f7c2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_TakeOutCarton/SM_Prop_Junk_Garbage_TakeOutCarton.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "garbage_takeoutcarton001a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "chinese_food_box"
                    {
                        over "Shader"
                        {
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_TakeOutCarton/textures/garbage_takeoutcarton001a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_TakeOutCarton/textures/garbage_takeoutcarton001a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_9F7992B9B2DE6B2B" (
            references = None
        )
        {
            def Xform "ref_7766f923c2674e7c8f33a79acb8fe3b2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_002a/metalpot002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "metalpot002a_low"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "metalpot002a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_002a/textures/metalpot002a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_002a/textures/metalpot002a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_002a/textures/metalpot002a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_6E8D6D6F93C3FC81" (
            references = None
        )
        {
            def Xform "ref_e8591cf24bc343089bb049173c14140c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/metalbucket02a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "metalbucket02a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "metalbucket02a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket02a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket02a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket02a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket02a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_267249F8B570831F" (
            references = None
        )
        {
            def Xform "ref_815e7f6dd82b41b688e7e690508d734b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/metalbucket01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "metalbucket01a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "metalbucket01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_MetalBucket_Set/textures/metalbucket01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_16877B6BB91022F0" (
            references = None
        )
        {
            def Xform "ref_9332fcb1c2774101af298b7fe6a61a13" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_WashingMachine/SM_Prop_C17_Furniture_WashingMachine.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "lid"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "furniturewashingmachine001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_WashingMachine/textures/WashingMachine_Base_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_WashingMachine/textures/WashingMachine_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_WashingMachine/textures/WashingMachine_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_WashingMachine/textures/WashingMachine_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_787588BFF3AF38C2" (
            references = None
        )
        {
            def Xform "ref_9f375a078a9a47c0aa7f81eac3f83fde" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Stove/SM_Prop_C17_Furniture_Stove.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "furniturestoven001a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "furniturestoven001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Stove/textures/furniturestoven001a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Stove/textures/furniturestoven001a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Stove/textures/furniturestoven001a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Stove/textures/furniturestoven001a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_97692EFB88ABB8ED" (
            references = None
        )
        {
            def Xform "ref_dbc58ff84cae4a4788c985713cdb6c1b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_KleinerChair03a/chair_kleiner03a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "chair_kleiner03a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "barberchair_002"
                    {
                        over "Shader"
                        {
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_KleinerChair03a/textures/barberchair_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_KleinerChair03a/textures/barberchair_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_D2D77B9ECD2CC2DD" (
            references = None
        )
        {
            def Xform "ref_48f55deb58b54b1aa27787c0f1bb9a46" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_TrashDumpster_01a/trashdumpster01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "trashdumpster01a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "trashdumpster01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_TrashDumpster_01a/textures/trashdumpster01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_TrashDumpster_01a/textures/trashdumpster01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_TrashDumpster_01a/textures/trashdumpster01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_TrashDumpster_01a/textures/trashdumpster01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_61091529D3185085" (
            references = None
        )
        {
            def Xform "ref_2675a836d22a47b5b34c8531bdec648b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Doll/doll01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "l_leg"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_796964101152B8B2" (
            references = None
        )
        {
            def Xform "ref_e123e3c01e6549d68a5b1e9e7ef980ed" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Desk/SM_Prop_Interiors_Furniture_Desk.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Interiors_Furniture_Desk"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "SM_Prop_Interiors_Furniture_Desk"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Desk/textures/furniture_desk01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Desk/textures/furniture_desk01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Desk/textures/furniture_desk01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Desk/textures/furniture_desk01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_811E4FEA4D141D2A" (
            references = None
        )
        {
            def Xform "ref_0e82120293cf4b16b229234d5bb60ced" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Vanity/furniture_vanity01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "vanitydesk_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "vanitydesk_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Vanity/textures/furniture_vanity01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Vanity/textures/furniture_vanity01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Vanity/textures/furniture_vanity01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Vanity/textures/furniture_vanity01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4F57C945EA496828" (
            references = None
        )
        {
            def Xform "ref_bb0c15c25d374796982393f5bf80a829" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_01a/furniture_chair01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "wood_chair_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "wood_chair_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_01a/textures/furniture_chair01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_01a/textures/furniture_chair01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_01a/textures/furniture_chair01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_01a/textures/furniture_chair01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_E5E2475F211E3018" (
            references = None
        )
        {
            def Xform "ref_b24908ff4e51465a8921ba4e8b7994ee" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Payphone_Receiver/SM_Prop_Trainstation_Payphone_Receiver.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_Payphone_Receiver"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Trainstation_Payphone_Receiver"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Payphone_Receiver/textures/T_Prop_Trainstation_Payphone_Receiver_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Payphone_Receiver/textures/T_Prop_Trainstation_Payphone_Receiver_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Payphone_Receiver/textures/T_Prop_Trainstation_Payphone_Receiver_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Payphone_Receiver/textures/T_Prop_Trainstation_Payphone_Receiver_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_FFC3C062E18C4B48" (
            references = None
        )
        {
            def Xform "ref_ace2b9ebc14b438c8063b51efbcd54d5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_01a/furnituretable001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "furnituretable001a_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "furnituretable001a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_01a/textures/furnituretable001a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_01a/textures/furnituretable001a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_01a/textures/furnituretable001a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_0002FD82AD1E9101" (
            references = None
        )
        {
            def Xform "ref_d843f8c1a146482c943a7e4a48abb7ce" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_002a/furnitureshelf002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "shelf_002a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "shelf_002a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_002a/textures/Shelf_002a_Base_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_002a/textures/Shelf_002a_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_002a/textures/Shelf_002a_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_002a/textures/Shelf_002a_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_4FE2292F7992E6AB" (
            references = None
        )
        {
            def Xform "ref_1af328e2b0084547a9f622c974b5d659" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Dresser/furniture_dresser_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "furnituredresser001a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }
            }
        }

        over "mesh_B6A8159E13C7BA2A" (
            references = None
        )
        {
            def Xform "ref_da6579a253404099825b1559bee32b6a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_003a/Furniture_Drawer_003a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "furnituredrawer003a_drawer_a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "furnituredrawer003a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_003a/textures/furnituredrawer003a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_003a/textures/furnituredrawer003a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_003a/textures/furnituredrawer003a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_003a/textures/furnituredrawer003a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_DF75A8F5E9AC51DA" (
            references = None
        )
        {
            def Xform "ref_2daebb820e8749c294eccb4fac76a1cf" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_002a/Furniture_Drawer_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "furnituredrawer002a_drawer_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "furnituredrawer002a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_002a/textures/furnituredrawer002a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_002a/textures/furnituredrawer002a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_002a/textures/furnituredrawer002a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Drawer_002a/textures/furnituredrawer002a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_63FFCA3CCD37AF23" (
            references = None
        )
        {
            def Xform "ref_80ebcc5582994bf08d6b12cb80ac2466" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Cupboard/Furniture_Cupboard.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "wood_cupboard_002"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "wood_cupboard_002"
                    {
                        over "Shader"
                        {
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Cupboard/textures/furniturecupboard001a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Cupboard/textures/furniturecupboard001a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Cupboard/textures/furniturecupboard001a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_5D5A4ACA03C5E1A9" (
            references = None
        )
        {
            def Xform "ref_c392d5b0e8a94662a4216f19a18cda4a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/playground_swingset_seat01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "playground_swingset_seat01a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "playground_swingset01a_003"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_9CDDC1EE1B08DE3C" (
            references = None
        )
        {
            def Xform "ref_6fa85c182e344e5aa69353a1fe8a48e2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/playground_swingset01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "playground_swingset01a"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "playground_swingset01a_002"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Props_C17_Playground_Swing_Set/textures/playground_swingset01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_C1380CDB2AB14642" (
            references = None
        )
        {
            def Xform "ref_1d0f0dd7b25b4da39f227db6d8e803a0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/SM_Prop_Combine_Bridge.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Combine_Bridge_D"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Combine_Bridge_A"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Combine_Bridge_C"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Combine_Bridge_B"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Combine_Bridge_D"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_D_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_D_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_D_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_D_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "Combine_Bridge_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_A_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_A_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_A_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_A_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "Combine_Bridge_C"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "Combine_Bridge_B"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_5E23D6AD4C07DD56" (
            references = None
        )
        {
            def Xform "ref_7ed9e593f917493688da968e4fa4272f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/SM_Prop_Combine_Bridge_B.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Combine_Bridge_B"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Combine_Bridge_C"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (100, 100, 100)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Combine_Bridge_B"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_B_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "Combine_Bridge_C"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Bridge_Set/textures/T_Combine_Bridge_C_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_A3B94A3CC953F105" (
            references = None
        )
        {
            def Xform "ref_e20235d0fa3140d7b27609f86a131682" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/SM_Prop_Wasteland_Control_Room_Desk_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Plane_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "controlroom_desk001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_ADBEA95DBC626C16" (
            references = None
        )
        {
            def Xform "ref_7f30d3ba101c48468c5a77ec572f871d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/SM_Prop_Wasteland_Control_Room_Desk_001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Plane_003"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "controlroom_desk001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Controlroom_Desk_Set/textures/controlroom_desk001_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_0EC5A274BBF04300" (
            references = None
        )
        {
            def Xform "ref_f8018d4ac14f49a88a37ca2dc8ed70ec" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/SM_Prop_Trainstation_TrackEnds.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_TrackEnds"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Trainstation_TrackEnds_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_AB4EB49A24F90C6C" (
            references = None
        )
        {
            def Xform "ref_cdf0f34fafdd4b5da69e958870fb02c7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/SM_Prop_Trainstation_TrackMarkers.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Trainstation_TrackMarkers"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Trainstation_TrackEnds"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackEnds_TrackMarkers/textures/T_Prop_Trainstation_TrackEnds_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_1457B3F637DAF435" (
            references = None
        )
        {
            def Xform "ref_071812cd9a564854b3664325f34830d8" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/SK_Prop_Combine_Dispenser.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "skel_1457B3F637DAF435"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "skel"
                    {
                        over Xform "root0"
                        {
                            over "combine_dispenser_case"
                            {
                                uniform token[] skel:joints = None
                                rel skel:skeleton = </RootNode/meshes/mesh_1457B3F637DAF435/skel>
                            }

                            over "combine_dispenser_support"
                            {
                                uniform token[] skel:joints = None
                                rel skel:skeleton = </RootNode/meshes/mesh_1457B3F637DAF435/skel>
                            }
                        }
                    }
                }

                over "Looks"
                {
                    over "combine_dispenser_case"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_case_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_case_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_case_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_case_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "combine_dispenser_support"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_support_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 5 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_support_selfillum.e.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_support_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_support_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_Dispenser/textures/combine_dispenser_support_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_24AA31EF79C19F28" (
            references = None
        )
        {
            def Xform "ref_8747cb94c75442ddbd15d2eb06d911f4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/SM_Prop_Lamp_On_Shortwire.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lamp_On_Shortwire"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonLamp_Set_007"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 10 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Emissive.e.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_CD7B73ECEA013E66" (
            references = None
        )
        {
            def Xform "ref_1d74975f9d884de095ee3121b2a12c97" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/SM_Prop_Lamp_Off_Shortwire.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lamp_Off_Shortwire"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonLamp_Set_003"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_6DD00120C7E5B0B7" (
            references = None
        )
        {
            def Xform "ref_f31551c9e9704f4c8405c13693769c29" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/SM_Prop_Lamp_On_Longwire.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lamp_On_Longwire"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonLamp_Set"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 10 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Emissive.e.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_84014323542511F9" (
            references = None
        )
        {
            def Xform "ref_58a77671c9fd4fde86f16781280f3240" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/SM_Prop_Lamp_Off_Longwire.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lamp_Off_Longwire"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonLamp_Set_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_8A0296D8AA1C221B" (
            references = None
        )
        {
            def Xform "ref_f82b02b500cb43afb0ed318098885aca" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/SM_Prop_Lamp_On_Nowire.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lamp_On_Nowire"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonLamp_Set_006"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            float inputs:emissive_intensity = 10 (
                                customData = {
                                    float default = 40
                                    dictionary range = {
                                        float max = 65504
                                        float min = 0
                                    }
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Intensity"
                                doc = "Intensity of the emission"
                                hidden = false
                            )
                            asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Emissive.e.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Emissive"
                                displayName = "Emissive Mask Map"
                                doc = "The texture masking the emissive color"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            bool inputs:enable_emission = 1 (
                                customData = {
                                    bool default = 0
                                }
                                displayGroup = "Emissive"
                                displayName = "Enable Emission"
                                doc = "Enables the emission of light from the material"
                                hidden = false
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_63D3D4DB39DC8355" (
            references = None
        )
        {
            def Xform "ref_cc698ee7c73d44ab8e0ef68e68b7d3fc" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/SM_Prop_Lamp_Off_Nowire.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Lamp_Off_Nowire"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wasteland_PrisonLamp_Set_002"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_PrisonLamp_Set/textures/T_Prop_Wasteland_PrisonLamp Set_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_81E711BEFE414878" (
            references = None
        )
        {
            def Xform "ref_2f117981fc284af2a6164e21bb0a6ede" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/SM_Prop_Junk_Cinderblock01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_CinderBlock_A1_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_CinderBlock_A1_01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/textures/T_Prop_CinderBlock_A1_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/textures/T_Prop_CinderBlock_A1_Normal_OTH_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Cinderblock01a/textures/T_Prop_CinderBlock_A1_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_B23AB9CD2F1396B9" (
            references = None
        )
        {
            def Xform "ref_98dc510eb3954aa8a483f6c0ef479a3c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/SM_Prop_C17_Tool_Wrench.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_Wrench_A1_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_Wrench_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_Wrench_A1_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_Wrench_A1_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_Wrench_A1_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_Wrench_A1_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_72DD04ABF3D24C65" (
            references = None
        )
        {
            def Xform "ref_7325f31dd0eb4cbe8cd965aa351de580" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/SM_Prop_C17_Tool_Pliers.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_ChannelLocks_A1_01"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_ChannelLocks_A_001"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_ChannelLocks_A1_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_ChannelLocks_A1_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_ChannelLocks_A1_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Tools_Set/textures/T_Prop_ChannelLocks_A1_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_473F7A7962B35C3F" (
            references = None
        )
        {
            def Xform "ref_6806ca9bc56f40e1aaf8c8b34628a9bd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Woodwall030b_Window_Set/woodwall030b_window01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "frame_32_low"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_C34F479BD0D59C98" (
            references = None
        )
        {
            def Xform "ref_e10066ab048948bf9d7b02c05a11093d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Woodwall030b_Window_Set/woodwall030b_window01a_bars.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "bars_32"
                {
                    float3 xformOp:rotateXYZ = (-90, 0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "Cube_009"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (1.4112682497366222, 12.928434424420288, -0.30202911569813296)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }
            }
        }

        over "mesh_3334691400A4A993" (
            references = None
        )
        {
            def Xform "ref_00aafd2d109d4ad99f17c5591260d7c1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Woodwall030b_Window_Set/woodwall030b_window03a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "frame_96"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 90)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_CA34C1A9A2AF1323" (
            references = None
        )
        {
            def Xform "ref_6a33dcf35f474fe4a1ed885f496334e8" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Woodwall030b_Window_Set/woodwall030b_window03a_bars.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "bars_96"
                {
                    float3 xformOp:rotateXYZ = (0, -270, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (29.921932703466155, 1.4098602715171182, -15.241110170590446)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_2FEEA74A676DC470" (
            references = None
        )
        {
            def Xform "ref_5b4a1ce29bf9467284d74471fcae8515" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "tracksign"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "tracksign_01"
                    {
                        over "Shader"
                        {
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksign01_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksign01_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksign01_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_807DD4C01D6006DF" (
            references = None
        )
        {
            def Xform "ref_efa9c93f71c14747939dbe22b0a84e59" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_07.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "TrackSign07_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "tracksigns01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_27E6AA90952C2FC5" (
            references = None
        )
        {
            def Xform "ref_e6ac19ce28164a74954def12c6c2d085" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_08.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "TrackSign08_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "tracksigns01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_F51D0DFA63826EB9" (
            references = None
        )
        {
            def Xform "ref_9b43349f674e433cbf9aed47ceaa2d3b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_09.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "TrackSign09_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "tracksigns01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksign01_metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_2528E5CCF48553A8" (
            references = None
        )
        {
            def Xform "ref_459385058f69424393185250641a7d85" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_10.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "TrackSign10_lod0"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "tracksigns01a"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_color.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_metal.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_normal_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_59287B03BFD0396F" (
            references = None
        )
        {
            def Xform "ref_1b5ce3f9a3d4403cb5e1307b9b49d5fe" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/SM_Prop_C17_Suitcase_Passenger.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_Suitcase"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_C17_Suitcase_003"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_BaseColor.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }

                    over "SM_Prop_C17_Suitcase_Passenger"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_BaseColor.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_Metallic.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_368E5DFC8069A1E6" (
            references = None
        )
        {
            def Xform "ref_0c0631418b5445b8824f2e522d586427" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/SM_Prop_C17_Suitcase.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_Prop_C17_Suitcase"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Prop_C17_Suitcase"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_BaseColor.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_Metallic.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Suitcase_Set/textures/Briefcased_breifcase_Roughness.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_6A4D2623B9959BFC" (
            references = None
        )
        {
            def Xform "ref_992c0d8e1e7e42418000e429e16828d8" (
                prepend references = @./assets/ch5_blackmesaeast/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01b/SM_Prop_C17_Substation_Transformer_01b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "World"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                }

                over "Looks"
                {
                    over "M_Fixture_AC_LargeVent_A"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch5_blackmesaeast/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01b/textures/T_Fixture_AC_LargeVent_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch5_blackmesaeast/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01b/textures/T_Fixture_AC_LargeVent_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch5_blackmesaeast/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01b/textures/T_Fixture_AC_LargeVent_Normal_OTH.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch5_blackmesaeast/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01b/textures/T_Fixture_AC_LargeVent_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_DD7E16D9567FB72A" (
            references = None
        )
        {
        }

        over "mesh_1150BB509B5B0517" (
            references = None
        )
        {
        }

        over "mesh_4828B93FA3EFA270" (
            references = None
        )
        {
            def Xform "ref_81519e7b821048ffa1d023f43e6fce43" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_Prop_Junk_PaintCan_001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "SM_PaintBucket_B02_01"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 50)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "M_PaintBucket_A01"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                colorSpace = "sRGB"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Diffuse"
                                displayName = "Albedo Map"
                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            int inputs:encoding = 0 (
                                customData = {
                                    int default = 0
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map Encoding"
                                doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                hidden = false
                                renderType = "normalmap_encoding"
                                sdrMetadata = {
                                    string __SDR__enum_value = "octahedral"
                                    string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                }
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Normal"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                colorSpace = "raw"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Specular"
                                displayName = "Roughness Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_A5BDEB8E727383B4" (
            references = None
        )
        {
            def Xform "ref_50c203d523f846d7a75de216eb9a6db1" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/SM_Prop_C17_MetalLadder_001.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "metalladder001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_MaintsLadder_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_MaintsLadder_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_MaintsLadder_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_C17_MetalLadder/textures/T_MaintsLadder_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA7192F17DE45929" (
            references = None
        )
        {
            def Xform "ref_24c1c709e48b44b98d304ba639c5896f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/SM_Prop_Trainstation_LightSignal_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "light_signal001b_electrical"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "traffic_light"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "light_signal001b_solid"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_29A3CC936F548C52" (
            references = None
        )
        {
            def Xform "ref_f7d0db56cc364a969b1c90822a3cd3fb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/SM_Prop_Trainstation_LightSignal_001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "light_signal001b_electrical_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "traffic_light_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "tracksigns01a_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksign01_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "traffic_light_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "light_signal001b_electrical_005"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "tracksigns01a_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/tracksigns01a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/tl_traffic_light_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D0813DFDB121D8C1" (
            references = None
        )
        {
            def Xform "ref_286eaf109cc34703945e42caa77acd21" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/SM_Prop_Trainstation_LightSignal_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "light_signal001b_electrical"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_electrical_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "light_signal001b_solid"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightSignal_Set/textures/light_signal001b_solid_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_16058E441E91EF00" (
            references = None
        )
        {
            def Xform "ref_8242cc554d10491c838c846957fc4a86" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001a_cloth"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001b_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001a_rack"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CF333A444FA3C72D" (
            references = None
        )
        {
            def Xform "ref_6b7bb1fe39fc4e44ae9dfba91b092383" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning001b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001b_cloth"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001d_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001b_rack"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E4434FF7360F7A38" (
            references = None
        )
        {
            def Xform "ref_46f0f8b8126e4aaea0d5c2c115d074b5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning001c.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001c_cloth"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001c_rack"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_03797D1D42D89C2A" (
            references = None
        )
        {
            def Xform "ref_97f497d1a1954369a1753f87ec5ae636" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning001d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001d_cloth"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001c_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001d_rack"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E3B0A189A5AF545B" (
            references = None
        )
        {
            def Xform "ref_04c7a5a5258d4c3fb6bf0565b7a94363" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001a_cloth_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001b_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001a_rack_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3A861589F49D7C76" (
            references = None
        )
        {
            def Xform "ref_9366ac5167e1430187cbfc4f41a0cb14" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning002b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001b_cloth_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001d_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001b_rack_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_11F6603A8D31C163" (
            references = None
        )
        {
            def Xform "ref_964a68e0a8de449cad4133987ceae351" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning002c.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001c_cloth_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001c_rack_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F6CC52D0F9E62771" (
            references = None
        )
        {
            def Xform "ref_105cb5596ee8490b8cf565a4a8e01625" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/awning002d.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "awning001d_cloth_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001c_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "awning001d_rack_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_normal_ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Awning_Set/textures/awning001a_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5A62D14BBF12DD23" (
            references = None
        )
        {
            def Xform "ref_a43d6b4047604374923f9f4d937bc31b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Post/SM_Prop_Trainstation_Post.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "parking_pole"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Post/textures/parking_pole_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Post/textures/parking_pole_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Post/textures/parking_pole_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8C6A0A873D87EFF1" (
            references = None
        )
        {
            def Xform "ref_49e59e33e4f74993ad2982af393287f6" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A1/SM_Door_A1_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032974546566038043, 0, -54.03208603234518)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A1/textures/T_Door_A1_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A1/textures/T_Door_A1_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A1/textures/T_Door_A1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A1/textures/T_Door_A1_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E92C4E0D5881697A" (
            references = None
        )
        {
            def Xform "ref_a72543e386c94adfa5889fb5d9c008af" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A2/SM_Door_A2_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.00329636208653028, 0.25995, -54.0141809842178)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A2/textures/T_Door_A2_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A2/textures/T_Door_A2_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A2/textures/T_Door_A2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A2/textures/T_Door_A2_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F7E9C3A41BBD2150" (
            references = None
        )
        {
            def Xform "ref_8e3d08026c5645edaf4e1aee98218cef" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A8/SM_Door_A8_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.003298953803096083, 0.006581943621768005, -54.05664905804474)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A8"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A8/textures/T_Door_A8_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A8/textures/T_Door_A8_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A8/textures/T_Door_A8_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A8/textures/T_Door_A8_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8A8FE20B7BCE00B5" (
            references = None
        )
        {
            def Xform "ref_2ba45e2f9c684196b67e2fc92c112ce0" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A3/SM_Door_A3_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032974602709145984, 0, -54.032174604212315)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A3"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A3/textures/T_Door_A3_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A3/textures/T_Door_A3_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A3/textures/T_Door_A3_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A3/textures/T_Door_A3_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1522A003441D6872" (
            references = None
        )
        {
            def Xform "ref_eff18a24976f42a2b668198ff285b71d" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/SM_Door_A4_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032828351850184845, 0, -54.04514954967303)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "SM_Door_A4_01"
                        {
                            over "SM_Door_Glass_A4_01"
                            {
                                over "SM_Door_Glass_A4_01" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_1522A003441D6872/ref_eff18a24976f42a2b668198ff285b71d/XForms/World/SM_Door_A4_01/SM_Door_Glass_A4_01/SM_Door_Glass_A4_01/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_1522A003441D6872/ref_eff18a24976f42a2b668198ff285b71d/XForms/World/SM_Door_A4_01/SM_Door_Glass_A4_01/SM_Door_Glass_A4_01/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_1522A003441D6872/ref_eff18a24976f42a2b668198ff285b71d/XForms/World/SM_Door_A4_01/SM_Door_Glass_A4_01/SM_Door_Glass_A4_01/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_1522A003441D6872/ref_eff18a24976f42a2b668198ff285b71d/XForms/World/SM_Door_A4_01/SM_Door_Glass_A4_01/SM_Door_Glass_A4_01/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_BaseColor.a.rtex.dds@ (
                                                colorSpace = "sRGB"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Diffuse"
                                                displayName = "Albedo Map"
                                                doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_Metallic.m.rtex.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Metallic Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_Roughness.r.rtex.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Roughness Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "M_Door_A4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A4/textures/T_Door_A4_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EE76763F10529D80" (
            references = None
        )
        {
            def Xform "ref_fdb565c536af4bdcb0b2d56930ec2f17" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A5/SM_Door_A5_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032944352747108496, 0.006572928399691591, -53.98260852112685)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A5"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A5/textures/T_Door_A5_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A5/textures/T_Door_A5_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A5/textures/T_Door_A5_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A5/textures/T_Door_A5_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_47B5AC32E90D8A3D" (
            references = None
        )
        {
            def Xform "ref_9747bcc9f7b149bf81bd5d6f13441c26" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A6/SM_Door_A6_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032965446607704507, 0.006577136908617831, -54.0171725645815)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A6"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A6/textures/T_Door_A6_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A6/textures/T_Door_A6_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A6/textures/T_Door_A6_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A6/textures/T_Door_A6_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EE718B63FA68860C" (
            references = None
        )
        {
            def Xform "ref_3759068826e447c99f99d5d5abaa34e1" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A7/SM_Door_A7_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.003296821567346342, 0.006577689388450381, -54.021709679667936)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A7"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A7/textures/T_Door_A7_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A7/textures/T_Door_A7_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A7/textures/T_Door_A7_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A7/textures/T_Door_A7_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DFCD2D40BFA2AB9C" (
            references = None
        )
        {
            def Xform "ref_4aa0d64447fc4ffdafdfde3dca2b1004" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A9/SM_Door_A9_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032968312561934, 0.006577708707936836, -54.021867811978126)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A9"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A9/textures/T_Door_A9_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A9/textures/T_Door_A9_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A9/textures/T_Door_A9_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A9/textures/T_Door_A9_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1A5DE5955EF3256F" (
            references = None
        )
        {
            def Xform "ref_198a7e43cc194041b4a19fe1b9731806" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A10/SM_Door_A10_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.003296943624263804, 0.006577933108474099, -54.02371123717663)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A10"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A10/textures/T_Door_A10_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A10/textures/T_Door_A10_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A10/textures/T_Door_A10_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A10/textures/T_Door_A10_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_716DE7547300783D" (
            references = None
        )
        {
            def Xform "ref_22a39955f50b4b24a40af57ab633ab35" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A11/SM_Door_A11_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.003298686331618228, 0.006581410030776169, -54.052266330386374)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A11"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A11/textures/T_Door_A11_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A11/textures/T_Door_A11_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A11/textures/T_Door_A11_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A11/textures/T_Door_A11_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3887475D0E9F486B" (
            references = None
        )
        {
            def Xform "ref_c29ac3cc5fc840a5a07b73e2e561385a" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A13/SM_Door_A13_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032843213243722857, 0.23269767123792917, -54.04232519586827)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A13"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A13/textures/T_Door_A13_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A13/textures/T_Door_A13_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A13/textures/T_Door_A13_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A13/textures/T_Door_A13_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0A750F7FD896D837" (
            references = None
        )
        {
            def Xform "ref_2d8ff244a8704f4abcacaf41d20078aa" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A14/SM_Door_A14_01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.5, 0.5, 0.5)
                    double3 xformOp:translate = (0.0032890613451854733, 0.16295209343570605, -54.05045567583116)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Door_A14"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A14/textures/T_Door_A14_BaseColor.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A14/textures/T_Door_A14_Metallic.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A14/textures/T_Door_A14_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/Door_A14/textures/T_Door_A14_Roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_578371156594B9C5" (
            references = None
        )
        {
            def Xform "ref_a963c37feb0c431f96da02acc46648b9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_001a/SM_Prop_Junk_Garbage_MilkCarton_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:translate:pivot = (0, 0, 0)

                    over "World"
                    {
                        over "Cap_001"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 45)
                            float3 xformOp:scale = (100.00001, 100.00001, 100)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Brim_001"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 45)
                            float3 xformOp:scale = (100.00001, 100.00001, 100)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Jug_002"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 45)
                            float3 xformOp:scale = (100.00001, 100.00001, 100)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "T_Prop_Junk_Garbage_MilkCarton_001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_001a/textures/T_Prop_Junk_Garbage_MilkCarton_001a_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_001a/textures/T_Prop_Junk_Garbage_MilkCarton_001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MilkCarton_001a/textures/T_Prop_Junk_Garbage_MilkCarton_001a_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4A2AC091644BBD93" (
            references = None
        )
        {
            def Xform "ref_f79ee7ce298145eabf10c050d7f0b25c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/SM_Prop_Junk_Garbage_PlasticBottle_002a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PlasticBottle"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/textures/T_Prop_Junk_Garbage_PlasticBottle_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/textures/T_Prop_Junk_Garbage_PlasticBottle_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/textures/T_Prop_Junk_Garbage_PlasticBottle_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D49E61A3224C954E" (
            references = None
        )
        {
            def Xform "ref_217d1bea6be849469233d2db279be499" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/SM_Prop_Junk_Garbage_PlasticBottle_001a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "PlasticBottle"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/textures/T_Prop_Junk_Garbage_PlasticBottle_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/textures/T_Prop_Junk_Garbage_PlasticBottle_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_Set/textures/T_Prop_Junk_Garbage_PlasticBottle_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0365385764C0D3A6" (
            references = None
        )
        {
            def Xform "ref_851c0625951c4f2884be6eeb5f77cc40" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/SM_Prop_C17_Playground_TickTackToe_Block.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "playgroundtick_tack_toe_post01_005"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/textures/playground_tictactoe_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/textures/playground_tictactoe_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/textures/playground_tictactoe_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CED4D8360A7ACA5C" (
            references = None
        )
        {
            def Xform "ref_3d07ea8bb14d41f2aa79342747deff1d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/SM_Prop_C17_Playground_TickTackToe_Posts.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "playgroundtick_tack_toe_post01_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/textures/playground_tictactoe_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/textures/playground_tictactoe_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_TickTackToe_Set/textures/playground_tictactoe_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_858F465B8E60D064" (
            references = None
        )
        {
            def Xform "ref_b00b8fa9151143b69e98c4392507c8d7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/SM_Prop_Combine_Light_01a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "combine_light001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 2
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3BDED3E20472065E" (
            references = None
        )
        {
            def Xform "ref_94117fcc6059436eba4206280d682ec3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/SM_Prop_Combine_Light_01b.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "combine_light001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 2 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light001a_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E9B4CAA57E4F6518" (
            references = None
        )
        {
            def Xform "ref_085371e2c2d14e279fc61dc871dc8fa3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/SM_Prop_Combine_Light_02a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "combine_light002a_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light002a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 2 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light002a_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light002a_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light002a_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Light_Set/textures/combine_light002a_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_834DD015D637B5B8" (
            references = None
        )
        {
        }

        over "mesh_F928BAEEF03FCD37" (
            references = None
        )
        {
        }

        over "mesh_8151316D1079024D" (
            references = None
        )
        {
            def Xform "ref_6f3462e8bae849cea4a8a30f5dca9bca" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/combine_interface_02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (-17.505096798272007, 0.000004661969796870835, 1.9895196601282805e-13)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "vr_combine_interface_02_03_screen"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.5 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "vr_combine_interface_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "vr_combine_interface_02_panel"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_panel_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.5 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_panel_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_panel_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_panel_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_interface_buttons"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.5 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/console_buttons_2k_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "vr_combine_interface_02"
                        {
                            over "vr_combine_interface_02"
                            {
                                uniform bool doubleSided = 1
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F203328DD23840EC" (
            references = None
        )
        {
            def Xform "ref_ba8bd97f855746df9cb86062dcf35e6a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/combine_interface_03.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.00975134, 0.010605966, 0.01)
                    double3 xformOp:translate = (-0.7424006650808224, 1.9771687220782042e-7, -0.012768243854196726)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "vr_combine_interface_02_03_screen"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.5 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_02_03_screen_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "vr_combine_interface_03"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "vr_combine_interface_03_panel"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_panel_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_panel_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_panel_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/vr_combine_interface_03_panel_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_interface_buttons"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.5 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/console_buttons_2k_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = true
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "vr_combine_interface_02_screen"
                        {
                            over "vr_combine_interface_02_screen_001"
                            {
                                uniform bool doubleSided = 1
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E1943268CB829F51" (
            references = None
        )
        {
            def Xform "ref_d44e0710e7f3412a9fa4e4b6ffc51a47" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/SM_Prop_Trainstation_Column_Arch.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "trainstation_arch001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_arch001_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_arch001_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_arch001_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_arch001_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_36F7B292CCA0686B" (
            references = None
        )
        {
            def Xform "ref_3ca93ea1e4ad45929fddfd29b3549cf0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/SM_Prop_Trainstation_Column_Column.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "trainstation_column001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_column001a_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_column001a_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_column001a_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Column_Set/textures/trainstation_column001a_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1676D2C39D013FEC" (
            references = None
        )
        {
            def Xform "ref_be01918a77cd48deab3ff2ced2ea84fd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/SM_Prop_Combine_Lock.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "combine_lock01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_orange_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_093D8B00048A0982" (
            references = None
        )
        {
            def Xform "ref_eb4c4988e0ce449fb88a86b14c6483e7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/SM_Prop_Combine_Lock_Red.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "combine_lock01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_red_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7A7E68690C7F8EDD" (
            references = None
        )
        {
            def Xform "ref_bf3a6391e8644449995f8950f7a54f45" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/SM_Prop_Combine_Lock_Green.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "combine_lock01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_color.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_green_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = "Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel."
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C82E977767C9714F" (
            references = None
        )
        {
            def Xform "ref_0ac845cb68ee43b5a9b29f77926ab394" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PushCart_A/SM_Prop_Junk_PushCart_A.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "wireframe"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PushCart_A/textures/T_wireframe_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PushCart_A/textures/T_wireframe_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PushCart_A/textures/T_wireframe_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PushCart_A/textures/T_wireframe_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ACC29203D332D568" (
            references = None
        )
        {
            def Xform "ref_a4d5e76864f34999ad6ad1c74b68baaa" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_PaintBucket_Black.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_PaintBucket_A01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F58DD9FBBCA38056" (
            references = None
        )
        {
            def Xform "ref_bd89c9b5ac734cf1a1510b0a4ee47ede" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_PaintBucket_Black_Damaged.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_PaintBucket_A01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_353DED76C36C44C4" (
            references = None
        )
        {
            def Xform "ref_0ee3ae32701e4083bfe526037347a990" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_PaintBucket_Green.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_PaintBucket_A01_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E6C1FEA904CEAA17" (
            references = None
        )
        {
            def Xform "ref_3624372bfe7d42209ab0470e2ef5b999" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_PaintBucket_Blue.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_PaintBucket_A01_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6C72A68EACFD11FA" (
            references = None
        )
        {
            def Xform "ref_99c779f44fad4ba694a946e1ccfaa3f3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_PaintBucket_Green_Damaged.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_PaintBucket_A01_005"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BF8EB5516B5FFF29" (
            references = None
        )
        {
            def Xform "ref_a49f3f56cc3d45f69c59daafca6d4b2f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/SM_PaintBucket_Blue_Damaged.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_PaintBucket_A01_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Albedo.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Normal_dx.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_PaintCan_Set/textures/T_PaintBucket_A01_Rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E5E98AD3B63B074E" (
            references = None
        )
        {
            def Xform "ref_1854c2bdc8d44682882fea74ad74d326" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/SM_Prop_Junk_Garbage_GlassBottle_003a.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_003a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_014"
                            {
                                over "M_Prop_Junk_Garbage_GlassBottle_003a_Label" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_E5E98AD3B63B074E/ref_1854c2bdc8d44682882fea74ad74d326/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a/Cylinder_014/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_E5E98AD3B63B074E/ref_1854c2bdc8d44682882fea74ad74d326/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a/Cylinder_014/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_E5E98AD3B63B074E/ref_1854c2bdc8d44682882fea74ad74d326/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a/Cylinder_014/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_E5E98AD3B63B074E/ref_1854c2bdc8d44682882fea74ad74d326/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a/Cylinder_014/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                            float inputs:alpha_test_reference_value = 0.1 (
                                                customData = {
                                                    float default = 0
                                                }
                                                displayGroup = "Alpha Blending"
                                                displayName = "Alpha Test Reference Value"
                                                doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                                hidden = false
                                            )
                                            int inputs:alpha_test_type = 4 (
                                                customData = {
                                                    int default = 0
                                                }
                                                displayGroup = "Alpha Blending"
                                                displayName = "Alpha Test Type"
                                                doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                                hidden = false
                                                renderType = "AlphaTestType"
                                                sdrMetadata = {
                                                    string __SDR__enum_value = "Always"
                                                    string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                                }
                                            )
                                            bool inputs:blend_enabled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Alpha Blending"
                                                displayName = "Blend Enabled"
                                                doc = """Indicates if alpha state blending should be enabled.

"""
                                                hidden = false
                                            )
                                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Albedo.dds@ (
                                                colorSpace = "sRGB"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Albedo/Opacity Map"
                                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:ignore_material = 0 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Remix Flags"
                                                displayName = "Ignore Material"
                                                doc = """Runtime will not render any objects using an ignored material.  RTX Remix will render with a pink and black checkerboard.

"""
                                                hidden = false
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Normal.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Roughness.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Base Material"
                                                displayName = "Roughness Map"
                                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_legacy_alpha_state = 0 (
                                                customData = {
                                                    bool default = 1
                                                }
                                                displayGroup = "Alpha Blending"
                                                displayName = "Use Legacy Alpha State"
                                                doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "M_Prop_Junk_Garbage_GlassBottle_003a_Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.5 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:thin_wall_thickness = 1 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                            dictionary soft_range = {
                                                float max = 1
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled material thickness"
                                        doc = "Simulated thickness for thin-walled materials (0 disables thin-walled mode)"
                                        hidden = false
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.19305003, 1, 0) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = "Expected transmittance after the specified transmittance distance through the volume."
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Roughness.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D12E827ACA9DBFF3" (
            references = None
        )
        {
            def Xform "ref_4479f8ebd9c94c27a42d68207088761c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk01"
                        {
                            over "Cylinder_005"
                            {
                                over "M_Prop_Junk_Garbage_GlassBottle_003a_Label" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_D12E827ACA9DBFF3/ref_4479f8ebd9c94c27a42d68207088761c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk01/Cylinder_005/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_D12E827ACA9DBFF3/ref_4479f8ebd9c94c27a42d68207088761c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk01/Cylinder_005/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_D12E827ACA9DBFF3/ref_4479f8ebd9c94c27a42d68207088761c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk01/Cylinder_005/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_D12E827ACA9DBFF3/ref_4479f8ebd9c94c27a42d68207088761c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk01/Cylinder_005/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                            float inputs:alpha_test_reference_value = 0.1 (
                                                customData = {
                                                    float default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Alpha Test Reference Value"
                                                doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                                hidden = false
                                            )
                                            int inputs:alpha_test_type = 4 (
                                                customData = {
                                                    int default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Alpha Test Type"
                                                doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                                hidden = false
                                                renderType = "AlphaTestType"
                                                sdrMetadata = {
                                                    string __SDR__enum_value = "Always"
                                                    string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                                }
                                            )
                                            bool inputs:blend_enabled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Blend Enabled"
                                                doc = """Indicates if alpha state blending should be enabled.

"""
                                                hidden = false
                                            )
                                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Albedo.dds@ (
                                                colorSpace = "sRGB"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Diffuse"
                                                displayName = "Albedo Map"
                                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Normal.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Roughness.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Roughness Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_legacy_alpha_state = 0 (
                                                customData = {
                                                    bool default = 1
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Use Legacy Alpha State"
                                                doc = """Indicates if the alpha state should be derived from legacy information (the drawcall), or specified in the MDL.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "M_Prop_Junk_Garbage_GlassBottle_003a_Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.5 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = """Index of Refraction of the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @@
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.19215687, 1, 0) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Roughness.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance or Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DD2962B4218D9222" (
            references = None
        )
        {
            def Xform "ref_e9dba1078d474bcf8eb149f3f1f03c99" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk02.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk02"
                        {
                            over "Cylinder_007"
                            {
                                over "M_Prop_Junk_Garbage_GlassBottle_003a_Label" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_DD2962B4218D9222/ref_e9dba1078d474bcf8eb149f3f1f03c99/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk02/Cylinder_007/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_DD2962B4218D9222/ref_e9dba1078d474bcf8eb149f3f1f03c99/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk02/Cylinder_007/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_DD2962B4218D9222/ref_e9dba1078d474bcf8eb149f3f1f03c99/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk02/Cylinder_007/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_DD2962B4218D9222/ref_e9dba1078d474bcf8eb149f3f1f03c99/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk02/Cylinder_007/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                            float inputs:alpha_test_reference_value = 0.1 (
                                                customData = {
                                                    float default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Alpha Test Reference Value"
                                                doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                                hidden = false
                                            )
                                            int inputs:alpha_test_type = 4 (
                                                customData = {
                                                    int default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Alpha Test Type"
                                                doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                                hidden = false
                                                renderType = "AlphaTestType"
                                                sdrMetadata = {
                                                    string __SDR__enum_value = "Always"
                                                    string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                                }
                                            )
                                            bool inputs:blend_enabled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Blend Enabled"
                                                doc = """Indicates if alpha state blending should be enabled.

"""
                                                hidden = false
                                            )
                                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Albedo.dds@ (
                                                colorSpace = "sRGB"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Diffuse"
                                                displayName = "Albedo Map"
                                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Normal.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Roughness.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Roughness Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_legacy_alpha_state = 0 (
                                                customData = {
                                                    bool default = 1
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Use Legacy Alpha State"
                                                doc = """Indicates if the alpha state should be derived from legacy information (the drawcall), or specified in the MDL.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "M_Prop_Junk_Garbage_GlassBottle_003a_Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.5 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = """Index of Refraction of the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.19215687, 1, 0) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Roughness.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance or Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3E601F5DF70A03CD" (
            references = None
        )
        {
            def Xform "ref_9c17d7efb8d7448e8b9122fc663ecc9c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk03.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk03"
                        {
                            over "Cylinder_016"
                            {
                                over "M_Prop_Junk_Garbage_GlassBottle_003a_Label" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_3E601F5DF70A03CD/ref_9c17d7efb8d7448e8b9122fc663ecc9c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk03/Cylinder_016/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_3E601F5DF70A03CD/ref_9c17d7efb8d7448e8b9122fc663ecc9c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk03/Cylinder_016/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_3E601F5DF70A03CD/ref_9c17d7efb8d7448e8b9122fc663ecc9c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk03/Cylinder_016/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_3E601F5DF70A03CD/ref_9c17d7efb8d7448e8b9122fc663ecc9c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_003a_Chunk03/Cylinder_016/M_Prop_Junk_Garbage_GlassBottle_003a_Label/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                            float inputs:alpha_test_reference_value = 0.1 (
                                                customData = {
                                                    float default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Alpha Test Reference Value"
                                                doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                                hidden = false
                                            )
                                            int inputs:alpha_test_type = 4 (
                                                customData = {
                                                    int default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Alpha Test Type"
                                                doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                                hidden = false
                                                renderType = "AlphaTestType"
                                                sdrMetadata = {
                                                    string __SDR__enum_value = "Always"
                                                    string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                                }
                                            )
                                            bool inputs:blend_enabled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Blend Enabled"
                                                doc = """Indicates if alpha state blending should be enabled.

"""
                                                hidden = false
                                            )
                                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Albedo.dds@ (
                                                colorSpace = "sRGB"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Diffuse"
                                                displayName = "Albedo Map"
                                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Normal.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Label_Roughness.dds@ (
                                                colorSpace = "raw"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Roughness Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_legacy_alpha_state = 0 (
                                                customData = {
                                                    bool default = 1
                                                }
                                                displayGroup = "Material Flags"
                                                displayName = "Use Legacy Alpha State"
                                                doc = """Indicates if the alpha state should be derived from legacy information (the drawcall), or specified in the MDL.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "M_Prop_Junk_Garbage_GlassBottle_003a_Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.5 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = """Index of Refraction of the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.19215687, 1, 0) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Roughness.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance or Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C37FD2D9E26B5541" (
            references = None
        )
        {
            def Xform "ref_8444a1d771a34ac488143e9a534a342e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/SM_Prop_Trainstation_Train001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "passenger_train_loco_left_side"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_leftwall.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_leftwall_c48cadae_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_leftwall_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_leftwall_rough_a59aa81c_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "passenger_train_loco_right_side"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_rightwall.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_rightwall_588766f5_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_rightwall_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_rightwall_rough_ef37b7a0_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "passenger_train_loco_bogie"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_bogies.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_bogies_3d1b656f_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_bogies_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_bogies_c7312bf5_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "passenger_train_loco_cab"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_cab.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_cab_911972ea_metal.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_cab_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train001/textures/pass_train_loco_cab_rough_8bb750ff_rough.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "passenger_train_loco_left_side_glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = """Index of Refraction of the material

"""
                                        hidden = false
                                    )
                                }
                            }

                            over "passenger_train_loco_right_side_glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = """Index of Refraction of the material

"""
                                        hidden = false
                                    )
                                }
                            }

                            over "passenger_train_loco_cab_glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = """Index of Refraction of the material

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_024503B39357D122" (
            references = None
        )
        {
        }

        over "mesh_2CA0A61135B5A816" (
            references = None
        )
        {
            def Xform "ref_7c2efac65400445da1327c892202164b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/razor_car_closed.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (0.394, 0.394, 0.394)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Razor_Car_Closed"
                        {
                            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (0, -294, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "razor_car"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_977BBF1D7C86EBF4" (
            references = None
        )
        {
            def Xform "ref_8a389b6339db475a9ea518258dd5c024" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/razor_car_open.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 90)
                    float3 xformOp:scale = (0.394, 0.394, 0.394)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Razor_Car_Open"
                        {
                            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (0, -294, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "razor_car"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_emissive.e.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emissive"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcar_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "razor_car_interior"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcarint_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcarint_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcarint_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorcarint_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F6212D6C01B81932" (
            references = None
        )
        {
            def Xform "ref_4f84af47e53244c5a24ed730f1ad30a3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/razor_locomotive.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (-3.678937606413456, -9.094947017729282e-13, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "razorloc_fronttop"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_fronttop_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_fronttop_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_fronttop_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_fronttop_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "razorloc_back"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_back_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_back_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_back_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_back_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "lcomotive_glass"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/lcomotive_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.7294118, 0.5764706, 0.28627452) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance or Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }

                            over "razorloc_right"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_right_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_right_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_right_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_right_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "razorloc_under"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_under_diffuse.a.rtex.dds@ (
                                        colorSpace = "sRGB"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    int inputs:encoding = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map Encoding"
                                        doc = """Encoding type for the normal map.  Octahedral for 2 channel textures. tangent_space_dx for 3 channel normals, and tangent_space_ogl for 3 channel normals with an inverted (OpenGL style) G channel.

"""
                                        hidden = false
                                        renderType = "normalmap_encoding"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "octahedral"
                                            string options = "octahedral:0|tangent_space_ogl:1|tangent_space_dx:2"
                                        }
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_under_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_under_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_under_roughness.r.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "razorloc_left"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_RazorTrain_Set/textures/razorloc_left_metalness.m.rtex.dds@ (
                                        colorSpace = "raw"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A35D1E32AD98EE87" (
            references = None
        )
        {
            def Xform "ref_1d06548374794c5dba0b0358deb81c46" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Domelight/SM_Prop_DomeLight_off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_9684129BBBB3110D" (
            references = None
        )
        {
            def Xform "ref_02506d63631548399a3f6cbe32ac90b0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Domelight/SM_Prop_DomeLight_on.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "mesh_C45E9847E204D2FF" (
            references = None
        )
        {
            def Xform "ref_09f54c6a199943aabd1bf039065900c0" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/APC_Destroyed.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Under_3"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Under_3_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Under_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Under_2_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Under_1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Under_1_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Details_3"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Details_3_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Details_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Details_2_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Details_1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Details_1_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Plates_3"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Plates_3_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Plates_4"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Plates_4_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Rims_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_diffuse.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Interior"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Interior_diffuse.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Interior_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Interior_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Interior_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    color3f inputs:transmittance_color = (0.7065637, 0.60587883, 0.37647027) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                }
                            }

                            over "Rims"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FB1103D43D52B6B5" (
            references = None
        )
        {
            def Xform "ref_0717bff362894c9d9a6e41b2cb3402b9" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/gib1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (-53.74861534103901, 68.43341355437207, 26.999999999999996)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Gib_1"
                        {
                            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Rims_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_diffuse.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_2_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Rims"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Rims_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5DFE427718848AE6" (
            references = None
        )
        {
            def Xform "ref_96a959c387774e2bb71a2d5aa1ae171c" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/gib2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0.999999999999976, 2.842170943040401e-14, -1.0658141036401503e-14)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Gib_2"
                        {
                            float3 xformOp:rotateXYZ = (-90.00001, -0, 0)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Plates_1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Plates_1_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_16CF9413CF469F91" (
            references = None
        )
        {
            def Xform "ref_04b65f24d56a4fb8a6e93929d9383631" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/gib3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Plates_1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Plates_1_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E37AB8DB349E7FC3" (
            references = None
        )
        {
            def Xform "ref_f71f1fafdc6642518820abd3c75f7113" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/gib4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Plates_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Plates_2_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C81CC0985C89BDDE" (
            references = None
        )
        {
            def Xform "ref_7dac3d0ffcde4d99a6938b549dca9100" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/gib5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 180)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Plates_2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Combine_APC_Destroyed_Set/textures/Plates_2_metalness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DD19D958BA21739C" (
            references = None
        )
        {
        }

        over "mesh_B54EEB116486769F" (
            references = None
        )
        {
            def Xform "ref_67fb9518ea79424885b6f7d34dd4b607" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Trainstation_Tracksign_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_902B2A149F406F7E" (
            references = None
        )
        {
            def Xform "ref_c9e7dc7fd9a3412fabba515105782eff" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/SM_Prop_Trainstation_TrackSign_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Trainstation_Tracksign_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_TrackSign_Set/textures/SM_Prop_Trainstation_Tracksign_M_Prop_Trainstation_Tracksign_02_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BC0D37DB5D51301C" (
            references = None
        )
        {
            def Xform "ref_861acc596c9b4115bdbdc1c38ef335e9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/SM_Prop_C17_Chair_Office01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_017__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_907B9296609255A3" (
            references = None
        )
        {
            def Xform "ref_68be4fd5358b4d4ea0366b711e6d2e4e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/SM_Prop_C17_Chair_Office01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_017__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Diffuse"
                                        displayName = "Albedo Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01b_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Chair_Office01a/textures/T_Prop_C17_Chair_Office01b_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Roughness Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D3B394757A5DBC6" (
            references = None
        )
        {
            def Xform "ref_703e573daf184439956cdca6f0824aee" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_03a/SM_Prop_Interiors_Furniture_Chair_03a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {

                        over "Looks"
                        {
                            over "Metal"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_03a/textures/T_Interiors_Furniture_Chair_03a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_03a/textures/T_Interiors_Furniture_Chair_03a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Furniture_Chair_03a/textures/T_Interiors_Furniture_Chair_03a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E4DFDB2667D4FB1E" (
            references = None
        )
        {
            def Xform "ref_4970582e17ce438b9cbc64ae6ec76bf8" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/SM_Prop_Trainstation_ColumnLight_A.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "LAMP1_ON"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Lamp1_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "LAMP2_ON"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_098FF0BD68E58FC6" (
            references = None
        )
        {
            def Xform "ref_98881fd64e274f7ea56ed0a016102e43" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/SM_Prop_Trainstation_ColumnLight_B.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "LAMPb_on"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_000F2426026095CC" (
            references = None
        )
        {
            def Xform "ref_62fde62b910147508560971b08a36620" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/SM_Prop_Trainstation_ColumnLight_A_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "LAMP1_ON"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Lamp1_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "LAMP2_ON"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp2_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ED5F0FBD0D51E114" (
            references = None
        )
        {
            def Xform "ref_697db672c66841758470bdf982f35e56" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/SM_Prop_Trainstation_ColumnLight_B_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "LAMPb_on"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_ColumnLight_Set/textures/T_Lamp1_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0B9341AD956F06E4" (
            references = None
        )
        {
            def Xform "ref_d19055e41c71470eb8cf3ae99746ecec" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/SM_Prop_Pipes_ValveWheel_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface3"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Base_color_1001.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Metallic_1001.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Normal_DirectX_1001_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Roughness_1001.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9CFDAC07000CF89A" (
            references = None
        )
        {
            def Xform "ref_4e51c2d430c2404784d7c190a2581d96" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/SM_Prop_Pipes_ValveWheel_002.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "standardSurface2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Base_color_1001.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Metallic_1001.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Normal_DirectX_1001_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Roughness_1001.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DF907DEFE5A697A3" (
            references = None
        )
        {
            def Xform "ref_c9c5ccb90d18496591294e798c1ad254" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/SM_Prop_Pipes_ValveWheel_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "polySurface1295_Original"
                        {
                            double3 xformOp:translate = (-4.0566265799952106e-9, 5.524987743152439e-15, 0)
                        }

                        over "Looks"
                        {
                            over "standardSurface1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Base_color_1001.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Metallic_1001.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Normal_DirectX_1001_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_ValveWheel/textures/standardSurface1_Roughness_1001.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2FD8ED583ACD6C2C" (
            references = None
        )
        {
            def Xform "ref_dfd5b4bfff9247d1a60b0833018722e2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_CashRegister/SM_Prop_C17_CashRegister.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "cashregister"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_CashRegister/textures/SM_Prop_C17_CashRegister_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_CashRegister/textures/SM_Prop_C17_CashRegister_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_CashRegister/textures/SM_Prop_C17_CashRegister_Normal_Ogl_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_CashRegister/textures/SM_Prop_C17_CashRegister_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_476C5FB16184FF63" (
            references = None
        )
        {
            def Xform "ref_213a40ced11d4966942c0c60080deee5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Indoor/SM_Prop_Trainstation_Bench_Indoor.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "_materials"
                    {
                        over "trainstation_bench001"
                        {
                            over "Shader"
                            {
                                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Indoor/textures/trainstation_bench001_Albedo.a.rtex.dds@ (
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Albedo/Opacity Map"
                                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Indoor/textures/trainstation_bench001_Metallic.m.rtex.dds@ (
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Metallic Map"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Indoor/textures/trainstation_bench001_OTH_Normal.n.rtex.dds@ (
                                    colorSpace = "auto"
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Normal Map"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Bench_Indoor/textures/trainstation_bench001_Roughness.r.rtex.dds@ (
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Roughness Map"
                                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_94D39E3180630C0E" (
            references = None
        )
        {
            def Xform "ref_0e95e7ae2f7a4e00ad657e2ffbe9e912" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/SM_Prop_Building_Template_Window_Bars_001c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "small_bars_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A599A82699E1536A" (
            references = None
        )
        {
            def Xform "ref_81c1e2ac191f4e7f8e1ace38f806cd60" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/SM_Prop_Building_Template_Window_Bars_001c_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "small_bars_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_Albedo_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_001c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_714405B1B722BB56" (
            references = None
        )
        {
            def Xform "ref_53a8049c861b4ab391bbcdf82ec29a31" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/SM_Prop_Building_Template_Window_Bars_002c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "bars_large_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4FEFF3C66A1857D7" (
            references = None
        )
        {
            def Xform "ref_10fed02701a94cab8bbfb9fdda0f2b55" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/SM_Prop_Building_Template_Window_Bars_002c_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "bars_large_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_Albedo_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Bars_Set/textures/T_Prop_Building_Template_Window_Bars_002c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B0330777ECD05581" (
            references = None
        )
        {
            def Xform "ref_80cf328b2cab4bd08bb6fe2728889133" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/SK_Prop_Vehicle_Car_004a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Vehicle_Car_004a_Body"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Body_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_Vehicle_Car_004a_Interior"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Interior_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_Vehicle_Car_004a_Chassis"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Chassis_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_30FD390324CE4F28" (
            references = None
        )
        {
            def Xform "ref_110f493a1a034d86bb4bc228d4aa1438" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004b/SK_Prop_Vehicle_Car_004b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Vehicle_Car_004a_Body"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Body_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Body_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Body_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Body_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_Vehicle_Car_004a_Lights"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Lights_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Lights_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004a/textures/T_Prop_Vehicle_Car_004a_Lights_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_Vehicle_Car_004b_Interior"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004b/textures/T_Prop_Vehicle_Car_004b_Interior_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_Vehicle_Car_004b_Chassis"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004b/textures/T_Prop_Vehicle_Car_004b_Chassis_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_Vehicle_Car_004b_Body"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_Vehicle_Car_004b/textures/T_Prop_Vehicle_Car_004b_Body_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B84CF4BACE5A4FC3" (
            references = None
        )
        {
            def Xform "ref_e247158ad9bc4f7280374e66f75c12ed" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/SM_Prop_Trainstation_Ornament_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Cone"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (7.1592274, 7.2425423, 7.466206)
                    double3 xformOp:translate = (7.450580596923828e-7, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Grid2"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_Albedo.a.rtex.dds@ (
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_Metallic.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_Roughness.r.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_FA0E919CB6465256" (
            references = None
        )
        {
            def Xform "ref_11a5f6024fd544b4b29c1509fc9006a9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/SM_Prop_Trainstation_Ornament_002.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "Cone_001"
                {
                    float3 xformOp:rotateXYZ = (0, -0, 0)
                    float3 xformOp:scale = (7.15923, 7.24254, 7.330639)
                    double3 xformOp:translate = (0, 4.6566128730773926e-8, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }

                over "Looks"
                {
                    over "Grid"
                    {
                        over "Shader"
                        {
                            asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_Albedo.a.rtex.dds@ (
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Albedo/Opacity Map"
                                doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_Metallic.m.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Metallic Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_OTH_Normal.n.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Normal Map"
                                hidden = false
                                renderType = "texture_2d"
                            )
                            asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Ornament_Set/textures/T_Prop_Trainstation_Ornament Set_Roughness.r.rtex.dds@ (
                                colorSpace = "auto"
                                customData = {
                                    asset default = @@
                                }
                                displayGroup = "Base Material"
                                displayName = "Roughness Map"
                                doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                hidden = false
                                renderType = "texture_2d"
                            )
                        }
                    }
                }
            }
        }

        over "mesh_D53C51F5A0A4C817" (
            references = None
        )
        {
            def Xform "ref_3ab358df07a941e4b0992102484f4a95" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Seats/SM_Props_TrainCar_Seats.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_Props_TrainCar_Seats"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Seats/textures/T_Props_TrainCar_Seats_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Seats/textures/T_Props_TrainCar_Seats_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Seats/textures/T_Props_TrainCar_Seats_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Seats/textures/T_Props_TrainCar_Seats_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_37AFF3C2C46F8810" (
            references = None
        )
        {
            def Xform "ref_f0671793f25047b092dee348ea309d73" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Rack/SM_Props_TrainCar_Rack.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    float3 xformOp:translate:pivot = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:translate:pivot", "xformOp:rotateXYZ", "xformOp:scale", "!invert!xformOp:translate:pivot"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "T_Props_TrainCar_Rack"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Rack/textures/T_Props_TrainCar_Rack_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Rack/textures/T_Props_TrainCar_Rack_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Rack/textures/T_Props_TrainCar_Rack_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Props_TrainCar_Rack/textures/T_Props_TrainCar_Rack_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BCE2DCD0110DA710" (
            references = None
        )
        {
            def Xform "ref_a476bcd5a9114c3190ce5199ae39cb5e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/SM_Prop_Combine_Generator_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Combine_Generator_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_generator_main"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_generator_innards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_innards_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_innards_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_innards_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_innards_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_innards_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "cable_set_substation"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_cables_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_cables_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_cables_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Generator_01/textures/combine_generator_cables_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_869E947272436FC7" (
            references = None
        )
        {
            def Xform "ref_d6557b00a83140f890c5f6e373e1a39b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/SM_Prop_Pipes_GutterLarge_512.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "_materials"
                    {
                        over "SM_Prop_Pipes_GutterLarge_512"
                        {
                            over "Shader"
                            {
                                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_512_Albedo.a.rtex.dds@ (
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Albedo/Opacity Map"
                                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_512_Metallic.m.rtex.dds@ (
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Metallic Map"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_512_OTH_Normal.n.rtex.dds@ (
                                    colorSpace = "auto"
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Normal Map"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_512_Roughness.r.rtex.dds@ (
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Roughness Map"
                                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_925A5E0218C8AD16" (
            references = None
        )
        {
            def Xform "ref_4bd4673611514b06af8b9b9cf9334e3d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/SM_Prop_Pipes_GutterLarge_640.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "_materials"
                    {
                        over "SM_Prop_Pipes_GutterLarge_640"
                        {
                            over "Shader"
                            {
                                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_640_Albedo.a.rtex.dds@ (
                                    colorSpace = "auto"
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Albedo/Opacity Map"
                                    doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_640_Metallic.m.rtex.dds@ (
                                    colorSpace = "auto"
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Metallic Map"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_640_OTH_Normal.n.rtex.dds@ (
                                    colorSpace = "auto"
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Normal Map"
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Pipes_GutterLarge_Set/textures/SM_Prop_Pipes_GutterLarge_640_Roughness.r.rtex.dds@ (
                                    colorSpace = "auto"
                                    customData = {
                                        asset default = @@
                                    }
                                    displayGroup = "Base Material"
                                    displayName = "Roughness Map"
                                    doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                    hidden = false
                                    renderType = "texture_2d"
                                )
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D38B5D2A6F7773B2" (
            references = None
        )
        {
            def Xform "ref_2f57286d269f4499b69e38a229858771" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_003a/SM_Prop_Junk_Garbage_PlasticBottle_003a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_PlasticBottle_003a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "phong1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_003a/textures/T_SM_Prop_Junk_Garbage_PlasticBottle_003a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_003a/textures/T_SM_Prop_Junk_Garbage_PlasticBottle_003a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_PlasticBottle_003a/textures/T_SM_Prop_Junk_Garbage_PlasticBottle_003a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_932A4F52694D1F83" (
            references = None
        )
        {
            def Xform "ref_01e9375c876e4e029f5eb42be472dcf4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Carousel/SM_Prop_C17_Playground_Carousel.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "model_low"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "carousel"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Carousel/textures/T_carousel_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Carousel/textures/T_carousel_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Carousel/textures/T_carousel_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Carousel/textures/T_carousel_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_38C2F2A0299C4193" (
            references = None
        )
        {
            def Xform "ref_a154c0e608f147b2906de9c600b3c804" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_001a/SM_Prop_C17_MetalPot_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_MetalPot_001a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Prop_C17_MetalPot_001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_001a/textures/T_Prop_C17_MetalPot_001a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_001a/textures/T_Prop_C17_MetalPot_001a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_001a/textures/T_Prop_C17_MetalPot_001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_MetalPot_001a/textures/T_Prop_C17_MetalPot_001a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9A84BA20892C40D0" (
            references = None
        )
        {
        }

        over "mesh_5439EE2DC8A40B98" (
            references = None
        )
        {
            def Xform "ref_ad9c2bd4cf9649c6b72092667c05a895" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/combine_interface_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "vr_combine_interface_01_vmdl_c_console_main_007"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_interface_panels_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_interface_case_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_interface_buttons_on_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.5 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/console_buttons_2k_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_56D9A981E94215BC" (
            references = None
        )
        {
            def Xform "ref_d3bb11c205e646cea7197fd6a7b1cbcf" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/SM_Combine_Fence_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "combine_fence_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_fence_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EE839C3A53F552CF" (
            references = None
        )
        {
            def Xform "ref_89c591416fb24c26ade8b82e8509afa9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/SM_Combine_Fence_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "combine_fence_01_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_fence_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1DE0D2BD7484944C" (
            references = None
        )
        {
            def Xform "ref_7d071fa0de0e42d6a18eee8c5f499218" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/SM_Combine_Fence_01a_off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "combine_fence_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_fence_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A5BAE706CE33D33F" (
            references = None
        )
        {
            def Xform "ref_5c644256f2f14f3a8bef8aa818eb7494" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/SM_Combine_Fence_01b_off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "combine_fence_01_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_fence_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Combine_Fence_01_Set/textures/combine_fence_hlvr_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C98D67804E56793D" (
            references = None
        )
        {
            def Xform "ref_917aef0a703f43aa9e78d70c462ba376" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_BreenConsole/SM_Prop_Combine_BreenConsole.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "breenconsole_vmdl_c_breenconsole_new"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_interface_panels"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_panel_01_roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_interface_buttons"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/console_buttons_2k_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_button_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "combine_interface_case"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Set/textures/combine_console_case_01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_59684285E1177FE3" (
            references = None
        )
        {
            def Xform "ref_a1ccaf5fe67f4ee7a517ff3645f316ca" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_SmallMonitor/SM_Prop_Combine_SmallMonitor.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "models_props_combine_combine_consoles_combine_monitor_small_vmd"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "combine_monitor_small"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_SmallMonitor/textures/combine_monitor_small_color_tga_f3ca6e7c.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_SmallMonitor/textures/combine_monitor_small_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_SmallMonitor/textures/combine_monitor_small_normal_tga_470d91fa_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_SmallMonitor/textures/combine_monitor_small_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_19E3EA88D590C348" (
            references = None
        )
        {
            def Xform "ref_9fdcc3de56d34b6485aa72a5a192bda7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Handrail/SM_Prop_Trainstation_Handrail.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Trainstation_Handrail"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "MI_Handrail"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Handrail/textures/T_Trainstation_Handrail_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Handrail/textures/T_Trainstation_Handrail_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Handrail/textures/T_Trainstation_Handrail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Handrail/textures/T_Trainstation_Handrail_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1CFA80D399116CBD" (
            references = None
        )
        {
            def Xform "ref_e760847971b7481399004393139f823d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/SM_Prop_Junk_Garbage_Newspaper_Terminal.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "newspaper"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "newspaper"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_default_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_50F68E6B0140D679" (
            references = None
        )
        {
            def Xform "ref_31650f9d58124b7baf26e5011d1f7fc7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/SM_Prop_Junk_Garbage_Newspaper_BlackMesa.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "newspaper"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "newspaper"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_single_blackmesa_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6E825B8145A5D2E2" (
            references = None
        )
        {
            def Xform "ref_3043039cf41848aab71f11c4e552f3ec" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/SM_Prop_Junk_Garbage_Newspaper_Surrenders.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "newspaper"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "newspaper"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_earthsurrenders_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Newspaper/textures/newspaper_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EB4ABCEA34D03D40" (
            references = None
        )
        {
            def Xform "ref_a9d04d2677bb4caaa7d88060760e7ce7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/SM_Prop_Junk_Terracotta_Pot.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "models_props_junk_pot_clay_1_vmdl_c_pot_clay1a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "pots_clay"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7B232B396198FBD4" (
            references = None
        )
        {
            def Xform "ref_f5b72c77b31a454b812f0e7547f0464a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/SM_Prop_Junk_Terracotta_Chunk_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "models_props_junk_pot_clay_1_vmdl_c_pot_clay1a_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "pots_clay_005"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2F180E682AE9F95B" (
            references = None
        )
        {
            def Xform "ref_c6400cd2a0074dbaac0a5db476bfd352" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/SM_Prop_Junk_Terracotta_Chunk_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "models_props_junk_pot_clay_1_vmdl_c_pot_clay1a_007"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "pots_clay_007"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_306B490210121F85" (
            references = None
        )
        {
            def Xform "ref_7ac150c5aae64938a5e4c9b5414aca68" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/SM_Prop_Junk_Terracotta_Chunk_3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "models_props_junk_pot_clay_1_vmdl_c_pot_clay1a_006"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "pots_clay_006"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Terracotta_Set/textures/pot_clay_1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E03E2BA1C91ECF87" (
            references = None
        )
        {
            def Xform "ref_dc4cd9a91dad4ed89f063b14519a72d9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_WallMounted/light_128wallmounted001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "light_128wallmounted001a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material__11"
                            {
                                over "Shader"
                                {
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_WallMounted/textures/light_128wallmounted001a_emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_WallMounted/textures/light_128wallmounted001a_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_WallMounted/textures/light_128wallmounted001a_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_WallMounted/textures/light_128wallmounted001a_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_639B9C61D1D3489B" (
            references = None
        )
        {
            def Xform "ref_8b8276cd56464612bb6bfad663955ea6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/SM_Prop_C17_Furniture_Couch_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Furniture_Couch_001a_Optimized"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Prop_C17_Furniture_Couch_001a_Mat2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat2_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat2_Normal.png_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat2_Rough.png.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_C17_Furniture_Couch_001a_Mat4"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat4_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat4_Normal.png_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat4_Rough.png.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_C17_Furniture_Couch_001a_Mat1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat1_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat1_Normal.png_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat1_Rough.png.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Prop_C17_Furniture_Couch_001a_Mat3"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat3_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat3_Normal.png_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_001a/textures/T_Prop_C17_Furniture_Couch_001a_Mat3_Rough.png.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D57B30D1B6A9EF29" (
            references = None
        )
        {
            def Xform "ref_d47cb7852ec14cbe8cbaea2a847af6a1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/SM_Prop_BSPmesh_Trainstation_Gate_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_726170ABD20E2CF9" (
            references = None
        )
        {
            def Xform "ref_2ee4886094124f61b2f825f83b4664d2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/SM_Prop_BSPmesh_Trainstation_Gate_02b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_85B8141A9FF2F91E" (
            references = None
        )
        {
            def Xform "ref_6d0ce9c85c5640c1a9e49ace01064b74" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/SM_Prop_BSPmesh_Trainstation_Gate_02c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1F03DEBD62EFCA01" (
            references = None
        )
        {
            def Xform "ref_01b0c74b19064a96ab7949e23c96b0bd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_05b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign005b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_010__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D2457BFEF689A9DC" (
            references = None
        )
        {
            def Xform "ref_9fe6efee80884cf8ade1752a1e62eedd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_05c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign005c"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_010__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B33C287154AB8EE3" (
            references = None
        )
        {
            def Xform "ref_8419b399baf549dca1909b47ee473e80" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_05d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign005d"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_010__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DBAEE885C86EC41E" (
            references = None
        )
        {
            def Xform "ref_6674e89bba244f5e8f371504bf83ca86" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign001c"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_011__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_381C3163C5FF1A76" (
            references = None
        )
        {
            def Xform "ref_1a1931c1cb5148e09f46db9fd4a2fe43" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_02b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign002b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_016__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5BE05C43B2B190D8" (
            references = None
        )
        {
            def Xform "ref_91568f8990b745a28380c3f09b610cd9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_03b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign003b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_016__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8602F6260404F499" (
            references = None
        )
        {
            def Xform "ref_61d8400f83e1436e938c259656048689" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_04e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign004e"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_016__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_50DA77AA436E73BC" (
            references = None
        )
        {
            def Xform "ref_b77c608a137c47929fd697a72c68fd00" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/SM_Prop_C17_StreetSign_04f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "streetsign004f"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_016__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_StreetSign_Set/textures/T_StreetSignSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_76C24374538561B2" (
            references = None
        )
        {
            def Xform "ref_d4afe742d4e74144a675e03a8b22ef73" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/SM_Prop_BSPmesh_Trainstation_Gate_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Rivet_low_004"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 64.236374177421)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Gate_Set/textures/T_SM_Prop_BSPmesh_Trainstation_Gate_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FFCC77C7E12AE5AF" (
            references = None
        )
        {
            def Xform "ref_dfd51e7fb9c34afd8c6c90abebd901fb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Lab_DeskLamp01a/SM_Prop_Lab_DeskLamp01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Lab_DeskLamp01a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Lab_DeskLamp01a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Lab_DeskLamp01a/textures/SM_Prop_Lab_DeskLamp01a_SM_Prop_Lab_DeskLamp01a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Lab_DeskLamp01a/textures/SM_Prop_Lab_DeskLamp01a_SM_Prop_Lab_DeskLamp01a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Lab_DeskLamp01a/textures/SM_Prop_Lab_DeskLamp01a_SM_Prop_Lab_DeskLamp01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Lab_DeskLamp01a/textures/SM_Prop_Lab_DeskLamp01a_SM_Prop_Lab_DeskLamp01a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9658019C34A4C6AC" (
            references = None
        )
        {
            def Xform "ref_4e26e95d483c4793b7360bf63e9cd7cd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/SM_Prop_Rooftop_Cluster_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_Cluster_1"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Rooftop_Cluster"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/textures/T_Prop_Rooftop_Cluster_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 0.25 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/textures/T_Prop_Rooftop_Cluster_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/textures/T_Prop_Rooftop_Cluster_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C51A02CA711E25FA" (
            references = None
        )
        {
            def Xform "ref_9dd01c56085c4c37a5409deee7444c2d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/SM_Prop_Rooftop_Cluster_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_Cluster_2"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Rooftop_Cluster"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/textures/T_Prop_Rooftop_Cluster_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 0.25 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = """How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified).

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/textures/T_Prop_Rooftop_Cluster_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Cluster_12_Set/textures/T_Prop_Rooftop_Cluster_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BD035201131385D9" (
            references = None
        )
        {
            def Xform "ref_9252e0ac54714edb938264c24900a5c3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Scaffolding/SM_Prop_Rooftop_Scaffolding.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "pasted__lambert2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Scaffolding/textures/M_Prop_Rooftop_Scaffolding_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Scaffolding/textures/M_Prop_Rooftop_Scaffolding_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Scaffolding/textures/M_Prop_Rooftop_Scaffolding_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Scaffolding/textures/M_Prop_Rooftop_Scaffolding_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F3E46C4247DB0BE8" (
            references = None
        )
        {
            def Xform "ref_b373cb142de44a3a81f5fb7457420600" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_StoreFrontBars/SM_Prop_Building_StoreFrontBars.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Building_StoreFrontBars"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Building_StoreFrontBars"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_StoreFrontBars/textures/SM Prop Building StoreFrontBars_rgb.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_StoreFrontBars/textures/SM Prop Building StoreFrontBars_m.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_StoreFrontBars/textures/SM Prop Building StoreFrontBars_n_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_StoreFrontBars/textures/SM Prop Building StoreFrontBars_r.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_24F129662B89268C" (
            references = None
        )
        {
            def Xform "ref_43b23d560d974d5999c2452fe5cec906" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/SM_Prop_BSPmesh_Trainstation_Window_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Trainstation_Window_001a_intercom"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:thin_wall_thickness = 1.5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                            dictionary soft_range = {
                                                float max = 1
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled material thickness"
                                        doc = """Simulated thickness for thin-walled materials (0 disables thin-walled mode)

"""
                                        hidden = false
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }

                            over "SM_Prop_BSPmesh_Trainstation_Window_001a_Glass"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }
                        }

                        over "node_low_glass"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }
                }
            }
        }

        over "mesh_05DE136DFE679338" (
            references = None
        )
        {
            def Xform "ref_a2a34ac8b0a1482a937a2ef0e60cb9b2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Truss_001/SM_Prop_BSPmesh_Trainstation_Truss_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Truss_Ronde_low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "trainstation_truss_bsp"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Truss_001/textures/T_SM_Prop_BSPmesh_Trainstation_Truss_001_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Truss_001/textures/T_SM_Prop_BSPmesh_Trainstation_Truss_001_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Truss_001/textures/T_SM_Prop_BSPmesh_Trainstation_Truss_001_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Truss_001/textures/T_SM_Prop_BSPmesh_Trainstation_Truss_001_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AEF932EB3233E92B" (
            references = None
        )
        {
            def Xform "ref_d4e94952d46943fd9f5885217a3fdea0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/pole_448connection002b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pole_448connection002a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 180)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "pole_448Connection002a_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "pole_448Connection002a_misc_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5EEEA79511BA021D" (
            references = None
        )
        {
            def Xform "ref_d0308a54fbc5428fb66fe693080af3af" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/pole_448connection002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pole_448connection002a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 180)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "pole_448Connection002a_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "pole_448Connection002a_misc_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_448_02_Set/textures/T_pole_448Connection002a_misc_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F1B91843A70CFE0D" (
            references = None
        )
        {
            def Xform "ref_cb457ba1ff904295b384c224eea15e40" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MetalCan_002a/SM_Prop_Junk_Garbage_MetalCan_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pCylinder1"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "tincan"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MetalCan_002a/textures/T_SM_Prop_Junk_Garbage_MetalCan_002a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MetalCan_002a/textures/T_SM_Prop_Junk_Garbage_MetalCan_002a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MetalCan_002a/textures/T_SM_Prop_Junk_Garbage_MetalCan_002a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_MetalCan_002a/textures/T_SM_Prop_Junk_Garbage_MetalCan_002a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_86A77BBFCC2EBD24" (
            references = None
        )
        {
            def Xform "ref_4b894fad4a1b4418b30376bede2a9938" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/SM_Prop_BSPmesh_CoolFluorescent_Beveled.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_CoolFluorescent_On_vents_low_002"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.391, 0.391, 0.391)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "glass"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Glass_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:thin_wall_thickness = 1 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                            dictionary soft_range = {
                                                float max = 1
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled material thickness"
                                        doc = """Simulated thickness for thin-walled materials (0 disables thin-walled mode)

"""
                                        hidden = false
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Glass_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }

                            over "body"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_447A082D001CDFD5" (
            references = None
        )
        {
            def Xform "ref_2c7adfda675d4ffbaab36625614faa89" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/SM_Prop_BSPmesh_CoolFluorescent_Beveled.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_CoolFluorescent_On_vents_low_002"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.391, 0.391, 0.391)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "glass"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Glass_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Glass_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }

                            over "body"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_CoolFluorescent/textures/T_Prop_BSPmesh_CoolFluorescent_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B20C81866393C243" (
            references = None
        )
        {
            def Xform "ref_f753b31b65bb4ba1a0b9ee38c489a77c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/SM_Prop_Interiors_Handrail_02_a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Interiors_Handrail_02_a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Interiors_Handrail_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_35F21109641DF208" (
            references = None
        )
        {
            def Xform "ref_05f508aac5554018a7e161ac2add9225" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/SM_Prop_Interiors_Handrail_02_b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Interiors_Handrail_02_b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Interiors_Handrail_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2D8B9952E9814761" (
            references = None
        )
        {
            def Xform "ref_6c20408c0e924ca189472a4082ef90d2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/SM_Prop_Interiors_Handrail_03_a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Interiors_Handrail_03_a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Interiors_Handrail_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Handrail_02_03_Set/textures/T_Prop_Interiors_Handrail_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F0996681CE12E907" (
            references = None
        )
        {
            def Xform "ref_6212bac560eb46808c36a320a4d8317a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Lab_Keypad_Base/SM_Prop_BSPmesh_Lab_Keypad_Base.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Panel_low"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "metalpanel015a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Lab_Keypad_Base/textures/sm_metalpanle015a_low_metalpanel015a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Lab_Keypad_Base/textures/sm_metalpanle015a_low_metalpanel015a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Lab_Keypad_Base/textures/sm_metalpanle015a_low_metalpanel015a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Lab_Keypad_Base/textures/sm_metalpanle015a_low_metalpanel015a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5FC3C4FC07C7FE76" (
            references = None
        )
        {
            def Xform "ref_20c4ec3d941c43969bfe9280f51fdb08" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/SM_Props_BSPmesh_SignBillboard_003.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Props_BSPmesh_SignBillboard_003"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (-0.004155078967414738, 2.305513277776413, -7.105427357601002e-15)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                        }
                    }
                }
            }
        }

        over "mesh_8AE190211EE7C6E2" (
            references = None
        )
        {
            def Xform "ref_cd157a2479e8447b8ab79b660614e4d6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/SM_Props_BSPmesh_SignBillboard_003Smaller.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Props_BSPmesh_SignBillboard_003Smaller"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.00667, 0.00663, 0.00668)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                        }
                    }
                }
            }
        }

        over "mesh_457000E6EBD3877D" (
            references = None
        )
        {
            def Xform "ref_e1d53c30f76544eaad069aee1e0a6d15" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/SM_Props_BSPmesh_SignBillboard_003x.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Props_BSPmesh_SignBillboard_003x"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                        }
                    }
                }
            }
        }

        over "mesh_1725F74816D8DF4E" (
            references = None
        )
        {
            def Xform "ref_d5de05c9f6004b938c1348b98a5938bd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_001/SM_Prop_BSPmesh_SignBillboard_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_billboard_001a_Low_002"
                        {
                            float3 xformOp:rotateXYZ = (-90, 180, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0.5850971054805996, 64.07618021740817, 9.667727823004952)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "sign_billboard_001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_001/textures/T_SM_Prop_BSPmesh_SignBillboard_001_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/textures/T_SM_Props_BSPmesh_SignBillboard_003_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/textures/T_SM_Props_BSPmesh_SignBillboard_003_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "sign_billboard_001a_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/textures/T_SM_Props_BSPmesh_SignBillboard_003_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/textures/T_SM_Props_BSPmesh_SignBillboard_003_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_003_Set/textures/T_SM_Props_BSPmesh_SignBillboard_003_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EBD4D9F8352C772C" (
            references = None
        )
        {
            def Xform "ref_63175ee72a614cd39f6e9d2c319ca1a0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_006/SM_Prop_BSPmesh_SignBillboard_006.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                        }
                    }
                }
            }
        }

        over "mesh_55213FFEFCD77A2F" (
            references = None
        )
        {
            def Xform "ref_7a296a1a9bcf4a13a651a0c057463aff" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_006/SM_Prop_BSPmesh_SignBillboard_006.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1.5, 1.5, 1.5)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                        }
                    }
                }
            }
        }

        over "mesh_0621CA5E6B747B36" (
            references = None
        )
        {
            def Xform "ref_bbd0d714a55f46d094eccff6d2f39782" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_005/SM_Prop_BSPmesh_SignBillboard_005.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_SignBillboard_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "mat_B4959A5FC2D45B97"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_005/textures/T_SM_Prop_BSPmesh_SignBillboard_005_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_005/textures/T_SM_Prop_BSPmesh_SignBillboard_005_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_005/textures/T_SM_Prop_BSPmesh_SignBillboard_005_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7C0DF1B8CE621067" (
            references = None
        )
        {
            def Xform "ref_ec380c388e034746bb89ceccf084e804" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Foliage_Bramble/BrambleBushes.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "BrambleBushes"
                        {
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "bark07"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Foliage_Bramble/textures/Normals_DirectX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }


        over "mesh_F02DAE43882226CC" (
            references = None
        )
        {
            def Xform "ref_edc2aa0ef8f94bab8c756bd9d7abdd12" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Wasteland_Prison_Sink_01a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F9F810CDF1E51E03" (
            references = None
        )
        {
            def Xform "ref_c26f6b15185040e2a82bec88bf05094f" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9A283A26A2E59991" (
            references = None
        )
        {
            def Xform "ref_7452e9c3330d477a8c286868833f4e1d" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A59DCAF97EAB6588" (
            references = None
        )
        {
            def Xform "ref_8b25ddbff4e741a6b42f1e7357da9637" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_85FB9018E0DB8A73" (
            references = None
        )
        {
            def Xform "ref_6db3127aaf7d425fa10bfc1756013593" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6662C84BF2EE1158" (
            references = None
        )
        {
            def Xform "ref_7a11d4fa91934a5a9a0d0115593f8d19" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9994682A6A17BD87" (
            references = None
        )
        {
            def Xform "ref_85148c8419754a0790c63d5572a74795" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_918B81A73939C013" (
            references = None
        )
        {
            def Xform "ref_ef86ca59114f48d1a48ffa11f3e65083" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01g.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_097E4453300ADFBE" (
            references = None
        )
        {
            def Xform "ref_2975309ee3cf406bbcc9d3c1dad22c0e" (
                prepend references = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/SM_Prop_Wasteland_Prison_Sink_Chunk_01h.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Wasteland_Prison_Sink_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_Wasteland_Prison_Sink_Set/textures/SM_Prop_Wasteland_Prison_Sink Set_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_00129BDEFEA4D55D" (
            references = None
        )
        {
            def Xform "ref_3bc54e2df623439abf43b37719ae7fdb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_01a/SM_Prop_Interiors_Pot_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "part_001_low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "pot"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_01a/textures/T_Prop_Interiors_Pot_01a_BaseColor.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_01a/textures/T_Prop_Interiors_Pot_01a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_01a/textures/T_Prop_Interiors_Pot_01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_01a/textures/T_Prop_Interiors_Pot_01a_Roughness.r.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5BB8E9C43ABD791D" (
            references = None
        )
        {
            def Xform "ref_ae6b5f6ad6124718873913f6283b42f9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/SM_Prop_Combine_Interface_Monitor_001_Screen.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "intmonitor_001_screen"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "vr_combine_intmonitor_screen_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_001_albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_001_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_001_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4C50D18D2AFF9330" (
            references = None
        )
        {
            def Xform "ref_c3bb6779db6a423393f89bd9713a157f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/SM_Prop_Combine_Interface_Monitor_001_Screen.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "intmonitor_001_screen"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "vr_combine_intmonitor_screen_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/combine_monitor_001_on_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.25 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/combine_monitor_001_on_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_001_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_001_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_15BFC2723CCE515A" (
            references = None
        )
        {
            def Xform "ref_0b27a9880a604b16aeef08022dd7fcc3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/SM_Prop_Combine_Interface_Monitor_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "intmonitor_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "vr_combine_intmonitor_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_001_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_001_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_001_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_001_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "vr_combine_intmonitor_glass_001"
                            {
                                over "Shader"
                                {
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8AAB7B6D69A5AD61" (
            references = None
        )
        {
            def Xform "ref_bcd5016d9378482db509d425abf8bb98" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/SM_Prop_Combine_Interface_Monitor_003_Screen.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "intmonitor_003_screen"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "vr_combine_intmonitor_screen_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/combine_monitor_003_on_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 0.25 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/combine_monitor_003_on_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_003_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_003_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D43432479E7474C" (
            references = None
        )
        {
            def Xform "ref_18d2818e861b47aeb79c2dbc973c5d4d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/SM_Prop_Combine_Interface_Monitor_003_Screen.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "intmonitor_003_screen"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "vr_combine_intmonitor_screen_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_003_albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_003_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_screen_003_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_18E64288D2EC8D3E" (
            references = None
        )
        {
            def Xform "ref_381a00aa19264c88be235111a9261ee6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/SM_Prop_Combine_Interface_Monitor_003.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "intmonitor_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "vr_combine_intmonitor_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_003_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_003_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_003_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Interface_Monitor_Set/textures/vr_combine_intmonitor_003_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "vr_combine_intmonitor_glass_003"
                            {
                                over "Shader"
                                {
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EFC7F0327F66AD4D" (
            references = None
        )
        {
            def Xform "ref_d5e835adf500493abcc92cf96a56a6e3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Radiator/SM_Prop_C17_Furniture_Radiator.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "phong1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Radiator/textures/phong1_Base_color_1001.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Radiator/textures/phong1_Metallic_1001.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Radiator/textures/phong1_Normal_DirectX_1001_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Radiator/textures/phong1_Roughness_1001.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_03B1B3D6F681576C" (
            references = None
        )
        {
            def Xform "ref_a947f9b69e724d6c8083941bc7af28bf" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Cable_1152/cable_1152connection001b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "cable_1152connection001b_"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "cable_1152connection001b_"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Cable_1152/textures/T_Prop_Trainstation_Cable_1152_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Cable_1152/textures/T_Prop_Trainstation_Cable_1152_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Cable_1152/textures/T_Prop_Trainstation_Cable_1152_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Cable_1152/textures/T_Prop_Trainstation_Cable_1152_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BB13874DE44AD2CA" (
            references = None
        )
        {
            def Xform "ref_4eadee9c1f2d4754b419aeff280b5310" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/SM_Prop_Trainstation_Train_002.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Trainstation_Train_002_Wheels"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Trainstation_Train_002_Tank"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Trainstation_Train_002_Bed"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_57F428B55A7B2D6F" (
            references = None
        )
        {
            def Xform "ref_1a996c90afec4c6e9a2a0ea0ef173155" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/SM_Prop_Trainstation_Train_002.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Trainstation_Train_002_Wheels"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Trainstation_Train_002_Tank"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_White_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Red_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Trainstation_Train_002_Bed"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0ACF01D5A2CA9428" (
            references = None
        )
        {
            def Xform "ref_99d7c8236eca4519b183b1c98bd427aa" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_005/SM_Prop_Trainstation_Train_005.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)

                            over "Mesh_004"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (1.0913936421275139e-11, 1.32541413085778, -4.65556725734541)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Trainstation_Train_002_Wheels"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Wheels_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_Trainstation_Train_002_Bed"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Normal_DX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_002_Set/textures/SM_Prop_Trainstation_Train_002_Bed_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4185C02F0B8D7036" (
            references = None
        )
        {
            def Xform "ref_67d5403d81244f059d22a335ae08b59f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_SignPole/SM_Prop_C17_SignPole.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_SignPole"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Circle_022__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_SignPole/textures/T_Prop_C17_SignPole_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_SignPole/textures/T_Prop_C17_SignPole_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_SignPole/textures/T_Prop_C17_SignPole_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_SignPole/textures/T_Prop_C17_SignPole_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B3F988D3714072F5" (
            references = None
        )
        {
            def Xform "ref_0f0152db300340baa1fa61bd4af9f6da" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/SM_Prop_BSPmesh_SignBillboard_007.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_SignBillboard_007_002"
                        {
                            float3 xformOp:rotateXYZ = (10, -10, 15)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "mat_AE4BF339588BDF00"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/textures/T_SM_Prop_BSPmesh_SignBillboard_007_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/textures/T_SM_Prop_BSPmesh_SignBillboard_007_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/textures/T_SM_Prop_BSPmesh_SignBillboard_007_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B91E05AF88E31A7D" (
            references = None
        )
        {
            def Xform "ref_072c9b25472d48eb95e46f9e8cdd5d36" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/SM_Prop_BSPmesh_SignBillboard_007.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_SignBillboard_007_002"
                        {
                            float3 xformOp:rotateXYZ = (10, -10, 15)
                            float3 xformOp:scale = (0.6, 0.6, 0.6)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "mat_AE4BF339588BDF00"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/textures/T_SM_Prop_BSPmesh_SignBillboard_007_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/textures/T_SM_Prop_BSPmesh_SignBillboard_007_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_SignBillboard_007/textures/T_SM_Prop_BSPmesh_SignBillboard_007_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_49893EEE52099FA9" (
            references = None
        )
        {
            def Xform "ref_c466cc7d8fd64f07916e4c0790363d11" (
                prepend references = @./assets/ch3_routekanal/models/SM_Prop_BSPmesh_d1_canals_11_TinyTruss/SM_Prop_BSPmesh_d1_canals_11_TinyTruss.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_d1_canals_11_TinyTruss"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_d1_canals_11_TinyTruss"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch3_routekanal/models/SM_Prop_BSPmesh_d1_canals_11_TinyTruss/textures/SM_Prop_BSPmesh_d1_canals_11_TinyTruss_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_73FAD0533D33485C" (
            references = None
        )
        {
            def Xform "ref_9f04872158ef44289b1ac74bd88d11d9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_02a/SM_Prop_Interiors_Pot_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pot2a_001_low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "pot02a"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_02a/textures/T_Prop_Interiors_Pot_02a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_02a/textures/T_Prop_Interiors_Pot_02a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Pot_02a/textures/T_Prop_Interiors_Pot_02a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_84BA6A61A7EB9363" (
            references = None
        )
        {
            def Xform "ref_38c17b59770f4eac97d3c0ecb00837ad" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/SM_Prop_Interiors_Radiator01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "phong1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_albedo_skin_1.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_metallic_skin_1.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_normal_skin_1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_rough_skin_1.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6E30EE54EC538E47" (
            references = None
        )
        {
            def Xform "ref_59bd6e21d93046e18b79a7a0410694b8" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/SM_Prop_Interiors_Radiator01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "phong1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_albedo_skin_2.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_metallic_skin_2.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_normal_skin_1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_rough_skin_2.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D4AA4E9527ABE960" (
            references = None
        )
        {
            def Xform "ref_195589d35ad94dee929cf4d9a2d8f062" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/SM_Prop_Interiors_Radiator01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "phong1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_albedo_skin_3.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_metallic_skin_1.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_normal_skin_1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Interiors_Radiator01a_Set/textures/radiator01a_rough_skin_1.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_986F2F13577A4357" (
            references = None
        )
        {
            def Xform "ref_4a8faa8a2aa24c79bb6f96f01b86df14" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/SM_Prop_Junk_Garbage_GlassBottle_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "root"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_002a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (0.009999999, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "materials"
                        {
                            over "cube_NewUVs1SG"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MI_Prop_Junk_Garbage_GlassBottle_002a_GlassBottleSG"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_GlassBottle_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.35521233, 0.26059702, 0.11794695) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 0.25 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_GlassBottle_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5B535893F56061FE" (
            references = None
        )
        {
            def Xform "ref_68e73a5305de47c59862fcda27467a16" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/SM_Prop_Junk_Garbage_GlassBottle_002a_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "root"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_002a_Chunk01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "materials"
                        {
                            over "cube_NewUVs1SG_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MI_Prop_Junk_Garbage_GlassBottle_002a_GlassBottleSG_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_GlassBottle_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.35686275, 0.25882354, 0.11764706) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 0.25 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_GlassBottle_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E46E46FDE25A4562" (
            references = None
        )
        {
            def Xform "ref_205b16065f454866a6efbdaeaccfc690" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/SM_Prop_Junk_Garbage_GlassBottle_002a_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "root"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_002a_Chunk02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "materials"
                        {
                            over "cube_NewUVs1SG_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Metal.m.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_PaperBag_Rough.r.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MI_Prop_Junk_Garbage_GlassBottle_002a_GlassBottleSG_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_GlassBottle_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.35686275, 0.25882354, 0.11764706) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 0.25 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = """Distance to match the transmittance through the volume at.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_002a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_002a_GlassBottle_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7F8EDF3F6DB9F565" (
            references = None
        )
        {
            def Xform "ref_d179ad9e378f4a1c9e7f7daf084827b5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Slide/SM_Prop_C17_Playground_Slide.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_C17_Playground_Slide"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Slide/textures/T_Prop_C17_Playground_Slide_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Slide/textures/T_Prop_C17_Playground_Slide_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Slide/textures/T_Prop_C17_Playground_Slide_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Slide/textures/T_Prop_C17_Playground_Slide_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F3042D150EB01C7F" (
            references = None
        )
        {
            def Xform "ref_cd9f9909f29944b590cf8ff5f10890f0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock001/trainstation_clock001.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (90, 2.842171e-14, 90)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "clock"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock001/textures/clock_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock001/textures/clock_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock001/textures/clock_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AEC91E4ED01CE5A2" (
            references = None
        )
        {
            def Xform "ref_077296689c8645cc8e5360afe83dc2e7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock01/SM_Prop_Trainstation_Clock01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "clock01"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 90)
                            float3 xformOp:scale = (85.72761, 87.91205, 82.418755)
                            double3 xformOp:translate = (1.8189894035458565e-12, -9.094947017729282e-13, -66.99999999999997)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "clock"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock01/textures/Clock01_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock01/textures/Clock01_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Clock01/textures/Clock01_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4648016F19B610D1" (
            references = None
        )
        {
            def Xform "ref_831927d9ae6a4818b4cc75b8f1155501" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Combine_BreenClock/breenclock.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "breenclock"
                        {
                            float3 xformOp:rotateXYZ = (-90, -0, 0)
                            float3 xformOp:scale = (0.95, 0.95, 0.95)
                            double3 xformOp:translate = (0, 0, 0.7)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "breenclock"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Combine_BreenClock/textures/breenclock_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Combine_BreenClock/textures/breenclock_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Combine_BreenClock/textures/breenclock_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2D115C2CEECCAA95" (
            references = None
        )
        {
        }

        over "mesh_214A3F7833F11743" (
            references = None
        )
        {
            def Xform "ref_0dde9ebc09c94ceeb00b331bb5abcb1c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Clock01/SM_Prop_C17_Clock01.usda@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Clock01_Body"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 180)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_C17_Clock01_Body"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Clock01/textures/T_Prop_C17_Clock01_Body_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Clock01/textures/T_Prop_C17_Clock01_Body_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Clock01/textures/T_Prop_C17_Clock01_Body_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Clock01/textures/T_Prop_C17_Clock01_Body_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_73C080FA9253190D" (
            references = None
        )
        {
            def Xform "ref_f6aa0d8bdebd4a1aa2c98e20e7a761a0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/SM_Prop_BSPmesh_BreenIntercom.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "breenphone_receiver"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "breenphone"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_23422A617F1585C5" (
            references = None
        )
        {
            def Xform "ref_66c3208b0eb9428cb0feb9522fc3b403" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk04"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, -1.78809)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_026" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_23422A617F1585C5/ref_66c3208b0eb9428cb0feb9522fc3b403/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk04/Cylinder_026/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_23422A617F1585C5/ref_66c3208b0eb9428cb0feb9522fc3b403/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk04/Cylinder_026/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_23422A617F1585C5/ref_66c3208b0eb9428cb0feb9522fc3b403/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk04/Cylinder_026/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_23422A617F1585C5/ref_66c3208b0eb9428cb0feb9522fc3b403/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk04/Cylinder_026/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                        asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_a_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Normal"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        color3f inputs:transmittance_color = (0.3882353, 0.2, 0.0627451) (
                                            customData = {
                                                float3 default = (0.97, 0.97, 0.97)
                                                dictionary range = {
                                                    float3 max = (1, 1, 1)
                                                    float3 min = (0, 0, 0)
                                                }
                                            }
                                            displayGroup = "Volume"
                                            displayName = "Transmittance Color"
                                            doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                            hidden = false
                                            renderType = "color"
                                        )
                                        float inputs:transmittance_measurement_distance = 0.25 (
                                            customData = {
                                                float default = 1
                                                dictionary range = {
                                                    float max = 65504
                                                    float min = 0.001
                                                }
                                            }
                                            displayGroup = "Volume"
                                            displayName = "Transmittance Measurement Distance"
                                            doc = """Distance to match the transmittance through the volume at.

"""
                                            hidden = false
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0952E8D0E7AE1250" (
            references = None
        )
        {
            def Xform "ref_b8aaff36e1014aa1aadf5b6442b82d11" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/SM_Prop_Junk_Garbage_GlassBottle_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_001a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.765, 0.765, 0.765)
                            double3 xformOp:translate = (0, 0, -1.7880876138817428)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_026"
                            {
                                over "mat_9F1EAD6FBDBCA883" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_0952E8D0E7AE1250/ref_b8aaff36e1014aa1aadf5b6442b82d11/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_0952E8D0E7AE1250/ref_b8aaff36e1014aa1aadf5b6442b82d11/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_0952E8D0E7AE1250/ref_b8aaff36e1014aa1aadf5b6442b82d11/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_0952E8D0E7AE1250/ref_b8aaff36e1014aa1aadf5b6442b82d11/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_a_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            color3f inputs:transmittance_color = (0.38996136, 0.19866173, 0.061731342) (
                                                customData = {
                                                    float3 default = (0.97, 0.97, 0.97)
                                                    dictionary range = {
                                                        float3 max = (1, 1, 1)
                                                        float3 min = (0, 0, 0)
                                                    }
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Color"
                                                doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                                hidden = false
                                                renderType = "color"
                                            )
                                            float inputs:transmittance_measurement_distance = 0.25 (
                                                customData = {
                                                    float default = 1
                                                    dictionary range = {
                                                        float max = 65504
                                                        float min = 0.001
                                                    }
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Measurement Distance"
                                                doc = """Distance to match the transmittance through the volume at.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    float inputs:alpha_test_reference_value = 0.1 (
                                        customData = {
                                            float default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Reference Value"
                                        doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                        hidden = false
                                    )
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = """Indicates if alpha state blending should be enabled.

"""
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4E9A2E17F7701AD1" (
            references = None
        )
        {
            def Xform "ref_3a2ae2446dd94cb7b93d6da8ba14a53b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk01"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.765, 0.765, 0.765)
                            double3 xformOp:translate = (0, 0, -1.78809)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_026"
                            {
                                over "mat_9F1EAD6FBDBCA883" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_4E9A2E17F7701AD1/ref_3a2ae2446dd94cb7b93d6da8ba14a53b/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk01/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_4E9A2E17F7701AD1/ref_3a2ae2446dd94cb7b93d6da8ba14a53b/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk01/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_4E9A2E17F7701AD1/ref_3a2ae2446dd94cb7b93d6da8ba14a53b/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk01/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_4E9A2E17F7701AD1/ref_3a2ae2446dd94cb7b93d6da8ba14a53b/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk01/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_a_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            color3f inputs:transmittance_color = (0.3882353, 0.2, 0.0627451) (
                                                customData = {
                                                    float3 default = (0.97, 0.97, 0.97)
                                                    dictionary range = {
                                                        float3 max = (1, 1, 1)
                                                        float3 min = (0, 0, 0)
                                                    }
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Color"
                                                doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                                hidden = false
                                                renderType = "color"
                                            )
                                            float inputs:transmittance_measurement_distance = 0.25 (
                                                customData = {
                                                    float default = 1
                                                    dictionary range = {
                                                        float max = 65504
                                                        float min = 0.001
                                                    }
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Measurement Distance"
                                                doc = """Distance to match the transmittance through the volume at.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    float inputs:alpha_test_reference_value = 0.1 (
                                        customData = {
                                            float default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Reference Value"
                                        doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                        hidden = false
                                    )
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = """Indicates if alpha state blending should be enabled.

"""
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_048BDF37887E8CC2" (
            references = None
        )
        {
            def Xform "ref_bdf43a7ae03042c3a5ea2176798b012c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk02"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, -1.78809)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_026"
                            {
                                over "mat_9F1EAD6FBDBCA883" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_048BDF37887E8CC2/ref_bdf43a7ae03042c3a5ea2176798b012c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk02/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_048BDF37887E8CC2/ref_bdf43a7ae03042c3a5ea2176798b012c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk02/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_048BDF37887E8CC2/ref_bdf43a7ae03042c3a5ea2176798b012c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk02/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_048BDF37887E8CC2/ref_bdf43a7ae03042c3a5ea2176798b012c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk02/Cylinder_026/mat_9F1EAD6FBDBCA883/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_a_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            color3f inputs:transmittance_color = (0.3882353, 0.2, 0.0627451) (
                                                customData = {
                                                    float3 default = (0.97, 0.97, 0.97)
                                                    dictionary range = {
                                                        float3 max = (1, 1, 1)
                                                        float3 min = (0, 0, 0)
                                                    }
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Color"
                                                doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                                hidden = false
                                                renderType = "color"
                                            )
                                            float inputs:transmittance_measurement_distance = 0.25 (
                                                customData = {
                                                    float default = 1
                                                    dictionary range = {
                                                        float max = 65504
                                                        float min = 0.001
                                                    }
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Measurement Distance"
                                                doc = """Distance to match the transmittance through the volume at.

"""
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    float inputs:alpha_test_reference_value = 0.1 (
                                        customData = {
                                            float default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Reference Value"
                                        doc = """The value to use for alpha testing against.
This parameter is unused.
"""
                                        hidden = false
                                    )
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused.
"""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = """Indicates if alpha state blending should be enabled.

"""
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = """Indicates if the alpha state should be driven by the game itself, or overridden by this material.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA8DF4FA7CB5A435" (
            references = None
        )
        {
            def Xform "ref_21bdb48b580e4341a3fc38b26dd3051c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk03"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, -1.78809)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_026" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_BA8DF4FA7CB5A435/ref_21bdb48b580e4341a3fc38b26dd3051c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk03/Cylinder_026/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_BA8DF4FA7CB5A435/ref_21bdb48b580e4341a3fc38b26dd3051c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk03/Cylinder_026/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_BA8DF4FA7CB5A435/ref_21bdb48b580e4341a3fc38b26dd3051c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk03/Cylinder_026/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_BA8DF4FA7CB5A435/ref_21bdb48b580e4341a3fc38b26dd3051c/XForms/World/SM_Prop_Junk_Garbage_GlassBottle_001a_Chunk03/Cylinder_026/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                        asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_001a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_001a_a_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Normal"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        color3f inputs:transmittance_color = (0.3882353, 0.2, 0.0627451) (
                                            customData = {
                                                float3 default = (0.97, 0.97, 0.97)
                                                dictionary range = {
                                                    float3 max = (1, 1, 1)
                                                    float3 min = (0, 0, 0)
                                                }
                                            }
                                            displayGroup = "Volume"
                                            displayName = "Transmittance Color"
                                            doc = """Expected transmittance after the specified transmittance distance through the volume.

"""
                                            hidden = false
                                            renderType = "color"
                                        )
                                        float inputs:transmittance_measurement_distance = 0.25 (
                                            customData = {
                                                float default = 1
                                                dictionary range = {
                                                    float max = 65504
                                                    float min = 0.001
                                                }
                                            }
                                            displayGroup = "Volume"
                                            displayName = "Transmittance Measurement Distance"
                                            doc = """Distance to match the transmittance through the volume at.

"""
                                            hidden = false
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_37F97A564DCE5FB4" (
            references = None
        )
        {
            def Xform "ref_abdf5f7333a542a39f549e843e6f64a4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_Set/SM_Prop_C17_Furniture_Shelf_Frame.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Furniture_Shelf_Frame"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_C17_Furniture_Shelf"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_Set/textures/SM_Prop_C17_Furniture_Shelf_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DB71085138F7A8D1" (
            references = None
        )
        {
            def Xform "ref_c9d9431ed373477e8721cb3f21af58ee" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_Set/SM_Prop_C17_Furniture_Shelf_Board.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Furniture_Shelf_Board"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_C17_Furniture_Shelf"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Shelf_Set/textures/SM_Prop_C17_Furniture_Shelf_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C46FB52D23F4D190" (
            references = None
        )
        {
            def Xform "ref_fbbab44eaa074664a53aa0352beeedec" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Column_02a/SM_Prop_C17_Column_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cylinder_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (41.75, 41.75, 41.75)
                            double3 xformOp:translate = (0, 0, -78.5)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Column_02a/textures/SM_Prop_C17_Column_02a_Color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Column_02a/textures/SM_Prop_C17_Column_02a_Metalic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Column_02a/textures/SM_Prop_C17_Column_02a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Column_02a/textures/SM_Prop_C17_Column_02a_Rougness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9E96BF1C66101B7A" (
            references = None
        )
        {
            def Xform "ref_49567da092fc4eac82093598b97fddfd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/combine_lock_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "combine_lock_01"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (0.52, 0.52, 0.52)
                            double3 xformOp:translate = (-0.3316294735750489, -0.33324, -0.05476549055603641)
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "combine_lock_01_001__"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_color.a.rtex.dds@
                                    custom color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999)
                                    custom float inputs:emissive_intensity = 1
                                    custom asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_red_emissive.e.rtex.dds@
                                    custom bool inputs:enable_emission = 1
                                    custom asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_normal_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_83464915E46542D5" (
            references = None
        )
        {
            def Xform "ref_557775565b3b4e6bad682e5a7b944d7e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/combine_lock_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "combine_lock_01"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (0.52, 0.52, 0.52)
                            double3 xformOp:translate = (-0.3316294735750489, -0.33324, -0.05476549055603641)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "combine_lock_01_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (1.4561919670086354e-8, 0, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "combine_lock_01_001__"
                            {
                                over "Shader"
                                {
                                    custom color3f inputs:diffuse_color_constant = (0.8, 0.8, 0.8)
                                    custom asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_color.a.rtex.dds@
                                    custom color3f inputs:emissive_color_constant = (1, 1, 1)
                                    custom float inputs:emissive_intensity = 1
                                    custom asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_green_emissive.e.rtex.dds@
                                    custom bool inputs:enable_emission = 1
                                    custom asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_normal_OTH_Normal.n.rtex.dds@
                                    custom float inputs:opacity_constant = 1
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2193801DBB9BD499" (
            references = None
        )
        {
            def Xform "ref_272da09f59e443f1a2e527fc0063fb0f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/combine_lock_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:scale = (1, 1, 1)

                    over "World"
                    {
                        over "combine_lock_01"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (0.52, 0.52, 0.52)
                            double3 xformOp:translate = (-0.3316294735750489, -0.33324, -0.05476549055603641)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "combine_lock_01_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, 0, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "combine_lock_01_001__"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_color.a.rtex.dds@
                                    custom color3f inputs:emissive_color_constant = (1, 0.99999, 0.99999)
                                    custom float inputs:emissive_intensity = 1
                                    custom asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_orange_emissive.e.rtex.dds@
                                    custom bool inputs:enable_emission = 1
                                    custom asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_normal_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Combine_Lock/textures/combine_lock01_rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_76A9DCD281085952" (
            references = None
        )
        {
        }

        over "mesh_814E02FBBDFEE40B" (
            references = None
        )
        {
            def Xform "ref_48f89050a84b48da8439f5dbffb2ce27" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 34)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA3F43347CB6CC22" (
            references = None
        )
        {
            def Xform "ref_738678602a7241eaab72f4abc27dde23" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02c"
                        {
                            float3 xformOp:rotateXYZ = (-90, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 1)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DAADB2446F986009" (
            references = None
        )
        {
            def Xform "ref_8bc28c9500bc49d4bb4b2e800010dbf9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02d"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 1, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3E1884A98F812335" (
            references = None
        )
        {
            def Xform "ref_0493ebae16c64f3a861387e295f22905" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02e"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 40.029415, 39.5)
                            double3 xformOp:translate = (-0.38239381385210436, 0, 0.20439781669216472)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0B50CFAC22109446" (
            references = None
        )
        {
            def Xform "ref_f357c2e92ed44fc9afd9a3353002bdd9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02f"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (39.5, 40.02942, 39.5)
                            double3 xformOp:translate = (-0.38239, 0, 0.2044)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_82CDADB1FD67E646" (
            references = None
        )
        {
            def Xform "ref_ca4aed2411cd4a60ba50eb40b0496ffc" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02g.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02g"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 40.02942, 39.5)
                            double3 xformOp:translate = (-0.38239, 0, 0.2044)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_222DF655CE901481" (
            references = None
        )
        {
            def Xform "ref_80dead7aee04449a93232e0a6ac392ca" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss02h.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss02h"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 40.02942, 39.5)
                            double3 xformOp:translate = (-0.38239, 0, 0.2044)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FD5658F5B5DCF66B" (
            references = None
        )
        {
            def Xform "ref_c9634e53aaa04368868e464a72ea1a69" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss03a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss03a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 1.7755820108030917)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ED33DA23F469C68D" (
            references = None
        )
        {
            def Xform "ref_faa2fca09566447693aeee322155441f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/SM_Prop_C17_Truss03b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Truss03b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 40.1)
                            double3 xformOp:translate = (4.547473508864641e-13, 2.7284841053187847e-12, -63.791143670705864)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_Truss"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Truss_Set/textures/T_Truss_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8CEB56D300CCE6D3" (
            references = None
        )
        {
            def Xform "ref_a13ff9f0481c4d138d980a9de451c4b1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Wheelbarrow/SM_Prop_Junk_Wheelbarrow.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_Wheelbarrow"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Junk_Wheelbarrow"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Wheelbarrow/textures/SM_Prop_Junk_Wheelbarrow_Junk_Wheelbarrow_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Wheelbarrow/textures/SM_Prop_Junk_Wheelbarrow_Junk_Wheelbarrow_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Wheelbarrow/textures/SM_Prop_Junk_Wheelbarrow_Junk_Wheelbarrow_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C88AC297A2E3454D" (
            references = None
        )
        {
            def Xform "ref_0fee9255fbb24eacb3dda5a5a780d04d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Turnstyle_Set/SM_Prop_BSPmesh_Trainstation_Turnstyle.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_Turnstyle"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Trainstation_Turnstyle"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Turnstyle_Set/textures/SM_Prop_BSPmesh_Trainstation_Turnstyle_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_093426456FD5DBF4" (
            references = None
        )
        {
            def Xform "ref_40608a991d50458abd1be7e8f702547c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Body_low_001"
                        {
                        }

                        over "Looks"
                        {
                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_490F27E6917D8E52" (
            references = None
        )
        {
            def Xform "ref_a136b7bf872247639b39f89498e9ab92" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01c_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01c_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01c_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01c_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_448C5370715B170E" (
            references = None
        )
        {
            def Xform "ref_b53864b9215449c2a86f5f4f45bd0aca" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cylinder_066__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Cylinder_068__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Cube_025__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Cylinder_078__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Cylinder_071__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "Cable_low_001"
                        {
                            over "BezierCurve_003" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Cable_low_001/BezierCurve_003/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Cable_low_001/BezierCurve_003/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Cable_low_001/BezierCurve_003/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Cable_low_001/BezierCurve_003/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                        asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Albedo/Opacity Map"
                                            doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Metallic Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Roughness Map"
                                            doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }

                        over "Connector_Base_low_001"
                        {
                            over "Cylinder_067" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Base_low_001/Cylinder_067/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Base_low_001/Cylinder_067/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Base_low_001/Cylinder_067/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Base_low_001/Cylinder_067/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                        asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Albedo/Opacity Map"
                                            doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Metallic Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Roughness Map"
                                            doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }

                        over "Connector_Fem_low_001"
                        {
                            over "Cylinder_068" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Fem_low_001/Cylinder_068/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Fem_low_001/Cylinder_068/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Fem_low_001/Cylinder_068/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_Fem_low_001/Cylinder_068/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                        asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Albedo/Opacity Map"
                                            doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Metallic Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Roughness Map"
                                            doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }

                        over "Connector_head_low_001"
                        {
                            over "Cylinder_069" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_001/Cylinder_069/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_001/Cylinder_069/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_001/Cylinder_069/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_001/Cylinder_069/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                        asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Albedo.a.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Albedo/Opacity Map"
                                            doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Metallness.m.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Metallic Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01d_Roughness.r.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Base Material"
                                            displayName = "Roughness Map"
                                            doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }

                        over "Connector_head_low_002"
                        {
                            over "Cylinder_077" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_002/Cylinder_077/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_002/Cylinder_077/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_002/Cylinder_077/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_448C5370715B170E/ref_b53864b9215449c2a86f5f4f45bd0aca/XForms/World/Connector_head_low_002/Cylinder_077/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Opacity.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Opacity"
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6F62B031A6AE57F8" (
            references = None
        )
        {
            def Xform "ref_bdd26fc161c3483caeea6730d9e34a04" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/SM_Prop_C17_Substation_Transformer_01e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01a_b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "HighPoly"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Substation_Transformer_Set/textures/T_Prop_C17_Substation_Transformer_01e_c_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C90D1A005A2F51A9" (
            references = None
        )
        {
            def Xform "ref_b4bc8d5978e9453cbcd8f3874bb662fb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/SM_Prop_BSPmesh_Trainstation_Window_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_low_glass"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Trainstation_Window_001a_intercom"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Intercom_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "SM_Prop_BSPmesh_Trainstation_Window_001a_Glass"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = """Whether the material is thin-walled, use when material is being applied to single triangle thick geometry.

"""
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Window_001a/textures/SM_Prop_BSPmesh_Trainstation_Window_001a_Glass_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = """Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = """When set, simulates a diffuse layer on top of the material

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8447D8A65DB42836" (
            references = None
        )
        {
            def Xform "ref_ff9034ddf52e41ffb6f972cf3a3305c4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/SM_Prop_BSPmesh_BreenIntercom.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "breenphone_receiver"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, -90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "breenphone_receiver"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (0, -3.8198777474462986e-10, 2.016280992869062)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }

                        over "Looks"
                        {
                            over "breenphone"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_BreenIntercom/textures/breenphone_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0CFB2BEF4DD34C45" (
            references = None
        )
        {
            def Xform "ref_9a594f84622a4e9a968d8b9f1ee4e2b1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/Mount_Texture.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Utility_Pole_Mount_mesh_Blockout"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "Main_mtl_low"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_Mount_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_Mount_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_Mount_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_Mount_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A65BBC325C63E88B" (
            references = None
        )
        {
            def Xform "ref_21729bb748d74f21a6c0502a2e7bc388" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/SM_Prop_C17_Utility_Pole_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Utility_Pole_02_mesh_Blockout"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "Main_mtl_low"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_02_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_02_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_02_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CA6D936365D7FC78" (
            references = None
        )
        {
            def Xform "ref_3ac5dcdc92ae450abc6095b98f3f129a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/SM_Prop_C17_Utility_Pole_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Utility_Pole_03_mesh_Blockout"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "Main_mtl_low"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_03_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_03_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_03_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Utility_Pole_02_Set/textures/SM_Prop_C17_Utility_Pole_03_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_47327F069D797906" (
            references = None
        )
        {
            def Xform "ref_94e5fefb97a94ad2980067bedc84b7fd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0B5C6809FAED12BB" (
            references = None
        )
        {
            def Xform "ref_068f0ff9e0ed413c8a6c49deff7ddbb0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    color3f inputs:diffuse_color_constant = (0.2283243, 0.74131274, 0) (
                                        customData = {
                                            float3 default = (0.2, 0.2, 0.2)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo Color"
                                        doc = """The base albedo color.  (Used if no texture is specified)

"""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_18FE8785B56DF016" (
            references = None
        )
        {
            def Xform "ref_f007b14642a14f9c8ee7e1aedd92693f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6F16BAA57ECF229A" (
            references = None
        )
        {
            def Xform "ref_381985ea2d5d43639433fa1a58148f4c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_01e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8FC5853DC46C9B45" (
            references = None
        )
        {
            def Xform "ref_3b9fb158f5c642fca09bab10fd4f3318" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (90, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set02_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D91CFEFDCE369AD" (
            references = None
        )
        {
            def Xform "ref_21c7625a21e349549fc4adc40c692bac" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_02b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set02_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9896085720068AC9" (
            references = None
        )
        {
            def Xform "ref_b8a2b3ba92df496597170a0f5103a396" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_02c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set02_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_132810D690F3BB6B" (
            references = None
        )
        {
            def Xform "ref_8e47067e48c746eeabfbeb320c45dbd6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_03a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set03_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6ACA96C89786A8B6" (
            references = None
        )
        {
            def Xform "ref_d148dfe639d0439fb373e007c7bde022" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/SM_Prop_Rooftop_Letters_03b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "MAT2"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Set03_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Paint_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Normal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Letters_Set/textures/T_Prop_Rooftop_Letters_Metal_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A13EFE8B1C8791AE" (
            references = None
        )
        {
            def Xform "ref_3559adacadfe47a4afd15d9285363d5f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Bench01a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat2_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B1A82735807C3B61" (
            references = None
        )
        {
            def Xform "ref_ceb31c266d29460d910740bd29eae4a1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Bench01a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat2_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CBBF313E7349C92B" (
            references = None
        )
        {
            def Xform "ref_a5f34e6ec35841dbb4257a35c811349f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cube_044"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Mat2_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2E8F1C663E043490" (
            references = None
        )
        {
            def Xform "ref_2cff289cfe354d9fb53cacb52868457d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cube_046"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Mat2_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_04BA157950E95DA3" (
            references = None
        )
        {
            def Xform "ref_8371553566c34367ab0012aa9cf73be3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cube_037"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat2_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_050C94A60F488527" (
            references = None
        )
        {
            def Xform "ref_4bcb72edef224667b2253fb0ea881143" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cube_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat2_2k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9ECCCDC4B0C1F725" (
            references = None
        )
        {
            def Xform "ref_eb222309ba40434eb1fdcde59c1a31fa" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cube_047"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_29B78B17BDDB0A50" (
            references = None
        )
        {
            def Xform "ref_19de3a0489bb4b1dbebf023f6ffe4f08" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_06.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cube_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A60B1D1C6B07F408" (
            references = None
        )
        {
            def Xform "ref_3b785d8175164668b164c432f6155092" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_07.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cylinder_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9EBA15BCC2E5E2C1" (
            references = None
        )
        {
            def Xform "ref_e6e09d1ff1d540a7aa8eb93f4ab86774" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/SM_Prop_C17_Bench01a_Broken_08.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Cylinder_009"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Mat1_1k"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Bench01a/textures/T_Prop_C17_Bench01a_Mat2_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA85B39BD1F81F48" (
            references = None
        )
        {
            def Xform "ref_18e700c285d543aea6fa0a01231c221e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Shoe/shoe001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 92.969574)
                    float3 xformOp:scale = (0.00395, 0.00395, 0.00395)
                    double3 xformOp:translate = (-0.3272182065420566, 0.5058478145310801, -4.828702534667741)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Plane_031__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Shoe/textures/T_shoe001a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Shoe/textures/T_shoe001a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Shoe/textures/T_shoe001a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Shoe/textures/T_shoe001a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7A71A8FBD8B91B9E" (
            references = None
        )
        {
            def Xform "ref_e6a5179658a244cf802fe34275dd359a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railing_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Handrail1_low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "TrainHandrailMat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D8FA8E17D318F070" (
            references = None
        )
        {
            def Xform "ref_1816e1bf2d0e4ee689e2bb9bc09a0319" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railing_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Sideways_low_044"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "TrainHandrailMat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/textures/T_Trainstation_01_Railing_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_79EEB20220894D8E" (
            references = None
        )
        {
            def Xform "ref_f67e5c66298c42698c2ec99b10d8fe5e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railings_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_01_Railings_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Tex1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9BC14B075956FCF9" (
            references = None
        )
        {
            def Xform "ref_e0010fb7d58445efad16f9da52f8bdfb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railings_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_01_Railings_02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Tex1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AAC515CD8CB0755C" (
            references = None
        )
        {
            def Xform "ref_46dd398078df48bb847b1499e120fac4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railings_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_01_Railings_03"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Tex1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6C5CAF7CAE00FCD9" (
            references = None
        )
        {
            def Xform "ref_24c79feef3084a228336bd6732b2228d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railings_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_01_Railings_04"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Tex1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9DAD23F4E07E8FD9" (
            references = None
        )
        {
            def Xform "ref_520ef9c9b90d414093a673f35a2692c3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_01_Railing_Set/SM_Prop_BSPmesh_Trainstation_01_Railings_05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_01_Railings_05"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Tex1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_Prison_01_Railing_Set/textures/T_Prison01RailingSet_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_02F4D0C4C4CDA24E" (
            references = None
        )
        {
            def Xform "ref_769c513ab0f843749cf3d722648880de" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/metaldoor042a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "WoodenPiece_Low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "metaldoor042a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/textures/metaldoor042a_Texturing_metaldoor042a_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/textures/metaldoor042a_Texturing_metaldoor042a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/textures/metaldoor042a_Texturing_metaldoor042a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/textures/metaldoor042a_Texturing_metaldoor042a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_70464E24BFCD2B3C" (
            references = None
        )
        {
            def Xform "ref_88397c22e5034f4bb8e8e39ab068fa41" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_01/SM_Prop_Rooftop_Vent_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Vent_shaft"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "default_material"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_01/textures/SM_Prop_Rooftop_Vent_01_default_material_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4A35675E4C087292" (
            references = None
        )
        {
            def Xform "ref_d1c3d085f57a40dea982f394ce06c978" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_CeilingMounted/light_256ceilingmounted001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "light_256ceilingmounted001a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (-0.4322848587999033, -1.8894752429332584e-8, -114.37114065477769)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material__26"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_CeilingMounted/textures/light_256ceilingmounted001a_metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_CeilingMounted/textures/light_256ceilingmounted001a_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Light_CeilingMounted/textures/light_256ceilingmounted001a_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A7A2C39A82B9E230" (
            references = None
        )
        {
            def Xform "ref_2055a7bdfb83416491a9209ea44030ec" (
                prepend references = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/SM_Prop_Junk_WoodCrate_001a_DamagedMax.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "WoodCrate_001a_DamagedMax_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "WoodCrate_001_skin0"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_Skin0_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch2_redletterday/models/SM_Prop_Junk_WoodCrate_Set/textures/T_WoodCrate_001a_skin0_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9BDFEB651CA411EE" (
            references = None
        )
        {
            def Xform "ref_be118b81b6fb483a8b1d8779e4984beb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_02/SM_Prop_Rooftop_Vent_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Vent_shaft_02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "default_material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_02/textures/SM_Prop_Rooftop_Vent_02_default_material_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_02/textures/SM_Prop_Rooftop_Vent_02_default_material_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_02/textures/SM_Prop_Rooftop_Vent_02_default_material_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_02/textures/SM_Prop_Rooftop_Vent_02_default_material_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C95E1AAF3BD15EAF" (
            references = None
        )
        {
            def Xform "ref_9803b3389bbc497198d758f2a0cb83ad" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_03/SM_Prop_Rooftop_Vent_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Vent_shaft"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "default_material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_03/textures/SM_Prop_Rooftop_Vent_03_default_material_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_03/textures/SM_Prop_Rooftop_Vent_03_default_material_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_03/textures/SM_Prop_Rooftop_Vent_03_default_material_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_03/textures/SM_Prop_Rooftop_Vent_03_default_material_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7A623AD90B0F78F2" (
            references = None
        )
        {
            def Xform "ref_3f3baf5f7d744b5ea30c5f60e906e9ea" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Props_Interiors_Bathtub/SM_Prop_Interiors_Bathtub_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Interiors_Bathrub_01"
                        {
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Interiors_Bathtub_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Props_Interiors_Bathtub/textures/SM_Prop_Interiors_Bathtub_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_717A40FF0E89501D" (
            references = None
        )
        {
            def Xform "ref_7a01460aa56f4d32ae8ff29cd3b98708" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_04/SM_Prop_Rooftop_Vent_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "vent_04"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "default_material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_04/textures/SM_Prop_Rooftop_Vent_04_default_material_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_04/textures/SM_Prop_Rooftop_Vent_04_default_material_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_04/textures/SM_Prop_Rooftop_Vent_04_default_material_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Vent_04/textures/SM_Prop_Rooftop_Vent_04_default_material_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EA4A2F58F4D2ECEF" (
            references = None
        )
        {
            def Xform "ref_6049be9597c3482fbba070634cbd0083" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Turnstyle_Set/SM_Prop_BSPmesh_Trainstation_Turnstyle_Fence.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Trainstation_Turnstyle_Fence"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Turnstyle_Set/textures/SM_Prop_BSPmesh_Trainstation_Turnstyle_Fence_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EC8EF1A24500AA53" (
            references = None
        )
        {
            def Xform "ref_96a59f662d4e4dbda0ceafd2022fc32b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_02/SM_Prop_Rooftop_SatelliteDish_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "SM_Prop_Rooftop_SatelliteDish_02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_Rooftop_SatelliteDish_02"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_02/textures/M_Prop_Rooftop_SatelliteDish_02_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_02/textures/M_Prop_Rooftop_SatelliteDish_02_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_02/textures/M_Prop_Rooftop_SatelliteDish_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_02/textures/M_Prop_Rooftop_SatelliteDish_02_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_27CC67EDC62F4716" (
            references = None
        )
        {
            def Xform "ref_601219df98634258b9f600f2fadadf20" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/pole_384Connection001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "ole_384Connection001a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (-62.793735128474054, -0.3762640503100556, -191.40488866989924)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "pole_384Connection001a"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/textures/T_pole_384Connection001a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DC78123DE7144651" (
            references = None
        )
        {
            def Xform "ref_6c26bc5d473341d8b150ec3b8151ac96" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/pole_384Connection001b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pole_384Connection001b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (75.43, 0.65686, 65.62)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "pole_384Connection001b"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/textures/T_pole_384Connection001b_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/textures/T_pole_384Connection001b_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/textures/T_pole_384Connection001b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Pole_384_Set/textures/T_pole_384Connection001b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E095E68AA93E1CAF" (
            references = None
        )
        {
            def Xform "ref_6b2702e634294a2487803155226683c1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Error/error.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "mat_429ED5D87B7CE609"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Error/textures/colorsheet.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 3 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = """Intensity of the emission

"""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Error/textures/Emissionsheet.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = """The texture masking the emissive color

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = """Enables the emission of light from the material

"""
                                        hidden = false
                                    )
                                    int inputs:sprite_sheet_cols = 4 (
                                        customData = {
                                            int default = 1
                                            dictionary range = {
                                                int max = 255
                                                int min = 1
                                            }
                                        }
                                        displayGroup = "Animation"
                                        displayName = "Sprite Sheet Columns"
                                        doc = """Number of columns the spritesheet across all textures is divided into.

"""
                                        hidden = false
                                    )
                                    int inputs:sprite_sheet_fps = 10 (
                                        customData = {
                                            int default = 0
                                            dictionary range = {
                                                int max = 255
                                                int min = 0
                                            }
                                        }
                                        displayGroup = "Animation"
                                        displayName = "Sprite Sheet FPS"
                                        doc = """Framerate in Frames Per Second to use for the spritesheet across all textures. Note that a value of 0 disables this functionality.

"""
                                        hidden = false
                                    )
                                    int inputs:sprite_sheet_rows = 4 (
                                        customData = {
                                            int default = 1
                                            dictionary range = {
                                                int max = 255
                                                int min = 1
                                            }
                                        }
                                        displayGroup = "Animation"
                                        displayName = "Sprite Sheet Rows"
                                        doc = """Number of row the spritesheet across all textures is divided into.

"""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DEC4442AFE056D71" (
            references = None
        )
        {
            def Xform "ref_b8293bdb15a6491cbef48826b5f0a341" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_01a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "ChimneyCombinedMat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B5712E359F91E7A1" (
            references = None
        )
        {
            def Xform "ref_faac1d83402e4512af4c97fbef6db3ae" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_01b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_01b"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Rooftop_ChimneyPipe_01b_01c"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_184A00995EA08664" (
            references = None
        )
        {
            def Xform "ref_473750df7cf5483eaf83433a4e4a1b27" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_01c"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Rooftop_ChimneyPipe_01b_01c"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01b0c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_31EF3F884B1431B1" (
            references = None
        )
        {
            def Xform "ref_20df987c9bd3461d9967ddab86e16f7f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_02a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Rooftop_ChimneyPipe_02a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_02a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_02a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_02a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_02a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A3AD5C27339D056A" (
            references = None
        )
        {
            def Xform "ref_2d44a45c889c4cbeab96b05e12f8ddb6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_Cluster_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_Cluster_01a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Rooftop_ChimneyPipe_Cluster_01a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster01a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster01a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster01a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster01a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_CC1A144D483F974A" (
            references = None
        )
        {
            def Xform "ref_2bec0e7ef49d4ea788f212a7fb80bf06" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_Cluster_01c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_Cluster_01c"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "ChimneyCombinedMat"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_01a_Cluster01c_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_59476F3FAB914252" (
            references = None
        )
        {
            def Xform "ref_635646b2427f4afa8e96e0c6e8eeb94e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/SM_Prop_Rooftop_ChimneyPipe_Cluster_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_ChimneyPipe_Cluster_02a"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Rooftop_ChimneyPipe_Cluster_02a"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster02a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = """The texture specifying the albedo value and the optional opacity value to use in the alpha channel

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster02a_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster02a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_ChimneyPipe_Set/textures/T_RooftopChimneyPipe_Cluster02a_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = """A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections.

"""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_219A54757073DBD6" (
            references = None
        )
        {
            def Xform "ref_2473a5e5c1ed4b3ca7c7361eecbc242b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Mount_Connector/SM_Prop_Trainstation_Mount_Connector.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (0, 0, 0)
                        float3 xformOp:scale = (0.395, 0.395, 0.395)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "Looks"
                        {
                            over "MAT1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Mount_Connector/textures/T_Prop_Trainstation_Mount_Connector_a_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Mount_Connector/textures/T_Prop_Trainstation_Mount_Connector_a_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Mount_Connector/textures/T_Prop_Trainstation_Mount_Connector_a_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Mount_Connector/textures/T_Prop_Trainstation_Mount_Connector_a_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "HighPoly"
                            {
                                over "Shader"
                                {
                                    color3f inputs:diffuse_color_constant = (0.2, 0.2, 0.2) (
                                        customData = {
                                            float3 default = (0.2, 0.2, 0.2)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo Color"
                                        doc = "The base albedo color.  (Used if no texture is specified)"
                                        hidden = false
                                        renderType = "color"
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_PrisonFan_Set/textures/T_Prop_PrisonFan_Tilling_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_PrisonFan_Set/textures/T_Prop_PrisonFan_Tilling_Metallness.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_PrisonFan_Set/textures/T_Prop_PrisonFan_Tilling_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch9_novaprospekt/models/SM_Prop_BSPmesh_PrisonFan_Set/textures/T_Prop_PrisonFan_Tilling_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9D4B58E4881FBF96" (
            references = None
        )
        {
            def Xform "ref_5f9d23a09917481e9ba4aa6c88c67415" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_002a/SM_Prop_C17_Furniture_Couch_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "polySurface1395"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "lambert1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_002a/textures/lambert1_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_002a/textures/lambert1_Normal_DirectX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Couch_002a/textures/lambert1_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_504B5834A81ED875" (
            references = None
        )
        {
            def Xform "ref_8542bc31ba7b4ef3af6eda2856dd1e0a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/SM_Prop_C17_TrafficLight_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_TrafficLight_Off"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, -90)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_C17_TrafficLight_Off"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F269E1B81C1ED7DC" (
            references = None
        )
        {
            def Xform "ref_6a25f02f983949368e829f2f7222e5ed" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/SM_Prop_C17_TrafficLight_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_C17_TrafficLight_Off"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 3 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Red_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F2E9227A7AE34825" (
            references = None
        )
        {
            def Xform "ref_037cf03505464f59b6cc6df70d72a1fc" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/SM_Prop_C17_TrafficLight_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_C17_TrafficLight_Off"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 3 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Orange_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E790DE1940755A7C" (
            references = None
        )
        {
            def Xform "ref_830f38719e8b49f3be0efe7d1294e0b4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/SM_Prop_C17_TrafficLight_Off.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_C17_TrafficLight_Off"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:emissive_intensity = 3 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TrafficLight_Set/textures/SM_Prop_C17_TrafficLight_Green_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B4DDBF18E544A547" (
            references = None
        )
        {
            def Xform "ref_c8c51a4815b2439692f37bca8e37d586" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/rooftopgutter_downspout.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Rooftopgutters"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B72DF354F0B2C485" (
            references = None
        )
        {
            def Xform "ref_23ec8df1bce74d188ac7404b47d2f940" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/rooftopgutter_128pipe.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A49A12DD05ADB5B2" (
            references = None
        )
        {
            def Xform "ref_f9700d534f4347a087ab224875313e8c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/rooftopgutter_256pipe.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Gutter_Set/textures/T_RooftopGutters_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

























        over "mesh_F16A90105B25388C" (
            references = None
        )
        {
            def Xform "ref_a632b8676cdf4bb4b2a8f6d33a708147" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/SM_Prop_C17_TV_Monitor.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "tv_002"
                        {
                            float3 xformOp:rotateXYZ = (-90, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_C17_TV_Monitor_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/textures/SM_Prop_C17_TV_Monitor_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/textures/SM_Prop_C17_TV_Monitor_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/textures/SM_Prop_C17_TV_Monitor_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/textures/SM_Prop_C17_TV_Monitor_01_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_33BD2A48EE96792B" (
            references = None
        )
        {
            def Xform "ref_743a821064744737bee518965f620d63" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/SM_Prop_C17_TV_Glass.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "tv_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "TV_Prop_Monitor_Glass_001"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.5 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/textures/SM_Prop_C17_TV_Glass_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:thin_wall_thickness = 1.3 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                            dictionary soft_range = {
                                                float max = 1
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled material thickness"
                                        doc = "Simulated thickness for thin-walled materials (0 disables thin-walled mode)"
                                        hidden = false
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_TV_Monitor/textures/SM_Prop_C17_TV_Glass_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9BDC5C70B17320E6" (
            references = None
        )
        {
            def Xform "ref_56bf328c158d4ae8bc38bdf1bf72cae6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_ShelfUnit01a/SM_Prop_C17_ShelfUnit01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shelfUnit01a_04_low"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "Cube_040__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_ShelfUnit01a/textures/SM_Prop_C17_ShelfUnit01a_01_low_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_ShelfUnit01a/textures/SM_Prop_C17_ShelfUnit01a_01_low_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_ShelfUnit01a/textures/SM_Prop_C17_ShelfUnit01a_01_low_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_ShelfUnit01a/textures/SM_Prop_C17_ShelfUnit01a_01_low_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5483A11AFF18DC6C" (
            references = None
        )
        {
            def Xform "ref_41125d907ef4468195deb4fc84a776e5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Lamp001a_Set/SM_Prop_C17_Lamp001a_Base.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Lamp001a_Base"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Lamp_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Lamp001a_Set/textures/SM_Prop_C17_Lamp001a Set_Lamp_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C29E7B5CE092897A" (
            references = None
        )
        {
            def Xform "ref_30ce2e30f9654ad788d1b3d5ecad60e4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Lamp001a_Set/SM_Prop_C17_Lamp001a_Shade.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_C17_Lamp001a_Shade"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "Cylinder_002"
                            {
                                uniform bool doubleSided = 1
                            }
                        }

                        over "Looks"
                        {
                            over "Lamp"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Lamp001a_Set/textures/SM_Prop_C17_Lamp001a Set_Lamp_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "LampShade"
                            {
                                over "Shader"
                                {
                                    float inputs:subsurface_measurement_distance = 0.21 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 16
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Subsurface"
                                        displayName = "Measurement Distance"
                                        doc = """The distance between front and back surface of subsurface materials in millimeter, or the thickness of the surface. (Used if no texture is specified).
This parameter is unused."""
                                        hidden = false
                                    )
                                    color3f inputs:subsurface_single_scattering_albedo = (0.53, 0.45, 0.29) (
                                        customData = {
                                            float3 default = (0.5, 0.5, 0.5)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Subsurface"
                                        displayName = "Single Scattering Albedo"
                                        doc = """The color of light that most easily passes through the material after a single time scattering inside volume. (Used if no texture is specified).
This parameter is unused."""
                                        hidden = false
                                        renderType = "color"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_09CAEA5199360065" (
            references = None
        )
        {
            def Xform "ref_cd5a6385de6d4566ac1b5cc692464313" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/SM_Props_C17_Playground_TeeterTotter_Seat.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "polySurface1582__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Normal_DirectX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_547F965FA7499113" (
            references = None
        )
        {
            def Xform "ref_f8c2dc33fd2b4a98a9a3a5c14e38c9b6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/SM_Props_C17_Playground_TeeterTotter_Stand.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "polySurface1590__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Normal_DirectX_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_Teetertotter/textures/lambert1SG_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DB9E226853000CDD" (
            references = None
        )
        {
            def Xform "ref_4c07c7d2ae20419ba92c82d0bbf45cef" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/SM_Prop_C17_Playground_JungleGym_A.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Playground_JungleGym_Set_A"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Playground_JungleGym_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ABD7A91CE6B7DC52" (
            references = None
        )
        {
            def Xform "ref_77e58d468ff7471da24fb332287a725e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/SM_Prop_C17_Playground_JungleGym_B.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Playground_JungleGym_Set_B"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "Playground_JungleGym_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Playground_JungleGym_Set/textures/SM_Prop_C17_Playground_JungleGym_Set_Low_Playground_Junglegym_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_821C5DD31B284E4D" (
            references = None
        )
        {
            def Xform "ref_e08ebcaf738f4ba792bf08971e107545" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/SM_Prop_BSPmesh_Trainstation_02_Fence_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_02_Fence_01"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_BSPmesh_Trainstation_02_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/textures/T_M_Prop_BSPmesh_Trainstation_02_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/textures/T_M_Prop_BSPmesh_Trainstation_02_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_70FE7A0E88974718" (
            references = None
        )
        {
            def Xform "ref_9f0d6df5cd6f48d2be4a4800ca09dcb0" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/SM_Prop_BSPmesh_Trainstation_02_Fence_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_02_Fence_02"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_BSPmesh_Trainstation_02_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/textures/T_M_Prop_BSPmesh_Trainstation_02_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/textures/T_M_Prop_BSPmesh_Trainstation_02_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B3FF3B0D055F38D0" (
            references = None
        )
        {
            def Xform "ref_dcec90f2e672481a9b72021ec3daf6cd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/SM_Prop_BSPmesh_Trainstation_02_Fence_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_02_Fence_03"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "M_Prop_BSPmesh_Trainstation_02_Fence_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/textures/T_M_Prop_BSPmesh_Trainstation_02_Fence_Set_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_02_Fence_Set/textures/T_M_Prop_BSPmesh_Trainstation_02_Fence_Set_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_15C0303F36E9B875" (
            references = None
        )
        {
            def Xform "ref_8ba4606b08144e448c19ff53bbc1561d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/Prop_Trainstation_Train_003.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "train"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set1_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "wheels_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FDBD5969E2582542" (
            references = None
        )
        {
            def Xform "ref_47aab7114e5441a3b6292b416356eca7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/Prop_Trainstation_Train_003.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "train"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_02_set1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_02_set1_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_02_set1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_02_set1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "wheels_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5061C6666D8D75B7" (
            references = None
        )
        {
            def Xform "ref_c19d4498e6f0434f9e2ebe2154d936ea" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/Prop_Trainstation_Train_003.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "node_"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                        }

                        over "Looks"
                        {
                            over "train"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_03_set1_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_03_set1_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_03_set1_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_03_set1_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "wheels_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_Train_003_Set/textures/train003_01_set2_rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_50D32D680CB40244" (
            references = None
        )
        {
            def Xform "ref_13f31f06fab9472c8c70e0bfb9be7cb8" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/SM_Prop_Building_Template_Window_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Building_Template_Window_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_74D70221A79693D9" (
            references = None
        )
        {
            def Xform "ref_48a86dfb134e4e139c73d419896bc5da" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/SM_Prop_Building_Template_Window_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Building_Template_Window_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EDB39EF12CCB7D79" (
            references = None
        )
        {
            def Xform "ref_7693f48b7b3d43db952acf47dab6ead2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/SM_Prop_Building_Template_Window_bars_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Prop_Building_Template_Window_Set"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Building_Template_Window_Set/textures/Prop_Building_Template_Window_Set_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_39B7657C1A6A4544" (
            references = None
        )
        {
            def Xform "ref_ae20cab686464d2d854469fa70880847" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_03a_Set/SM_Prop_C17_Furniture_Table_03a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.41, 0.41, 0.41)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_7C49DECB8F99EB1D" (
            references = None
        )
        {
            def Xform "ref_e499f3800caf451f95a2504913aa3d11" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_03a_Set/SM_Prop_C17_Furniture_Table_03a_chunk_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.41, 0.41, 0.41)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_521AC7930F5876A2" (
            references = None
        )
        {
            def Xform "ref_b236ea312c1948c6b9dad83aa8bc78a8" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_03a_Set/SM_Prop_C17_Furniture_Table_03a_chunk_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.41, 0.41, 0.41)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_1094934930F5AE57" (
            references = None
        )
        {
            def Xform "ref_20fd9bdf8af94d1884377a3536ffeb47" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_03a_Set/SM_Prop_C17_Furniture_Table_03a_chunk_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.41, 0.41, 0.41)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_FF12C987439D0863" (
            references = None
        )
        {
            def Xform "ref_ff2891ec6b094700bd06f8cef218ba38" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_03a_Set/SM_Prop_C17_Furniture_Table_03a_chunk_05.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.41, 0.41, 0.41)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_84FAF152E0A4386D" (
            references = None
        )
        {
            def Xform "ref_279d40ed238042dba65ab57b379e1725" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_03a_Set/SM_Prop_C17_Furniture_Table_03a_chunk_shard.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.41, 0.41, 0.41)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                }
            }
        }

        over "mesh_08BD021F64DA539F" (
            references = None
        )
        {
            def Xform "ref_7263e86cea2d4bab9d3bf70745cd2515" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Bathtub/SM_Prop_C17_Furniture_Bathtub.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Bathtub"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, -90)
                            float3 xformOp:scale = (0.36351696, 0.395, 0.42)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Tub"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Bathtub/textures/SM_Prop_C17_Furniture_Bathtub_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2A2121832CD68884" (
            references = None
        )
        {
            def Xform "ref_a0d5a319d59049a2b2ab4a1b6224f160" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/LeafyPoplar.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-18.49279899683461, -14.834640930131172, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "PoplarTree"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "GroundBlendDecal"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)

                            over "GroundBlendDecalMesh_001"
                            {
                                custom bool remix_category:decal_Static = 1
                            }
                        }

                        over "Looks"
                        {
                            over "bark04"
                            {
                                over "Shader"
                                {
                                    float inputs:displace_in = 0.005 (
                                        customData = {
                                            float default = 0.05
                                            dictionary range = {
                                                float max = 0.2
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Inwards Displacement"
                                        doc = """Ratio of UV width to depth.  If the texture is displayed as 1 meter wide, then a value of 1 means it can be at most 1 meter deep.  A value of 0.1 means that same 1 meter wide quad can be at most 0.1 meters deep.
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:height_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/bark_displacement.h.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Height Map"
                                        doc = """A pixel value of 0 is the lowest point.  A pixel value of 1 will be the highest point.  A pixel of value displace_in / (displace_in + displace_out) will be the original height of the triangle.
This parameter is unused."""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "MossDecals"
                            {
                                over "Shader"
                                {
                                    float inputs:alpha_test_reference_value = 0.1 (
                                        customData = {
                                            float default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Reference Value"
                                        doc = """The value to use for alpha testing against.
This parameter is unused."""
                                        hidden = false
                                    )
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    int inputs:blend_type = 0 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Type"
                                        doc = """The alpha state blend type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "BlendType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Alpha"
                                            string options = "Alpha:0|AlphaEmissive:1|ReverseAlphaEmissive:2|Color:3|ColorEmissive:4|ReverseColorEmissive:5|Emissive:6|Multiplicative:7|DoubleMultiplicative:8"
                                        }
                                    )
                                    float inputs:reflection_roughness_constant = 0.5 (
                                        customData = {
                                            float default = 0.5
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Amount"
                                        doc = "Higher roughness values lead to more blurry reflections, use 0 for perfectly smooth.  (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A475E026DD58BA85" (
            references = None
        )
        {
            def Xform "ref_72444b29026c4bb99b51d457f857e052" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/poplar_leaves.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (1, 1, 1)
                    double3 xformOp:translate = (-18.4928, -14.83464, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "PoplarLeaves"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Leaves"
                            {
                                over "Shader"
                                {
                                    float inputs:subsurface_measurement_distance = 0.01 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 16
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Subsurface"
                                        displayName = "Measurement Distance"
                                        doc = """The distance between front and back surface of subsurface materials in millimeter, or the thickness of the surface. (Used if no texture is specified).
This parameter is unused."""
                                        hidden = false
                                    )
                                    color3f inputs:subsurface_single_scattering_albedo = (1, 0.65, 0) (
                                        customData = {
                                            float3 default = (0.5, 0.5, 0.5)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Subsurface"
                                        displayName = "Single Scattering Albedo"
                                        doc = """The color of light that most easily passes through the material after a single time scattering inside volume. (Used if no texture is specified).
This parameter is unused."""
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:subsurface_volumetric_anisotropy = 0.15 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 0.99
                                                float min = -0.99
                                            }
                                        }
                                        displayGroup = "Subsurface"
                                        displayName = "Volumetric Anisotropy"
                                        doc = """The anisotropy of the scattering phase function. 0.99 = light mostly passes straight through (forward), 0 = light spreads a lot (diffuse), -0.99 = light mostly reflects (backward).
This parameter is unused."""
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9B3537A070574087" (
            references = None
        )
        {
            def Xform "ref_f48aef22a07e45679c574a689d563a4e" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightTowerCluster_Set/SM_Prop_Trainstation_LightTowerCluster.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 90)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "SM_Prop_Trainstation_LightTowerCluster_01"
                            {
                                over "Shader"
                                {
                                    float inputs:emissive_intensity = 8 (
                                        customData = {
                                            float default = 40
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Intensity"
                                        doc = "Intensity of the emission"
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightTowerCluster_Set/textures/SM_Prop_Trainstation_LightTowerCluster_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BDD671DD69580FF6" (
            references = None
        )
        {
            def Xform "ref_13a95ac4d9ec432081ab7f1eb0bdb559" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightTowerCluster_Set/SM_Prop_Trainstation_LightTowerCluster.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Trainstation_LightTower_Cluster"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 90)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_Trainstation_LightTowerCluster_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:emissive_mask_texture = @@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Trainstation_LightTowerCluster_Set/textures/SM_Prop_Trainstation_LightTowerCluster_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3635967F306D6C4C" (
            references = None
        )
        {
            def Xform "ref_47bef1663715455197e207cc550cea0f" (
                prepend references = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/SM_prop_BSPmesh_3_c17_10b_fence Set_005.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_prop_BSPmesh_3_c17_10b_fence_Set_005"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_prop_BSPmesh_3_c17_10b_fence_Set_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Metalic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DE41000196E0FF95" (
            references = None
        )
        {
            def Xform "ref_7eeb6ea58d884febb15d16370d3ba410" (
                prepend references = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/SM_prop_BSPmesh_3_c17_10b_fence Set_001.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_prop_BSPmesh_3_c17_10b_fence_Set_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_prop_BSPmesh_3_c17_10b_fence_Set_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_001_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_001_Metalic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_001_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_001_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6C1B8D0498757AB3" (
            references = None
        )
        {
            def Xform "ref_656c1e590861439384c55218076a2f81" (
                prepend references = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/SM_prop_BSPmesh_3_c17_10b_fence Set_004.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_prop_BSPmesh_3_c17_10b_fence_Set_004"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_prop_BSPmesh_3_c17_10b_fence_Set_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Metalic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_98FE7C3200EFB450" (
            references = None
        )
        {
            def Xform "ref_aa4acaf3496844e590458d40b1ae527b" (
                prepend references = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/SM_prop_BSPmesh_3_c17_10b_fence Set_003.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_prop_BSPmesh_3_c17_10b_fence_Set_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 180)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "M_prop_BSPmesh_3_c17_10b_fence_Set_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Metalic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch11_followfreeman/models/SM_Prop_BSPmesh_3_c17_10b_fence_Set/textures/M_prop_BSPmesh_3_c17_10b_fence Set_003_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7BF1195FF2C34568" (
            references = None
        )
        {
            def Xform "ref_1c4ed5eeb52d40e7aae64f665776dec1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/SM_Prop_BSPmesh_MetalTruss_010b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "metalTruss010b_06"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (39.5, 39.5, 39.5)
                            double3 xformOp:translate = (10, 0, 14.2)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "metalTruss010b_06_001__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/textures/SM_Prop_BSPmesh_MetalTruss_010_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 0.25 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/textures/SM_Prop_BSPmesh_MetalTruss_010_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/textures/SM_Prop_BSPmesh_MetalTruss_010_Set_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_74E4ECFD53C67495" (
            references = None
        )
        {
            def Xform "ref_835053eee0e541a08aef6568b3fb5e67" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/SM_Prop_BSPmesh_MetalTruss_010a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "metalTruss010a_05_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }

                    over "AssetImporter"
                    {
                        over "Looks"
                        {
                            over "metalTruss010a_05_005__"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/textures/SM_Prop_BSPmesh_MetalTruss_010_Set_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 0.25 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/textures/SM_Prop_BSPmesh_MetalTruss_010_Set_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_MetalTruss_010_Set/textures/SM_Prop_BSPmesh_MetalTruss_010_Set_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DA554E2B4435B23C" (
            references = None
        )
        {
            def Xform "ref_ef315fc900b34d11b5a7e157dcbd8e0c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/SM_Prop_BSPmesh_Trainstation_Boxtower.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Trainstation_Boxtower_02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Trainstation_Boxtower_Trim_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Trimsheet_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Trimsheet_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Trimsheet_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Trimsheet_01_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Trainstation_Boxtower_Plywood"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Plywood_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Plywood_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Plywood_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Boxtower/textures/T_Trainstation_Boxtower_Plywood_01_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_107AF733471BC8E4" (
            references = None
        )
        {
            def Xform "ref_0bb004a62ae24ecda4ed9a3d8cf5d3da" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_caution_001b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (90, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (0, 0, 0)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                    }
                }
            }
        }

        over "mesh_93F728E961C24742" (
            references = None
        )
        {
            def Xform "ref_e0a3f830bf6e48c09205ec39c1e7467c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_caution_001c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_caution_001c"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_F3454118CCC27E86" (
            references = None
        )
        {
            def Xform "ref_8cf207ff5cd44873948c4343371d3006" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_caution_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_caution_002a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_1C3B755E30D98D8C" (
            references = None
        )
        {
            def Xform "ref_1dea9884082a4698a9da68395fcea2a9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_caution_002b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_caution_002b"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_2C951DF5B386E185" (
            references = None
        )
        {
            def Xform "ref_be4fa99ebffe46c783f569bc0eb8e6cf" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_68D96314346C124F" (
            references = None
        )
        {
            def Xform "ref_b0cc0eb6bd844b3992cd126ee184d081" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001b"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_96654414DA1ED8CE" (
            references = None
        )
        {
            def Xform "ref_3b86ef8884dd4b0cb977ae88c0a66293" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001c"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_9AB1F3EF60F3D259" (
            references = None
        )
        {
            def Xform "ref_e26c06a908314ba1aaadc0666897b521" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001d.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001d"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_85D3C769558AA004" (
            references = None
        )
        {
            def Xform "ref_f7d1f08efbf04df0ae2d6d7636d21c28" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001e.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001e"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_4FFA3ED910E73B0F" (
            references = None
        )
        {
            def Xform "ref_3687aa00f49c4e3aaefa7a4cc3f3d7f8" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001f.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001f"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_C6A2C13D2E331F40" (
            references = None
        )
        {
            def Xform "ref_81faba3a895a47b4a51f70fcc0da9eb1" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_001g.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_001g"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_9F7951B27789DCDD" (
            references = None
        )
        {
            def Xform "ref_4bc35ebd0543448fa455318e3176ad5a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_danger_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_danger_002a"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_78B86939A8C2056B" (
            references = None
        )
        {
            def Xform "ref_c7d9315e503b4a588931d4340ff092cf" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_icon.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_icon"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 180)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_A759A6E88ACCF3D6" (
            references = None
        )
        {
            def Xform "ref_7df2728625e04e2aa07fb9930ce3437d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_observation_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_observation_1"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 180)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, -0.6, 1.4210854715202004e-14)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_1657D8BC1D50CDC7" (
            references = None
        )
        {
            def Xform "ref_e996110ad7624f168953e5c4cb97f449" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_observation_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_observation_2"
                        {
                            float3 xformOp:rotateXYZ = (-270, -0.000005008956, 180)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (2.185587092444124e-8, -0.6, 0.2500020217895465)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }
                    }
                }
            }
        }

        over "mesh_35B3CCCC859603D2" (
            references = None
        )
        {
            def Xform "ref_d30ce59490ff45dc94838299528fcfe2" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_warning_001b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_warning_001b"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_2CD5FC8E64E222A6" (
            references = None
        )
        {
            def Xform "ref_24f3493cb52e4c39bb6c5e54ba6cf655" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Sign_Set/sign_warning_001c.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "sign_warning_001c"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                        }
                    }
                }
            }
        }

        over "mesh_2BAC10E82659B7C8" (
            references = None
        )
        {
            def Xform "ref_b2fd4b765b07470083c0c7c440a3b117" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Meter_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "gas_meter_11_meter_02_built1_pCube42_low1"
                        {
                            over "Mesh"
                            {
                                over "cover" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_2BAC10E82659B7C8/ref_b2fd4b765b07470083c0c7c440a3b117/XForms/World/gas_meter_11_meter_02_built1_pCube42_low1/Mesh/cover/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_2BAC10E82659B7C8/ref_b2fd4b765b07470083c0c7c440a3b117/XForms/World/gas_meter_11_meter_02_built1_pCube42_low1/Mesh/cover/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_2BAC10E82659B7C8/ref_b2fd4b765b07470083c0c7c440a3b117/XForms/World/gas_meter_11_meter_02_built1_pCube42_low1/Mesh/cover/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_2BAC10E82659B7C8/ref_b2fd4b765b07470083c0c7c440a3b117/XForms/World/gas_meter_11_meter_02_built1_pCube42_low1/Mesh/cover/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_plasticcover_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:thin_walled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Thin-walled"
                                                doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                                hidden = false
                                            )
                                            asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_plasticcover_Albedo.a.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Color/Diffuse Albedo Texture"
                                                doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_diffuse_layer = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Use diffuse layer"
                                                doc = "When set, simulates a diffuse layer on top of the material"
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_86933A31C79AE485" (
            references = None
        )
        {
            def Xform "ref_4ae1d3d4d6ae4d61b1848f1ee9f1db75" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Meter_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "gas_meter_01_pCylinder97_low"
                        {
                            over "Mesh_001"
                            {
                                over "cover_001" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_86933A31C79AE485/ref_4ae1d3d4d6ae4d61b1848f1ee9f1db75/XForms/World/gas_meter_01_pCylinder97_low/Mesh_001/cover_001/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_86933A31C79AE485/ref_4ae1d3d4d6ae4d61b1848f1ee9f1db75/XForms/World/gas_meter_01_pCylinder97_low/Mesh_001/cover_001/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_86933A31C79AE485/ref_4ae1d3d4d6ae4d61b1848f1ee9f1db75/XForms/World/gas_meter_01_pCylinder97_low/Mesh_001/cover_001/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_86933A31C79AE485/ref_4ae1d3d4d6ae4d61b1848f1ee9f1db75/XForms/World/gas_meter_01_pCylinder97_low/Mesh_001/cover_001/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_plasticcover_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:thin_walled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Thin-walled"
                                                doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                                hidden = false
                                            )
                                            asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_plasticcover_Albedo.a.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Color/Diffuse Albedo Texture"
                                                doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_diffuse_layer = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Use diffuse layer"
                                                doc = "When set, simulates a diffuse layer on top of the material"
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8CE69A7C79A391CE" (
            references = None
        )
        {
            def Xform "ref_8f98129dace645129d1504b6658665f9" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Meter_003a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "gas_meter_02_meter_03_built1_pCylinder265_low1"
                        {
                            over "Mesh_001"
                            {
                                over "cover_001" (
                                    prepend apiSchemas = ["MaterialBindingAPI"]
                                )
                                {
                                    rel material:binding = </RootNode/meshes/mesh_8CE69A7C79A391CE/ref_8f98129dace645129d1504b6658665f9/XForms/World/gas_meter_02_meter_03_built1_pCylinder265_low1/Mesh_001/cover_001/Looks> (
                                        bindMaterialAs = "strongerThanDescendants"
                                    )

                                    def Material "Looks"
                                    {
                                        token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_8CE69A7C79A391CE/ref_8f98129dace645129d1504b6658665f9/XForms/World/gas_meter_02_meter_03_built1_pCylinder265_low1/Mesh_001/cover_001/Looks/Shader.outputs:out>
                                        token outputs:mdl:surface.connect = </RootNode/meshes/mesh_8CE69A7C79A391CE/ref_8f98129dace645129d1504b6658665f9/XForms/World/gas_meter_02_meter_03_built1_pCylinder265_low1/Mesh_001/cover_001/Looks/Shader.outputs:out>
                                        token outputs:mdl:volume.connect = </RootNode/meshes/mesh_8CE69A7C79A391CE/ref_8f98129dace645129d1504b6658665f9/XForms/World/gas_meter_02_meter_03_built1_pCylinder265_low1/Mesh_001/cover_001/Looks/Shader.outputs:out>

                                        def Shader "Shader"
                                        {
                                            uniform token info:implementationSource = "sourceAsset"
                                            uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                            uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                            asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_plasticcover_OTH_Normal.n.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Normal"
                                                displayName = "Normal Map"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:thin_walled = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Specular"
                                                displayName = "Thin-walled"
                                                doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                                hidden = false
                                            )
                                            asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_plasticcover_Albedo.a.rtex.dds@ (
                                                colorSpace = "auto"
                                                customData = {
                                                    asset default = @@
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Transmittance Color/Diffuse Albedo Texture"
                                                doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                                hidden = false
                                                renderType = "texture_2d"
                                            )
                                            bool inputs:use_diffuse_layer = 1 (
                                                customData = {
                                                    bool default = 0
                                                }
                                                displayGroup = "Volume"
                                                displayName = "Use diffuse layer"
                                                doc = "When set, simulates a diffuse layer on top of the material"
                                                hidden = false
                                            )
                                            token outputs:out (
                                                renderType = "material"
                                            )
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1F1C26E287779796" (
            references = None
        )
        {
            def Xform "ref_7e8d49cef58c4932ba78e7043934d8cd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Meter_Pipes_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4433C3F662A3BCF8" (
            references = None
        )
        {
            def Xform "ref_212457c78c664ca0a0ca0435b3128224" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Meter_Pipes_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_97F2CD691E9A60CA" (
            references = None
        )
        {
            def Xform "ref_96665c98766545c5b9f87d8227f0cb66" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Pipes_001a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0CC8C0ED8B10B2A6" (
            references = None
        )
        {
            def Xform "ref_60d725ae88d1452fb300fc813a4e324d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Pipes_002a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9E5531D6053389EE" (
            references = None
        )
        {
            def Xform "ref_9b3f42693bca49698e1905f90f4ff580" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Pipes_003a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_13059A8A0CA69E9D" (
            references = None
        )
        {
            def Xform "ref_fc57ed5a66e64205b3519f10920372e6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Pipes_004a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F1F2C34049FACFEC" (
            references = None
        )
        {
            def Xform "ref_227d5d7599ad45fcbb9e2792a1de205d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Pipes_005a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "Default_Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2195CFC9C191A885" (
            references = None
        )
        {
            def Xform "ref_7910d6682f574090a0900d76ace185b5" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/SM_Prop_C17_Gas_Pipes_006a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GasPipeKit"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6DEC1394266352D5" (
            references = None
        )
        {
            def Xform "ref_fae85d6f96814b248f36442dce2b8992" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Timetable_Set/SM_Prop_BSPmesh_Trainstation_Timetable_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Board_low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Prop_BSPmesh_Trainstation_Timetable"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Timetable_Set/textures/T_Prop_BSPmesh_Trainstation_Timetable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8773220503672B11" (
            references = None
        )
        {
            def Xform "ref_859f37716130478f8b04b3bdcb1d382f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Timetable_Set/SM_Prop_BSPmesh_Trainstation_Timetable_02a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Board_low_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Prop_BSPmesh_Trainstation_Timetable"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_Timetable_Set/textures/T_Prop_BSPmesh_Trainstation_Timetable_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5AB6736D8FC21E05" (
            references = None
        )
        {
            def Xform "ref_b1ed8ed7d0d14dd984ea7373f024f7f6" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/SM_Prop_BSPmesh_Town_01_Railing_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Town_01_Railing_01"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Town_01_Railing_01"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D75ADCFDBD11BB9E" (
            references = None
        )
        {
            def Xform "ref_c223d977cfd246f9aadf12e2dcace596" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/SM_Prop_BSPmesh_Town_01_Railing_02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Town_01_Railing_02"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Town_01_Railing_02_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7BE1A80BCED8A19C" (
            references = None
        )
        {
            def Xform "ref_22f51ba9417044fa8516d144054dbca3" (
                prepend references = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/SM_Prop_BSPmesh_Town_01_Railing_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_BSPmesh_Town_01_Railing_03"
                        {
                            float3 xformOp:rotateXYZ = (90, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "SM_Prop_BSPmesh_Town_01_Railing_03_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Prop_BSPmesh_Town_01_Railing_Set/textures/SM_Prop_BSPmesh_Town_01_Railing_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_50CAB1761DC64E53" (
            references = None
        )
        {
            def Xform "ref_350967c0874d43fea427c9a9bbe348c6" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Antenna_Set/M_Prop_Rooftop_Antenna_03.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "lambert1"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Antenna_Set/textures/M_Prop_Rooftop_Antenna_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Antenna_Set/textures/M_Prop_Rooftop_Antenna_Metal.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Antenna_Set/textures/M_Prop_Rooftop_Antenna_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Antenna_Set/textures/M_Prop_Rooftop_Antenna_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4F26C3F8D5159B1A" (
            references = None
        )
        {
            def Xform "ref_64bf89d4df2745aeb4290ba5c18d4e04" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/metaldoor042a_window_empty.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "WoodenPiece_Low_004"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "metaldoor042a"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042a/textures/metaldoor042a_Texturing_metaldoor042a_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BA5DCDFDA7C55B6E" (
            references = None
        )
        {
            def Xform "ref_a184475fed1d4e479e4671250a9efd90" (
                prepend references = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042b/metaldoor042b.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "metaldoor042b_Pin_Locker_Low_001"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "metaldoor042b"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042b/textures/metaldoor042b_Bake_metaldoor042b_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042b/textures/metaldoor042b_Bake_metaldoor042b_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042b/textures/metaldoor042b_Bake_metaldoor042b_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_Prop_C17_Door01_Set/metaldoor042b/textures/metaldoor042b_Bake_metaldoor042b_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0DC32EE47228B00B" (
            references = None
        )
        {
            def Xform "ref_28b9a37ca58e42d5b737ca9c237c8aad" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_01/SM_Prop_Rooftop_SatelliteDish_01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Rooftop_SatelliteDish_01"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "uv_checker_material_uv_grid_4096x4096"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_01/textures/SM_Prop_Rooftop_SatelliteDish_01_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_01/textures/SM_Prop_Rooftop_SatelliteDish_01_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_01/textures/SM_Prop_Rooftop_SatelliteDish_01_Albedo_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_SatelliteDish_01/textures/SM_Prop_Rooftop_SatelliteDish_01_Albedo_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_7F57A7F809A639B5" (
            references = None
        )
        {
            def Xform "ref_ec1641cbaeb745a5a10ce9dac7ace14b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Whole.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E4169BB9A5FA18DC" (
            references = None
        )
        {
            def Xform "ref_a29e85e97ab049f095ec66498e4314ea" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Chunk_6.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_56E673ADFFE816F1" (
            references = None
        )
        {
            def Xform "ref_8f16290b04fa4954861dce16325b3b06" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Chunk_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B038672615F452B8" (
            references = None
        )
        {
            def Xform "ref_b4d05d98273044b4b38c9849e2894ba4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Chunk_5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_078859A3B328C2D6" (
            references = None
        )
        {
            def Xform "ref_4bedf767fcc64e0bb625844549893105" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Chunk_4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_376F1C95F9C77803" (
            references = None
        )
        {
            def Xform "ref_ff44821e184c442a8dca0f214d564205" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Chunk_3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C5649C5825A92F8B" (
            references = None
        )
        {
            def Xform "ref_cc5b9aaf632846b7b51a1945cbc7d62d" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/Table_Chunk_4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "Table_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Table_02a_Set/textures/Table_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_71CCEA26BAF684F8" (
            references = None
        )
        {
            over "ref_6fc057ca220b4505b6ce583b8cbe27b9"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "MossDecals"
                            {
                                over "Shader"
                                {
                                    float inputs:alpha_test_reference_value = 0.1 (
                                        customData = {
                                            float default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Reference Value"
                                        doc = """The value to use for alpha testing against.
This parameter is unused."""
                                        hidden = false
                                    )
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "bark04"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:displace_in = 0.005 (
                                        customData = {
                                            float default = 0.05
                                            dictionary range = {
                                                float max = 0.2
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Inwards Displacement"
                                        doc = """Ratio of UV width to depth.  If the texture is displayed as 1 meter wide, then a value of 1 means it can be at most 1 meter deep.  A value of 0.1 means that same 1 meter wide quad can be at most 0.1 meters deep.
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:height_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBarkCore_Displacement.h.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Height Map"
                                        doc = """A pixel value of 0 is the lowest point.  A pixel value of 1 will be the highest point.  A pixel of value displace_in / (displace_in + displace_out) will be the original height of the triangle.
This parameter is unused."""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "barkCore"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBarkCore_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:displace_in = 0.005 (
                                        customData = {
                                            float default = 0.05
                                            dictionary range = {
                                                float max = 0.2
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Inwards Displacement"
                                        doc = """Ratio of UV width to depth.  If the texture is displayed as 1 meter wide, then a value of 1 means it can be at most 1 meter deep.  A value of 0.1 means that same 1 meter wide quad can be at most 0.1 meters deep.
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBarkCore_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:height_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBarkCore_Displacement.h.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Height Map"
                                        doc = """A pixel value of 0 is the lowest point.  A pixel value of 1 will be the highest point.  A pixel of value displace_in / (displace_in + displace_out) will be the original height of the triangle.
This parameter is unused."""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBarkCore_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBarkCore_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0FEC86CF3DDB4344" (
            references = None
        )
        {
            def Xform "ref_7dd72699891c4598b581c4b3b38e4f14" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/BurningPoplar.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        float3 xformOp:rotateXYZ = (90, 0, 0)
                        float3 xformOp:scale = (1, 1, 1)
                        double3 xformOp:translate = (-17.450754464884312, 4.955983421528188, -18.81579060401151)
                        uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                        over "BurningPoplar_002"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "BurningPoplar_003"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "bark04_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Base_color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:displace_in = 0.005 (
                                        customData = {
                                            float default = 0.05
                                            dictionary range = {
                                                float max = 0.2
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Inwards Displacement"
                                        doc = """Ratio of UV width to depth.  If the texture is displayed as 1 meter wide, then a value of 1 means it can be at most 1 meter deep.  A value of 0.1 means that same 1 meter wide quad can be at most 0.1 meters deep.
This parameter is unused."""
                                        hidden = false
                                    )
                                    asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Emissive.e.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Emissive Mask Map"
                                        doc = "The texture masking the emissive color"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:enable_emission = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Emission"
                                        displayName = "Enable Emission"
                                        doc = "Enables the emission of light from the material"
                                        hidden = false
                                    )
                                    asset inputs:height_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Displacement.h.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Displacement"
                                        displayName = "Height Map"
                                        doc = """A pixel value of 0 is the lowest point.  A pixel value of 1 will be the highest point.  A pixel of value displace_in / (displace_in + displace_out) will be the original height of the triangle.
This parameter is unused."""
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Nature_Poplar/textures/BurnedBark_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3732B8C85DFC12A4" (
            references = None
        )
        {
        }

        over "mesh_E6CEB9E54BBAA54B"
        {
            over "ref_297e07a3eea145d1a1db5de103c1ba8c"
            {
                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (1.4893213311997897, 0.8598599764787878, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "FescueShort"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 9)
                            float3 xformOp:scale = (100, 100, 100)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_22AF222D93633C2C"
        {
            over "ref_0ab1c7f3b0d0455a8d2c5019fc63eb95"
            {
                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)

                    over "World"
                    {
                        over "FluffyFescueMedium"
                        {
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_505AC19BB2CA5E89"
        {
            over "ref_b9894ac5237048f4b6c718b4e78e5f06"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_D97FF2E02AF1C789"
        {
            over "ref_ffadefaf242849ee9eb38466e493ed1b"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "FluffyFescueDry"
                        {
                            over "FluffyFescueDryMesh_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (-17.406587926936453, 4.664080680039092, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }
                }
            }
        }

        over "mesh_101438BC634596C4"
        {
            over "ref_884c0dda6350441c96932166182272f0"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0B95939E3916DE4C"
        {
            over "ref_6e74b7f0f5674c2c9b25f67774fec738"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_A6BCFB3F7EE66945"
        {
            over "ref_5bf6c26e424e4890938e44e2f8829525"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "NettleTall"
                        {
                            over "NettleTallMesh_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (-19.152610173727453, -71.47851366681454, -0.000009517939792592743)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }
                }
            }
        }

        over "mesh_0A1573FF30143C0E"
        {
            over "ref_8defc4145bec48b0a4b07bcd0537f1d9"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C37559297FF54682"
        {
            over "ref_e01eeceb97b74b5294158bf6fd4e220e"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_306741CD6118C66D"
        {
            over "ref_286a5b3d42cd4fc9a3fc4589d24237e1"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "FluffyFescueShort"
                        {
                            over "FluffyFescueShortMesh_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (32.00000348411959, -55.42562427483381, -0.000007380368277854353)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4795EE38635D55A0"
        {
            over "ref_641d93450617474cbc0a6165f78dbf46"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_B3E2379DA130F335"
        {
            over "ref_23bb0049f493410aba4f1988c08607d0"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "NettleMedium"
                        {
                            over "NettleMediumMesh_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (-10.611581312470548, -39.602960274857026, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9A85250CA91CAA6D"
        {
            over "ref_ad9e12a78ea445b1a164e6d3369238fa"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_1CD95B963F8898CB"
        {
            over "ref_268e5f931dbb409eb9a08b05db8ae442"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5AFD0774367BCE1E"
        {
            over "ref_6cd898dc73f7447e9600b2da5e2b4202"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EB036C56DA74D867"
        {
            over "ref_409714f62cbf4bfbbcdda1d863495d46"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BE06F7F4C7D8B14F"
        {
            over "ref_4c09dd485524469290b5418703d970e8"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }

                        over "NettleGroundCover"
                        {
                            over "NettleGroundCoverMesh_001"
                            {
                                float3 xformOp:rotateXYZ = (0, 0, 0)
                                float3 xformOp:scale = (1, 1, 1)
                                double3 xformOp:translate = (32.35238205021494, 120.74073254529583, 0)
                                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9C1CEFF402D09863"
        {
            over "ref_b9296fc4848e460ab3728b945a743904"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8D4001445315A1D3"
        {
            over "ref_7f7c02bb530f4ae697144feff7638846"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_33ECD5D62DF0440B"
        {
            over "ref_680a06892d9745909fb54224e6a09604"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_883271D4450F816F"
        {
            over "ref_c29a8da0ac3641e08cf1116ea3fc60bc"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_ECFB60E569CE165A"
        {
            over "ref_0e6dfd7863bf4911aa7a1001b3fae3c3"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4822695596FC3E49"
        {
            over "ref_b8067f47458e40779bc337dc8e54276c"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2885E3C72E050961"
        {
            over "ref_37689a65c8784a678391b4bdf18b7481"
            {
                over "XForms"
                {
                    over "World"
                    {
                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_38FD7DF98B57C224"
        {
            over "ref_b84ff67314aa434589e0288bbc9be630"
            {
                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)

                    over "World"
                    {
                        over "FluffyFescueTall"
                        {
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_BAB3F812AC738560"
        {
            over "ref_ba1cc2b025df4df5b76b57bdd453c2d2"
            {
                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, 0)

                    over "World"
                    {
                        over "FescueDry"
                        {
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "Looks"
                        {
                            over "GrassBlade"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Normals.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch6_ravenholm/models/SM_Detail_Grass/textures/Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_FFB43A6FFAAA0A25" (
            references = None
        )
        {
            def Xform "ref_3ba2a3f348f3408d87b9e58e0d6cf225" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/Gibs_Metal_Shard_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "MetalShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 1 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_04F539045064E4F1" (
            references = None
        )
        {
            def Xform "ref_0198c42a925041349dc1389222654dcd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/Gibs_Metal_Shard_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "MetalShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 1 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_04BAF8DCD815BBDA" (
            references = None
        )
        {
            def Xform "ref_55782e97c741420d94443f7b81989adb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/Gibs_Metal_Shard_3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "MetalShards_002"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 1 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5949E8416B9419A7" (
            references = None
        )
        {
            def Xform "ref_559adba0c9cc4dd698731249a019f2e4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/Gibs_Metal_Shard_4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "MetalShards_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 1 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DF2BD47CAF64740E" (
            references = None
        )
        {
            def Xform "ref_35ddfccf5b7e4667ba839b1432bd3788" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/Gibs_Metal_Shard_5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {

                        over "Looks"
                        {
                            over "MetalShards_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_BaseColor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:metallic_constant = 1 (
                                        customData = {
                                            float default = 0
                                            dictionary range = {
                                                float max = 1
                                                float min = 0
                                            }
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Amount"
                                        doc = "How metallic is this material, 0 for not at all, 1 for fully metallic. (Used if no texture is specified)."
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Metal_Shards/textures/Gibs_Metal_Shards_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_DF41E13FE5B17165" (
            references = None
        )
        {
            def Xform "ref_b53314f10a88439d960f602f784eb546" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/SM_Prop_Junk_GlassBottle_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "CINEMA_4D_Editor"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, 0)
                            double3 xformOp:translate = (0, 0, 0)
                        }

                        over "SM_Prop_Junk_GlassBottle_01a"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                            over "SM_Prop_Junk_GlassBottle_01a"
                            {
                                uniform bool doubleSided = 0
                            }
                        }

                        over "Looks"
                        {
                            over "Label"
                            {
                                over "Shader"
                                {
                                    float inputs:alpha_test_reference_value = 0.1 (
                                        customData = {
                                            float default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Reference Value"
                                        doc = """The value to use for alpha testing against.
This parameter is unused."""
                                        hidden = false
                                    )
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_01.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Normal_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Roughness_01.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @E:/Odessa/full/hl2rtx/assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 0 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    color3f inputs:transmittance_color = (0.5439431, 1, 0.034582138) (
                                        customData = {
                                            float3 default = (0.97, 0.97, 0.97)
                                            dictionary range = {
                                                float3 max = (1, 1, 1)
                                                float3 min = (0, 0, 0)
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color"
                                        doc = "Expected transmittance after the specified transmittance distance through the volume."
                                        hidden = false
                                        renderType = "color"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_01.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_90269F144FACC87C" (
            references = None
        )
        {
            def Xform "ref_3559117bbf824f60979de3368e5f756f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/SM_Prop_Junk_GlassBottle_01a_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Label"
                            {
                                over "Shader"
                                {
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_01.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Normal_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Roughness_01.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_01.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_646E7B2651798491" (
            references = None
        )
        {
            def Xform "ref_03fdbe20feef489c8956be33abd6f4dd" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/SM_Prop_Junk_GlassBottle_01a_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Label"
                            {
                                over "Shader"
                                {
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_01.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Normal_01_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Roughness_01.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_01.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_174F6D3CF19855B8" (
            references = None
        )
        {
            def Xform "ref_5b2067933b4846679ccf76d6f4e86aeb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/SM_Prop_Junk_GlassBottle_01a.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_GlassBottle_01a"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Label"
                            {
                                over "Shader"
                                {
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Normal_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Roughness_02.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_582813175B85ECA1" (
            references = None
        )
        {
            def Xform "ref_90e07dc242194b0abba10899e7325845" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/SM_Prop_Junk_GlassBottle_01a_Chunk01.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.01, 0.01, 0.01)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Label"
                            {
                                over "Shader"
                                {
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Normal_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Roughness_02.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_AC60F7254550A04C" (
            references = None
        )
        {
            def Xform "ref_2dbdd03b5a1a4ddea830b43550ec2ef4" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/SM_Prop_Junk_GlassBottle_01a_Chunk02.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Junk_GlassBottle_01a_Chunk02"
                        {
                            float3 xformOp:rotateXYZ = (90, 0, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (-1.8189894035458565e-12, 0, 1.5504497227024387)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Label"
                            {
                                over "Shader"
                                {
                                    int inputs:alpha_test_type = 4 (
                                        customData = {
                                            int default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Alpha Test Type"
                                        doc = """The alpha state alpha test type to use.
This parameter is unused."""
                                        hidden = false
                                        renderType = "AlphaTestType"
                                        sdrMetadata = {
                                            string __SDR__enum_value = "Always"
                                            string options = "Always:0|Never:1|Less:2|Equal:3|LessOrEqual:4|Greater:5|NotEqual:6|GreaterOrEqual:7"
                                        }
                                    )
                                    bool inputs:blend_enabled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Blend Enabled"
                                        doc = "Indicates if alpha state blending should be enabled."
                                        hidden = false
                                    )
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Normal_02_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Roughness_02.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_legacy_alpha_state = 0 (
                                        customData = {
                                            bool default = 1
                                        }
                                        displayGroup = "Alpha Blending"
                                        displayName = "Use Legacy Alpha State"
                                        doc = "Indicates if the alpha state should be driven by the game itself, or overridden by this material."
                                        hidden = false
                                    )
                                }
                            }

                            over "Glass"
                            {
                                over "Shader"
                                {
                                    float inputs:ior_constant = 1.2 (
                                        customData = {
                                            float default = 1.3
                                            dictionary range = {
                                                float max = 3
                                                float min = 1
                                            }
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Index of Refraction"
                                        doc = "Index of Refraction of the material"
                                        hidden = false
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_GlassBottle_003a_Set/textures/T_Prop_Junk_Garbage_GlassBottle_003a_Glass_Normal.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    float inputs:transmittance_measurement_distance = 5 (
                                        customData = {
                                            float default = 1
                                            dictionary range = {
                                                float max = 65504
                                                float min = 0.001
                                            }
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Measurement Distance"
                                        doc = "Distance to match the transmittance through the volume at."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_GlassBottle_01a_Set/textures/SM_Prop_Junk_GlassBottle_01a_Diffuse_02.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3FC7D3F6FD85BC3E" (
            references = None
        )
        {
            def Xform "ref_4efaa068f4584dcf9e370736f33fb339" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/SM_Prop_C17_PushBroom.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pushbroom_sheet"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "Material_001"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_Color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2B7D04BFA02F98E3" (
            references = None
        )
        {
            def Xform "ref_b71f455c8100432db2b97f23bbdacd41" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/SM_Prop_C17_PushBroom_Physics.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "pushbroom_sheet"
                        {
                            float3 xformOp:rotateXYZ = (-16, 0, 90)
                            float3 xformOp:scale = (1, 1, 1)
                            double3 xformOp:translate = (51, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Material"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_Color.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_PushBroom/textures/T_Prop_C17_PushBroom_Roughness.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_C1AA090B74A53EBD" (
            references = None
        )
        {
            def Xform "ref_49b8587eda40403b87d3a510f8ba45cb" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/SM_Prop_Interiors_Refrigerator.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "SM_Prop_Interiors_Refrigerator"
                        {
                            float3 xformOp:rotateXYZ = (0, 0, -90)
                            float3 xformOp:scale = (0.395, 0.395, 0.395)
                            double3 xformOp:translate = (0, 0, 0)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "Map1"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/textures/SM_Prop_Interiors_Refrigerator_Fridge_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }

                            over "Map2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/textures/SM_Prop_Interiors_Refrigerator_Doors_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_EBB72D90E476036A" (
            references = None
        )
        {
            def Xform "ref_bac9863ff4ce4cca8946a2fb5bc9f061" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/SM_Prop_Interiors_Refrigerator_Door_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Map2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/textures/SM_Prop_Interiors_Refrigerator_Doors_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_8E6045A04864E8B4" (
            references = None
        )
        {
            def Xform "ref_d6c76e77a6684066b9aded45011cc301" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/SM_Prop_Interiors_Refrigerator_Door_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Map2"
                            {
                                over "Shader"
                                {
                                    asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Interiors_Refrigerator_Set/textures/SM_Prop_Interiors_Refrigerator_Doors_Metallic.m.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Metallic Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_310934B40B772640" (
            references = None
        )
        {
            def Xform "ref_b57a0783a1664232b0d31ae26e4e8650" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Bag/SM_Prop_Junk_Garbage_Bag.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "bake_low"
                        {
                            float3 xformOp:rotateXYZ = (0, -90, 0)
                            float3 xformOp:scale = (0.01, 0.01, 0.01)
                            double3 xformOp:translate = (6.932584104173657, -1.8189894035458565e-12, 1.9895196601282805e-13)
                            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
                        }

                        over "Looks"
                        {
                            over "default"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Bag/textures/T_Prop_Junk_Garbage_Bag_Albedo.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Bag/textures/T_Prop_Junk_Garbage_Bag_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Junk_Garbage_Bag/textures/T_Prop_Junk_Garbage_Bag_Rough.r.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Roughness Map"
                                        doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5F8EB2D7445C1157" (
            references = None
        )
        {
            def Xform "ref_c76dafb739b543468f51bdebb9f7b8f7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "glass_gibs"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9391DAF59ED17F29" (
            references = None
        )
        {
            def Xform "ref_0e6cc89065434572abdedd38e747515b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "glass_gibs_003"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_539BD4C7CDFD68C0" (
            references = None
        )
        {
            def Xform "ref_cd9934f7d7464abfbd1decd284c8567f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "glass_gibs_004"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_9FD68FC2BF181941" (
            references = None
        )
        {
            def Xform "ref_70bb6f0b72e947388357d884d4d3f9d3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "glass_gibs_010"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_79EA4C86EA3BEE24" (
            references = None
        )
        {
            def Xform "ref_cac624b2559f47fb8fb138bf8a20290c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "glass_gibs_009"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_529806258BAB2D93" (
            references = None
        )
        {
            def Xform "ref_58f2741de6d1477ba3cf67d6a444e42f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_6.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "glass_gibs_012"
                            {
                                over "Shader"
                                {
                                    asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Normal"
                                        displayName = "Normal Map"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:thin_walled = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Specular"
                                        displayName = "Thin-walled"
                                        doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                        hidden = false
                                    )
                                    asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Transmittance Color/Diffuse Albedo Texture"
                                        doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                    bool inputs:use_diffuse_layer = 1 (
                                        customData = {
                                            bool default = 0
                                        }
                                        displayGroup = "Volume"
                                        displayName = "Use diffuse layer"
                                        doc = "When set, simulates a diffuse layer on top of the material"
                                        hidden = false
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_E4172017AF0E8988" (
            references = None
        )
        {
            def Xform "ref_84f76df74521460d8c67487b6dd70afa" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Glass_Shards/glass_gibs_7.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "mesh"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)

                            over "mesh_015" (
                                prepend apiSchemas = ["MaterialBindingAPI"]
                            )
                            {
                                rel material:binding = </RootNode/meshes/mesh_E4172017AF0E8988/ref_84f76df74521460d8c67487b6dd70afa/XForms/World/mesh/mesh_015/Looks> (
                                    bindMaterialAs = "strongerThanDescendants"
                                )

                                def Material "Looks"
                                {
                                    token outputs:mdl:displacement.connect = </RootNode/meshes/mesh_E4172017AF0E8988/ref_84f76df74521460d8c67487b6dd70afa/XForms/World/mesh/mesh_015/Looks/Shader.outputs:out>
                                    token outputs:mdl:surface.connect = </RootNode/meshes/mesh_E4172017AF0E8988/ref_84f76df74521460d8c67487b6dd70afa/XForms/World/mesh/mesh_015/Looks/Shader.outputs:out>
                                    token outputs:mdl:volume.connect = </RootNode/meshes/mesh_E4172017AF0E8988/ref_84f76df74521460d8c67487b6dd70afa/XForms/World/mesh/mesh_015/Looks/Shader.outputs:out>

                                    def Shader "Shader"
                                    {
                                        uniform token info:implementationSource = "sourceAsset"
                                        uniform asset info:mdl:sourceAsset = @AperturePBR_Translucent.mdl@
                                        uniform token info:mdl:sourceAsset:subIdentifier = "AperturePBR_Translucent"
                                        asset inputs:normalmap_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_normal_OTH_Normal.n.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Normal"
                                            displayName = "Normal Map"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        bool inputs:thin_walled = 1 (
                                            customData = {
                                                bool default = 0
                                            }
                                            displayGroup = "Specular"
                                            displayName = "Thin-walled"
                                            doc = "Whether the material is thin-walled, use when material is being applied to single triangle thick geometry."
                                            hidden = false
                                        )
                                        asset inputs:transmittance_texture = @./assets/ch9_novaprospekt/materials/glass/M_Glass_Window_007_Set/glasswindow020a_glass_basecolor.a.rtex.dds@ (
                                            colorSpace = "auto"
                                            customData = {
                                                asset default = @@
                                            }
                                            displayGroup = "Volume"
                                            displayName = "Transmittance Color/Diffuse Albedo Texture"
                                            doc = "Texture map for either the transmittance color of the material, or the albedo color of the diffuse layer"
                                            hidden = false
                                            renderType = "texture_2d"
                                        )
                                        token outputs:out (
                                            renderType = "material"
                                        )
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_933C26FFB91C8A20" (
            references = None
        )
        {
            def Xform "ref_0d1707187e0342988aea4c84d8029c30" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard1"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2C2E8AD246D6ECA6" (
            references = None
        )
        {
            def Xform "ref_e16944774089478da09b5b8432918bd7" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Shard2"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }
                }
            }
        }

        over "mesh_490FD616877C4349" (
            references = None
        )
        {
            def Xform "ref_d42f25132c404f7f8cedc5ae29144286" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Shard3"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }
                }
            }
        }

        over "mesh_7E364E68BFCF5F58" (
            references = None
        )
        {
            def Xform "ref_cb68bd7db9774264a71c99d5155c5507" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard4"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }
                }
            }
        }

        over "mesh_E1555C44146123C1" (
            references = None
        )
        {
            def Xform "ref_1d371c300cbb426aa150f0df581eec9f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard5"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }
                    }
                }
            }
        }

        over "mesh_F45F40948EACEE3E" (
            references = None
        )
        {
            def Xform "ref_ee05c37fc3bf4b74a44d15011f4bf251" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard1"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_2.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_4B4DECB9716688B8" (
            references = None
        )
        {
            def Xform "ref_cb5a81ea75c44273b1c891424c350479" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Shard2"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_2.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_2E6CB07DB0CC2757" (
            references = None
        )
        {
            def Xform "ref_bf9d9e931c8d40aaa4b192db75ef73a3" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Shard3"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_2.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_19552803887F3B46" (
            references = None
        )
        {
            def Xform "ref_e3b207c768ff457489cb43012ab24854" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard4"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_2.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_86363A2F23D147DF" (
            references = None
        )
        {
            def Xform "ref_fffc922a1f2e4772a88fddc9ef2fbbfa" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard5"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_2.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_825E6643AFBF4F92" (
            references = None
        )
        {
            def Xform "ref_42597fa80faa485dab70e66969609020" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard1.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard1"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_3.a.rtex.dds@ (
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_3D4CCA6E50752914" (
            references = None
        )
        {
            def Xform "ref_cf14dd6d29fe4b2a8b77b67e3a04717b" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard2.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Shard2"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_3.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_586D96AA91DF86FB" (
            references = None
        )
        {
            def Xform "ref_cf3b746a9dd342a3b4b89a7a4d94288f" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard3.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "Shard3"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_3.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_6F540ED4A96C9AEA" (
            references = None
        )
        {
            def Xform "ref_b1d8deed1a734ebe8ab7750835507f6a" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard4.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard4"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_3.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_F0371CF802C2E673" (
            references = None
        )
        {
            def Xform "ref_31e249ebd1c0489cba79558cfb10f082" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/shard5.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    over "World"
                    {
                        over "shard5"
                        {
                            float3 xformOp:rotateXYZ = (0, -0, 0)
                            float3 xformOp:scale = (1, 1, 1)
                        }

                        over "Looks"
                        {
                            over "WoodShards"
                            {
                                over "Shader"
                                {
                                    asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Gibs_Wood_Shards/textures/WoodShards_BaseColor_3.a.rtex.dds@ (
                                        colorSpace = "auto"
                                        customData = {
                                            asset default = @@
                                        }
                                        displayGroup = "Base Material"
                                        displayName = "Albedo/Opacity Map"
                                        doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                                        hidden = false
                                        renderType = "texture_2d"
                                    )
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_5235CD5D62F53F1E" (
            references = None
        )
        {
            def Xform "ref_f4ce5f6f569f420fbed8360006ca99cc" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Dome_04/SM_Prop_Rooftop_Dome_04.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (90, 0, 0)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "M_Prop_Rooftop_Dome_04"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Dome_04/textures/SM_Prop_Rooftop_Dome_04_color.a.rtex.dds@
                                    custom asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Dome_04/textures/SM_Prop_Rooftop_Dome_04_metal.m.rtex.dds@
                                    custom asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Dome_04/textures/SM_Prop_Rooftop_Dome_04_normal_OTH_Normal.n.rtex.dds@
                                    custom asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Rooftop_Dome_04/textures/SM_Prop_Rooftop_Dome_04_rough.r.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }

        over "mesh_494BF5DC831516D0" (
            references = None
        )
        {
            def Xform "ref_2176c4d45a2046488a56fedf7c82de7c" (
                prepend references = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_04_Gangplank/SM_Prop_BSPmesh_Trainstation_04_Gangplank.usd@
            )
            {
                custom bool IsRemixRef = 1
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                over "XForms"
                {
                    float3 xformOp:rotateXYZ = (0, 0, -90)
                    float3 xformOp:scale = (0.395, 0.395, 0.395)
                    double3 xformOp:translate = (0, 0, 0)
                    uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]

                    over "World"
                    {
                        over "Looks"
                        {
                            over "Gangplank"
                            {
                                over "Shader"
                                {
                                    custom asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_BSPmesh_Trainstation_04_Gangplank/textures/Gangplank_Metallic.m.rtex.dds@
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    over "Looks"
    {
        over "mat_9A281907350F6492" (
            references = @./materials/AperturePBR_Translucent.usda@</Looks/mat_AperturePBR_Translucent>
        )
        {
        }

        over "mat_48A8CC756637E849"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Bedframe_Set/textures/prison_bedframe001a_Base_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Bedframe_Set/textures/prison_bedframe001a_Metallic.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Bedframe_Set/textures/prison_bedframe001a_Normal_OpenGL_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_Wasteland_Prison_Bedframe_Set/textures/prison_bedframe001a_Roughness.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_05B07AC66C4EEBBC"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Dresser/textures/furnituredresser001a_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Dresser/textures/furnituredresser001a_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Dresser/textures/furnituredresser001a_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Furniture_Dresser/textures/furnituredresser001a_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }





        over "mat_C5293430D029F7D8"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_head_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_head_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_head_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_head_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_7E876F95D0E23787"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_tail_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_tail_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/ring_cables_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/combine_scanner_tail_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_64C62248829DAEFD"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/ring_cables_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 5 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/ring_cables_selfillum.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/ring_cables_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/ring_cables_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/ring_cables_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_1D741E042DC50AA3"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_balls_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 5 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_balls_selfillum.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_balls_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_balls_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_AD72135ADDE1053F" (
            references = @./materials/AperturePBR_Translucent.usda@</Looks/mat_AperturePBR_Translucent>
        )
        {
            over "Shader"
            {
                float inputs:emissive_intensity = 0.01
                asset inputs:emissive_mask_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Color Texture"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }

        over "mat_CCE967BADDD0D941"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_retina_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 5 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_retina_selfillum.e.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emissive"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emissive"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_retina_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Scanner/textures/scanner_retina_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }


        over "mat_CF3C1C165C68892C"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Soldier/textures/combine_captain_boots_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Soldier/textures/combine_captain_boots_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Soldier/textures/combine_captain_boots_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Soldier/textures/combine_captain_boots_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_DDA10E7A12D1F58C"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_combine_color.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                float inputs:emissive_intensity = 20 (
                    customData = {
                        float default = 40
                        dictionary range = {
                            float max = 65504
                            float min = 0
                        }
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Intensity"
                    doc = "Intensity of the emission"
                    hidden = false
                )
                asset inputs:emissive_mask_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_base_selfillum.e.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = "The texture masking the emissive color"
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 1 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = "Enables the emission of light from the material"
                    hidden = false
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_combine_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_BA369D71BD323D65"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_blades_blur01.a.rtex.dds@ (
                    colorSpace = "sRGB"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_blades_blur01_metal.m.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_blades_blur01_normal_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SK_NPC_Combine_Manhack/textures/manhack_blades_blur01_rough.r.rtex.dds@ (
                    colorSpace = "raw"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_222E8E1A7F61C7CB"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_FB183A1A2E53EFE6"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Diffuse"
                    displayName = "Albedo Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Normal"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Specular"
                    displayName = "Roughness Map"
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

        over "mat_0EB6C7FF282EBE79"
        {
            over "Shader"
            {
                asset inputs:emissive_mask_texture = @@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Emission"
                    displayName = "Emissive Mask Map"
                    doc = """The texture masking the emissive color

"""
                    hidden = false
                    renderType = "texture_2d"
                )
                bool inputs:enable_emission = 0 (
                    customData = {
                        bool default = 0
                    }
                    displayGroup = "Emission"
                    displayName = "Enable Emission"
                    doc = """Enables the emission of light from the material

"""
                    hidden = false
                )
            }
        }



        over "mat_FF9462AE0DC42AD8"
        {
            over "Shader"
            {
                asset inputs:diffuse_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Albedo.a.rtex.dds@ (
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Albedo/Opacity Map"
                    doc = "The texture specifying the albedo value and the optional opacity value to use in the alpha channel"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:metallic_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Metal.m.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Metallic Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:normalmap_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_OTH_Normal.n.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Normal Map"
                    hidden = false
                    renderType = "texture_2d"
                )
                asset inputs:reflectionroughness_texture = @./assets/ch1_pointinsertion/models/SM_Prop_C17_Gas_Meter_Pipe_Set/textures/T_GasPipeKit_Rough.r.rtex.dds@ (
                    colorSpace = "auto"
                    customData = {
                        asset default = @@
                    }
                    displayGroup = "Base Material"
                    displayName = "Roughness Map"
                    doc = "A single channel texture defining roughness per texel.  Higher roughness values lead to more blurry reflections."
                    hidden = false
                    renderType = "texture_2d"
                )
            }
        }

    }

    over "cameras"
    {
        over "Camera"
        {
            matrix4d xformOp:transform = ( (-0.11864013340719223, 0.9929373186385457, 2.570331073632401e-9, 0), (-0.5873230613029573, -0.0701757171481012, 0.8063045270767493, 0), (0.8006098553020904, 0.09566007514959575, 0.5915006421091406, 0), (-4297.015361306917, -1025.783708599919, -4.190127577789675, 1) )
        }
    }
}

over "OmniverseKit_Persp"
{
    custom uniform vector3d omni:kit:centerOfInterest = (0, 0, -2755.432115537663)
}

