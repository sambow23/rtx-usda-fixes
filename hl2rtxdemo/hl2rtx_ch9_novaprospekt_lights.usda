#usda 1.0
(
    upAxis = "Z"
)

over "RootNode"
{
    over "meshes"
    {

    }

    over "lights"
    {
        over "light_2E6B5F0680CD1AD4"
        {
            float inputs:exposure = 0
            float inputs:intensity = 0
            float inputs:shaping:cone:angle = 70
            float inputs:shaping:cone:softness = 0.5
            float inputs:volumetric_radiance_scale = 0.5 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.
This can be used to enhance the god-rays coming from this light.
Not physically accurate."""
            )
            matrix4d xformOp:transform = ( (0.9829629125780865, 0.017037083260360606, 0.18301270526929056, 0), (0.017037083260359895, 0.9829629209011918, -0.18301266056581156, 0), (-0.18301270526929064, 0.1830126605658115, 0.9659258334792785, 0), (-1385, 2841, 496, 1) )

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.98239523
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.3311073624483925, -1.8047919312061822, 10.995186319362347)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.92399335, 0.41514808)
                float inputs:exposure = 6
                float inputs:intensity = 20
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 89
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.
This can be used to enhance the god-rays coming from this light.
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (0, -28.819521726692415, -39.879588558817204)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_314833806C3B4044"
        {
            float inputs:exposure = 6
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.98239523
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, -45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.53108608636262, -4.457728482287621, 3.6392732326145847)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.92399335, 0.41514808)
                float inputs:exposure = 6
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 89
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_2752DDECF3C53DB5"
        {
            float inputs:intensity = 2
            float inputs:radius = 4
            float inputs:shaping:cone:angle = 180
            float inputs:shaping:cone:softness = 0
            float inputs:shaping:focus = 0
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            matrix4d xformOp:transform = ( (1, 0, 0, 0), (0, 1, 0, 0), (0, 0, 1, 0), (-1848, 2360, 342, 1) )
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale", "xformOp:transform"]

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:intensity = 75
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 60
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (37.678417469953274, 1.725267947643573, 84.52046898673069)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.9021164494279219, 1.0913936421275139e-11, 10.968831954887946)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_3CF1125DC6D1E6C0"
        {
            float inputs:intensity = 5
        }

        over "light_D0E81E0990A6BABB"
        {
            color3f inputs:color = (0.45, 0.8967655, 1)
            float inputs:exposure = 6
            float inputs:intensity = 500
            float inputs:radius = 4
            float inputs:shaping:cone:angle = 32
            float inputs:shaping:cone:softness = 0.4
            float inputs:shaping:focus = 1
            float inputs:volumetric_radiance_scale = 2 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_36EF614C3C5702A9"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.27902472, 0.5743016, 1)
                float inputs:height = 60
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 50
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 20
                double3 xformOp:rotateXYZ = (0, -90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (11.110789956873305, 6.366462912410498e-11, 7.958078640513122e-12)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_C6DBB4BBA88F2218"
        {
            float inputs:intensity = 0
            float inputs:radius = 4
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            matrix4d xformOp:transform = ( (0.9999999999999983, 1.9017934909691836e-8, -3.294002981423177e-8, 0), (1.901793490969181e-8, 0.5000000067305894, 0.8660253998985312, 0), (3.2940029814231836e-8, -0.8660253998985312, 0.5000000067305888, 0), (-2136.0000000000055, 2522.199411330015, 617.0000000000078, 1) )
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale", "xformOp:transform"]

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.93227684, 0.41514808)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 2
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.0532403393881395e-7, -2.76900798582642, 4.796062431959172)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.93227684, 0.41514808)
                float inputs:exposure = 6
                float inputs:height = 5
                float inputs:intensity = 10
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 0
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.
This can be used to enhance the god-rays coming from this light.
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (-35.3978094694327, -9.800503164569818e-7, -8.918114531297761e-7)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (5.868969310540706e-9, -1.2119045751505837, 2.5064191898040917)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_DCB8ECE9F2B951D2"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.27902472, 0.5743016, 1)
                float inputs:height = 60
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 50
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 20
                double3 xformOp:rotateXYZ = (0, -90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (13.347785718059185, 9.549694368615746e-12, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_FC484B248413AAFB"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.48, 0.651, 0.8)
                float inputs:exposure = 0
                float inputs:height = 500
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 5.6843418860808015e-11, -187.28280763232158)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_4B95EAB3963228D4"
        {
            float inputs:intensity = 0
        }

        over "light_C0DA9F6B85F413C9"
        {
            float inputs:intensity = 0
        }

        over "light_6E87A5CEA8249C0A"
        {
            color3f inputs:color = (0.50579154, 0.7082055, 1)
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.50579154, 0.7082055, 1)
                float inputs:height = 150
                float inputs:intensity = 0.1
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 300
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_5E7A9AA99D49C918"
        {
            float inputs:intensity = 1

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:intensity = 55
                float inputs:length = 60
                float inputs:radius = 1.2
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.98239523
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.302437340200413e-7, -0.005144600557287049, 2.98107966015516)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_43BC159D8585076D"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.98239523
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.0231815394945443e-12, 1.2033160601276904e-7, -1.5814154804891132)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.93227684, 0.41514808)
                float inputs:exposure = 6
                float inputs:height = 5
                float inputs:intensity = 5
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 20
                double3 xformOp:rotateXYZ = (-75, -0.0000055664051785697666, 90.00000017063923)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.403578211099557, 3.704963091877289e-7, -3.4666082773790095)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_148EB5D5E571541F"
        {
            float inputs:exposure = 8
            float inputs:intensity = 500
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.6
            float inputs:volumetric_radiance_scale = 1 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 493.70682
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 200 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (59.27812724613804, 12.800823425227833, 186.98070455859875)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-52.92715501048656, 311.0132048606124, -225.4078343106994)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_77215BE04282A8CE"
        {
            color3f inputs:color = (0.34012094, 0.8761406, 1)
            float inputs:exposure = 2
            float inputs:intensity = 10000
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.6
        }

        over "light_987C806E16DF3176"
        {
            float inputs:intensity = 5000
            float inputs:shaping:cone:angle = 55
            float inputs:shaping:cone:softness = 1
            float inputs:shaping:focus = 0
            float3 xformOp:rotateXYZ = (0, 0, 0)
            float3 xformOp:scale = (1, 1, 1)
            matrix4d xformOp:transform = ( (0.6760706183484227, 6.707329178050654e-15, -0.736836833366779, 0), (-5.605246709708625e-8, 0.9999999999999971, -5.142986570011649e-8, 0), (0.7368368333667765, 7.607174346366667e-8, 0.6760706183484205, 0), (-2067, 3097, 489, 1) )
            float3 xformOp:translate = (0, 0, 0)
            uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale", "xformOp:transform"]

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.98239523
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.7670475275060653, 1.8928039935417473e-7, -1.0810120980327156)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_54C6C945FDB0FA7E"
        {
            color3f inputs:color = (0.34012094, 0.8761406, 1)
            float inputs:exposure = 8
            float inputs:intensity = 500
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.6
            float inputs:volumetric_radiance_scale = 0.25 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 300
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 50 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (51.29888243581209, -37.714542711598114, 341.1330654249716)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-112.44555924934366, -317.21564757675424, -162.29878200420103)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_3C9DB6B64C717C0E"
        {
            color3f inputs:color = (0.34012094, 0.8761406, 1)
            float inputs:exposure = 8
            float inputs:intensity = 500
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.6
            float inputs:volumetric_radiance_scale = 0.25 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_2CE59601712A7C22"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:intensity = 25
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.98239523
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (5.4569682106375694e-12, -5.6843418860808015e-12, 1.6342806301711903)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.93227684, 0.41514808)
                float inputs:exposure = 6
                float inputs:height = 5
                float inputs:intensity = 10
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (58, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.6692548585856457, -3.410605131648481e-12, -2.2737367544323206e-13)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_52A6D4C025888942"
        {
            float inputs:intensity = 523

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:intensity = 25
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus = 0
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 8.185452315956354e-12, 1.5916234808418608)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_EDE34D7F52C00740"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 0
                float inputs:intensity = 25
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus = 0
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -1.9099388737231493e-11, 1.4368521553697065)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.93227684, 0.41514808)
                float inputs:exposure = 6
                float inputs:height = 5
                float inputs:intensity = 10
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (58.709151186063536, 0, -90.00000000000006)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.571645740641543, -8.86757334228605e-12, 1.1368683772161603e-12)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_C57D8753D81A860E"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:intensity = 25
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-7.587686923216097e-8, -0.5, -1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_950D1D1A7427701C"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:intensity = 25
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-6.979962563491426e-8, -0.5, -1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_E91E7719034A7DF7"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.5986293980311075, 3.637978807091713e-12, -1.0497804806009299)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_BB3B78BE519A5A4D"
        {
            color3f inputs:color = (0.34012094, 0.8761406, 1)
            float inputs:exposure = 8
            float inputs:intensity = 75
            float inputs:shaping:cone:angle = 35
            float inputs:shaping:cone:softness = 0.2
            float inputs:volumetric_radiance_scale = 0.5 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
            )
        }

        over "light_A206550E33A61988"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.222042556037195e-8, 0.11231629653048003, -0.4191701250956612)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (-50.521083593343235, -0.000001874755952258056, -0.0000010280776336912822)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (7.316884875763208e-8, 4.475028597580149, -5.127261567124151)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_62A634D1F057A523"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.3401209, 0.8761406, 1)
                float inputs:height = 60
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 20
                double3 xformOp:rotateXYZ = (90, 90, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_17AE49170F1A1A18"
        {
            float inputs:intensity = 6

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.3401209, 0.8761406, 1)
                float inputs:height = 60
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 20
                double3 xformOp:rotateXYZ = (90, 90, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_18BED68050395B1B"
        {
            float inputs:intensity = 6

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.3401209, 0.8761406, 1)
                float inputs:height = 60
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 20
                double3 xformOp:rotateXYZ = (90, 90, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_63851DF7A5A289F2"
        {
            float inputs:exposure = 6
            float inputs:intensity = 0
            float inputs:shaping:cone:angle = 180
            float inputs:shaping:cone:softness = 2

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 1.4824794200479232)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 179
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_A6BF893D41EB9F55"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 1.5
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-9.094947017729282e-13, 0, 1.5635950741647235)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_0F728ADBE4289709"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.126388037344441e-13, 2.000888343900442e-11, -1.3556701239403992)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (61.326056656215485, 2.842170943040401e-14, 90.00000000000006)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.71388448409661, -1.000444171950221e-11, -7.514107385527495)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_7F3C8F38A30DB561"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (8.526512829121202e-13, 2.7284841053187847e-11, -0.5155675715759571)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (68.43179281660326, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.7714842384490623, 3.637978807091713e-12, -6.704857989456286)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_E7FED41421E0E931"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.5597015590174124e-7, -5.968558980384842e-13, -1.3667634074363377)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 55
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 75
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
                )
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (2.2441988959475623, -71.41449935442603, 87.63246154459148)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.0000014649745025963057, -0.2965614655187778, -7.830566463542709)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_9F756BB1E0EF8888"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (8.982169674709439e-8, 0.7870161562850626, 1.363151944638048)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 4
                float inputs:height = 10
                float inputs:intensity = 4
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (30.12965731492457, 0.000002405852910669637, -0.0000024004147576306423)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-3.552172529452946e-7, -5.360664090577302, -3.111176575243917)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_EE89D02B303B405A"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (8.360029823961668e-8, 0.7326339606092915, 1.2689592203405482)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 4
                float inputs:height = 10
                float inputs:intensity = 4
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (30.12, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -5.36, -3.1111)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_B592977C3FE58471"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 684.0041
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 200 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-90.60284850352764, 0, -186.2334059601668)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_736B63D48DF3074B"
        {
            float inputs:intensity = 0
        }

        over "light_F6831DBBD8253EB3"
        {
            float inputs:intensity = 0
        }

        over "light_F89A8301C1C516D2"
        {
            float inputs:intensity = 0
        }

        over "light_D0A521C8F7205816"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.0718849807744846e-8, -6.821210263296962e-13, -0.28185680239039357)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (-59.88852636403686, -0.0000029711787306041515, -7.992236135123676e-7)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4.597973202180583e-7, 2.037536819875612, -5.924309226073092)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_C8075D221635D464"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 55
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 88.99999
                float inputs:shaping:cone:softness = 0.9
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, -45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.6098643891837128, 2.13068179756101, 7.232188570527917)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.92399335, 0.41514805)
                float inputs:exposure = 6
                float inputs:intensity = 50
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_FBF43B4E4A70CCE2"
        {
            float inputs:intensity = 0
        }

        over "light_871E74B33921CBB8"
        {
            float inputs:intensity = 20000
            float inputs:radius = 1.5
            matrix4d xformOp:transform = ( (0.97607130009341, 0.08930310523911393, -0.19826692242684357, 0), (0.08930310523911379, 0.6667163432831583, 0.739942074079982, 0), (0.19826692242684363, -0.739942074079982, 0.6427876433765684, 0), (-2921, 1240, 240, 1) )
        }

        over "light_8AD0F11C0AA643A8"
        {
            color3f inputs:color = (0.34012094, 0.8761407, 1)
            float inputs:intensity = 20000
            float inputs:radius = 1.5
        }

        over "light_DADA28568465E696"
        {
            float inputs:intensity = 20000
            float inputs:radius = 1.5
        }

        over "light_C63853A119F943EC"
        {
            float inputs:exposure = 8
            float inputs:intensity = 500
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.6
            float inputs:volumetric_radiance_scale = 0.5 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_519D8BBE50AF428A"
        {
            float inputs:exposure = 8
            float inputs:intensity = 500
            float inputs:shaping:cone:angle = 40
            float inputs:shaping:cone:softness = 0.75
            float inputs:volumetric_radiance_scale = 0.25 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_1C77190FCAB579A8"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.8
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 60
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_2C9EA40C29D9CDC9"
        {
            float inputs:exposure = 6
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.340121, 0.87614065, 1)
                float inputs:exposure = 0
                float inputs:intensity = 750
                float inputs:radius = 16
                float inputs:shaping:cone:angle = 39.999996
                float inputs:shaping:cone:softness = 0.21210319
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.5 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_878FCB4137A9B37E"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.9391304, 0.3695652)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.8
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 60
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_CCF9889ED8D4647D"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.9391304, 0.3695652)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.8
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 60
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_7E6C4C0D60130724"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.40084386, 1, 0.8354431)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 0.8
                float inputs:shaping:cone:angle = 87
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 60
                double3 xformOp:rotateXYZ = (0, 0, -90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_8212CD3226E64290"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (1.247668022915633, -0.000009155944809435823, 90.00000048818998)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.5085756582795682, -3.8931352719373535e-7, 0.6091114237294732)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.50579154, 0.7082055, 1)
                float inputs:height = 300
                float inputs:intensity = 0.05
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 400
                double3 xformOp:rotateXYZ = (-90, -0.0000023721333093362773, 89.9999985234719)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-41.82872836528952, -558.9166825809384, -90.92396051086837)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 300
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 30 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (90, 0, -90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-410, 300, 230)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_A3903ED20E7C7960"
        {
            float inputs:exposure = 8
            float inputs:intensity = 100
            float inputs:shaping:cone:softness = 0.5
            float inputs:volumetric_radiance_scale = 5 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
            matrix4d xformOp:transform = ( (0.7500000266350983, -0.24999999769839498, -0.6123724040142193, 0), (-0.24999999769839495, 0.7499999779681091, -0.6123724636188648, 0), (0.6123724040142192, 0.6123724636188648, 0.5000000046032075, 0), (-652, 3224, 490, 1) )
        }

        over "light_E78BE756A9B97189"
        {
            float inputs:exposure = 8
            float inputs:intensity = 20
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.2
            float inputs:volumetric_radiance_scale = 5 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_F15E7116F89BC2B7"
        {
            float inputs:intensity = 0
            float inputs:volumetric_radiance_scale = 1 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.9239933, 0.4151481)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, -45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.6637626953989866, 1.9642598573093437, 3.8399406336735638)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.9239933, 0.4151481)
                float inputs:intensity = 1000
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 75
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.75 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (1, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_726CA76533C46B59"
        {
            float inputs:intensity = 0
            float inputs:volumetric_radiance_scale = 1 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.9239933, 0.4151481)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.725344761980523, -1.7253447619705184, 3.855373252862705)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.9239933, 0.4151481)
                float inputs:intensity = 1000
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 75
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.75 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_816CA4B42A3E8F9B"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (5.368923104044683, 30.005710237344715, 10.089257365985702)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.08188285220920477, -0.27321604759663387, -0.33944783095057574)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:intensity = 1374.6273
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 60
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_C2B83535FB829EFB"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (95.94521479392881, -23.398275841711097, 72.7052951529848)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.15835758580351467, 0.11433647094008847, -0.36634573428409567)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_00C9F420FAF05D17"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (1.805733518267516e-8, 0, -0.47494091236376335)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.32, 0.52, 0.8)
                float inputs:height = 900
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 30 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (-90, 0.0000012615537627880258, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (349.5306408183808, 163.22345976348498, -252.7851429575253)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-45, -60, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_B86BB95F2ABC363D"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-6.885445353758115, -25.51639619550278, 14.012026546648542)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.06719986837146052, 0.19398929885073812, -0.23278714820708046)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_6D843955E0A23AFD"
        {
        }

        over "light_5C66D0511F2FAE9B"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.8489528)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (30, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (7, 0, -5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_1763142CA6749300"
        {
            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 875
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 30 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (160, -30, 180)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_CFEB66AE729E4003"
        {
            float inputs:volumetric_radiance_scale = 6 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_5D79F1720A7F3482"
        {
            float inputs:volumetric_radiance_scale = 6 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_706C0F395AC146BC"
        {
            float inputs:volumetric_radiance_scale = 3 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_9E5944EA6B51635F"
        {
            float inputs:volumetric_radiance_scale = 3 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_C794250733A4DC67"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.9239933, 0.41514814)
                float inputs:exposure = 6
                float inputs:height = 55
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (0.0000022617994090978755, -34.1231492272035, -0.000003011086846527178)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.6349919048730044, 2.0044399207108654e-7, -4.563939774859591)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.9239933, 0.41514814)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.7327018857397434, 5.5739747040206566e-8, -1.2690768701289699)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_A2A07564EC8EAE47"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 20, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.4910504110537204, -9.094947017729282e-13, 5.388131656990424)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (-90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_2462421A1B0FFDC9"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (21, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -2.1, 5.3)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (91, 0, -180)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -2.1)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_E97736F2C8670064"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -2, 5.3)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (90, 0, -180)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_AA0E7D402E297EBA"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 2, 5.3)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -2)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_8E15881E642C0D79"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (0, -90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 20, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (2.5, 0, 11)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_ED654687DCDC43D3"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, -20, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.5, 0, 11)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_E47BE3C7CD1F653B"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7072569, 0.32316306)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, -20, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.5, -4.547473508864641e-12, 11)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_9155623EDA7C0A35"
        {
            float inputs:exposure = 6
            float inputs:intensity = 50
            float inputs:radius = 4
            float inputs:shaping:cone:softness = 0.2
            float inputs:shaping:focus = 1
        }

        over "light_856A1B9FED745948"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.9239933, 0.41514814)
                float inputs:exposure = 6
                float inputs:height = 55
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (0.0000016441628929442231, -34.12, -0.0000022777080346259027)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.63, 1.3633064099849435e-7, -4.5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.9239933, 0.41514814)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.7406059859914649, 5.633819455397315e-8, -1.2827671731056398)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_B3FB252BB030A369"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 89
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, -28, -45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -8.406905762489828)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_B99473DCA62E0CE0"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.25, 0, -0.5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:height = 55
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (0, 30, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (5.5, 0, -5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_F108A852888B91AD"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.8
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -0.47494)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-45, -60, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_BB8B3D78CC9A6F90"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 0.98
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:height = 10
                float inputs:intensity = 1
                float inputs:shaping:cone:angle = 85
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 0.25 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 55
                double3 xformOp:rotateXYZ = (30, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (7, 0, -5)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_8A3F0F715F0617AB"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7809492, 0.45739338)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -2.491, 5.388)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7809492, 0.45739338)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (-90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_BF7B2FADE68E6BE7"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7809492, 0.45739338)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -2.491, 5.38813)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7809492, 0.45739338)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.3
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_6060275DE3ACAC56"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7809492, 0.45739338)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 2.49, 5.38)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_301AD1F0BB5872E8"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 10
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 89
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, -28, -45)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -8.4)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_A5F66061572594B5"
        {
            color3f inputs:color = (0.34012094, 0.87614065, 1)
            float inputs:exposure = 8
            float inputs:intensity = 80
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.2
            float inputs:volumetric_radiance_scale = 0.25 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_C5792A02DDA66F6C"
        {
            float inputs:intensity = 1

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 100
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, -110)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 100
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 318.869040959391, -110)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 100
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 644.4542488457516, -110)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 124.77997
                float inputs:intensity = 0.2
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 254.22008
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 942.0021173306889, -110)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_04" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.060000002, 0.117341, 0.2)
                float inputs:height = 150
                float inputs:intensity = 0.2
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 70
                double3 xformOp:rotateXYZ = (90, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -338.6962865391175, -235.30018683936976)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_A6DE36D04D2B36A4"
        {
            float inputs:intensity = 0
        }

        over "light_4C7C4FB136B30A1E"
        {
            float inputs:intensity = 0
        }

        over "light_B5D17A28B0EE5EFC"
        {
            color3f inputs:color = (0.060000002, 0.117341, 0.2)
            float inputs:intensity = 0
        }

        over "light_3F909352323270DE"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.1041265679523349e-9, -0.2743843101548009, -0.07352104586061614)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 4
                float inputs:height = 55
                float inputs:intensity = 4
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.2714082231468637e-8, -6.568892252286332, -1.2953116439016412)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_D86C05A3178CC204"
        {
            float inputs:exposure = 1
            float inputs:intensity = 2500
            float inputs:shaping:cone:softness = 0
        }

        over "light_3CC15FC573E1D2EA"
        {
            float inputs:exposure = 8
            float inputs:intensity = 200
            float inputs:shaping:cone:angle = 30
            float inputs:shaping:cone:softness = 0.5
            float inputs:volumetric_radiance_scale = 0.5 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_0864DB069736EA2F"
        {
            color3f inputs:color = (0.340121, 0.87614065, 1)
            float inputs:exposure = 6
            float inputs:intensity = 200
            float inputs:shaping:cone:softness = 0.2

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.48000002, 0.61333495, 0.8)
                float inputs:height = 100
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (-11.997687822958824, 0.2756244250959412, -8.038730888730043)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-10.448080474796882, 36.40845457970636, -186.94498757469825)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.48000002, 0.6133344, 0.8)
                float inputs:height = 100
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (-11.997687822958824, 0.2756244250959412, -8.038730888730043)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-66.0855178290995, -367.67271347068663, -100.26808643214304)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_02" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.48000002, 0.61333454, 0.8)
                float inputs:height = 100
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (-11.997687822958824, 0.2756244250959412, -8.038730888730043)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-101.08845360747074, -617.536073113614, -41.539081716886756)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_03" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.48000002, 0.61333454, 0.8)
                float inputs:height = 100
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 20 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 150
                double3 xformOp:rotateXYZ = (-11.997687822958824, 0.2756244250959412, -8.038730888730043)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-133.49953392946998, -863.2460364623738, 14.184663522571554)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_574A02BC45E81C7A"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.77128714, 0.3)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (86.28204217320922, -23.492662576260926, 98.41598604242631)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-1.1817858479888628, 0.19199668453067886, -0.8285005479199299)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.77128714, 0.3)
                float inputs:exposure = 2
                float inputs:intensity = 2500
                float inputs:radius = 2
                float inputs:shaping:cone:angle = 60
                float inputs:shaping:cone:softness = 0.25
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-4.6704642543869, 0.758778465336178, -3.274266822853633)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_E658E4DFEDCCBE69"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-0.11669245085676039, 2.5421741156606004e-8, -0.43550215540921045)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:height = 55
                float inputs:intensity = 0.5
                float inputs:shaping:cone:angle = 70
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (0.000009671647234199554, -59.71866268302958, -0.000010386163410203153)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.735345411579374, 6.517346946566249e-7, -6.51573377307983)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_70DB084218E093A2"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, -2.49, 5.38)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (-60, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_6CA0681732BEDCC2"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-20, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 2.59, 5.38)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 0.3
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (0, 60, -90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_EF65DC7753C33B63"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.70725685, 0.32316306)
                float inputs:exposure = 4
                float inputs:intensity = 0.3
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 100 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                double3 xformOp:rotateXYZ = (139.39675916624026, 48.81264345581522, 40.60324078607766)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (35.68305391930551, 0.0000029697784782456438, -0.0000026889111097716523)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.005202415806707e-7, -3.5266023470475716, 4.951618590639782)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_71891290C36685C2"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.7581395, 0.35000002)
                float inputs:intensity = 500
                float inputs:radius = 3
                float inputs:shaping:cone:angle = 75
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def SphereLight "SphereLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.7581395, 0.35000002)
                float inputs:intensity = 150
                float inputs:radius = 2.5
                float inputs:shaping:cone:angle = 180
                float inputs:shaping:cone:softness = 4
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 180, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 1.2812091204131661)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_54B168374FA73004"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 0.5
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 20, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 2.5, 5.38)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 0.1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, -60, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.86, 0.91, 0.94)
                float inputs:height = 50
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 30 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 180
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (154.2327150572504, -372.70563208338524, 61.85358149294325)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.86, 0.91, 0.94)
                float inputs:height = 50
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 30 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
                )
                float inputs:width = 180
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (154.23271505723903, -710.8727469169975, 61.85358149294325)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_33FDEEA987B1BF9C"
        {
            float inputs:exposure = 6
            float inputs:intensity = 70
            float inputs:shaping:cone:angle = 40
            float inputs:shaping:cone:softness = 0.2
        }

        over "light_05C682B2C524942D"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 2
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 21, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 2.38, 5.3)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (-60, 0, 180)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_33BC33793C8BFE5B"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 2
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 20, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 2.38, 5.3)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 60, -90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_61002BFCFB95A6F5"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (8.222696123993956e-8, -2.413027267054133, -1.1016193372539647)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_7C055E8DA8697328"
        {
            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (0.51314175, 1, 0.84895283)
                float inputs:exposure = 6
                float inputs:intensity = 0.05
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (8.469191925541963e-8, -2.3406874125508352, -1.2198599665790653)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.86, 0.91, 0.94)
                float inputs:height = 100
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 350
                double3 xformOp:rotateXYZ = (28.32686188689067, 2.910410046297329e-7, 0.0000010260172018661251)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-235.37244548213152, 218.53476865198735, 6.226372388858181)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_5CAC2543F1B95708"
        {
            float inputs:intensity = 0

            def CylinderLight "CylinderLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -5), (5, 5, 5)]
                color3f inputs:color = (1, 0.77128714, 0.3)
                float inputs:exposure = 6
                float inputs:intensity = 2
                float inputs:length = 52
                float inputs:radius = 1.5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (90, 0, 45.0656974774883)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0.009893074536648783, -0.00887805556993726, 10.559953818986287)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.77128714, 0.3)
                float inputs:exposure = 2
                float inputs:height = 55
                float inputs:intensity = 250
                float inputs:shaping:cone:angle = 65
                float inputs:shaping:cone:softness = 1
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 10
                double3 xformOp:rotateXYZ = (0, -10, -44.99999999999997)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 1.7053025658242404e-13, 8.895091606817118)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.86, 0.91, 0.94)
                float inputs:height = 100
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 200
                double3 xformOp:rotateXYZ = (90, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (404.3855771829749, -100.95410075520644, -48.53665181968324)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_ECED073402BBD811"
        {
            float inputs:intensity = 25000
            float inputs:volumetric_radiance_scale = 0.25 (
                doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r\r\r
This can be used to enhance the god-rays coming from this light.\r\r\r
Not physically accurate."""
            )
        }

        over "light_39111CB080109F66"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 1
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 80
                float inputs:shaping:cone:softness = 0.5
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (20, 0, -90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-2.5, 0, 5.38)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def DiskLight "DiskLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (1, 0.71, 0.32)
                float inputs:exposure = 6
                float inputs:intensity = 0.25
                float inputs:radius = 5
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness = 2
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 90, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_5D5FCA79FDC03726"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.41555387, 1, 0.93634737)
                float inputs:intensity = 100
                float inputs:radius = 4
                float inputs:shaping:cone:angle = 69.99999
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_0508B32D9EAF5AC9"
        {
            float inputs:intensity = 0

            def DiskLight "DiskLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.6599567, 1, 0.90349424)
                float inputs:intensity = 50
                float inputs:radius = 16
                float inputs:shaping:cone:angle = 69.99999
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                double3 xformOp:rotateXYZ = (0, 0, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 0, 0)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_33299EF9ED550742"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.3401209, 0.67986053, 1)
                float inputs:height = 60
                float inputs:intensity = 4
                float inputs:shaping:cone:angle = 60
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 40
                double3 xformOp:rotateXYZ = (0, -30, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (4, 0, 4)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }

            def RectLight "RectLight_01" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.3401209, 0.67986053, 1)
                float inputs:height = 60
                float inputs:intensity = 4
                float inputs:shaping:cone:angle = 60
                float inputs:shaping:cone:softness = 0
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 40
                double3 xformOp:rotateXYZ = (0, -30, 0)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (3.9999999999986358, -256.05262043725133, 4.0000000000027285)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_EC706854124DD6E4"
        {
            float inputs:intensity = 0
        }

        over "light_5816D0EDC49EF308"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.3401209, 0.67986053, 1)
                float inputs:height = 60
                float inputs:intensity = 4
                float inputs:shaping:cone:angle = 60
                float inputs:shaping:cone:softness
                float inputs:shaping:focus = 1
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:width = 40
                double3 xformOp:rotateXYZ = (0, -30, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (0, 4, 4)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_8095BB071F4DD38B"
        {
            float inputs:intensity = 0
        }

        over "light_C293EBD725AE68FB"
        {
            float inputs:intensity = 0

            def RectLight "RectLight" (
                prepend apiSchemas = ["ShapingAPI"]
            )
            {
                float3[] extent = [(-5, -5, -0), (5, 5, 0)]
                color3f inputs:color = (0.32, 0.516599, 0.8)
                float inputs:height = 684.0041
                float inputs:intensity = 0.25
                float inputs:shaping:cone:angle = 90
                float inputs:shaping:cone:softness
                float inputs:shaping:focus
                color3f inputs:shaping:focusTint
                asset inputs:shaping:ies:file
                float inputs:volumetric_radiance_scale = 10 (
                    doc = """Multiplies how bright this light seems to volumetric mediums like fog or suspended dust.\r
This can be used to enhance the god-rays coming from this light.\r
Not physically accurate."""
                )
                float inputs:width = 130
                double3 xformOp:rotateXYZ = (0, 0, 90)
                double3 xformOp:scale = (1, 1, 1)
                double3 xformOp:translate = (-97.91879150616978, 0, -187.3053327806059)
                uniform token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
            }
        }

        over "light_98236E5970DBFE5F"
        {
            float inputs:intensity = 0
        }

        over "light_1C07E277F304B777"
        {
            float inputs:intensity = 0
        }

        over "light_6793B98C661D5A1B"
        {
            float inputs:intensity = 100
        }
    }

    over "Looks"
    {
    }
}

over "OmniverseKit_Persp"
{
    float focalLength = 8
}

over "Viewport_Waypoints"
{
    over "Waypoint_GameCam" (
        active = false
    )
    {
    }

    def "Waypoint_GameCam_01"
    {
        custom string camera:path = "/OmniverseKit_Persp"
        custom string comment = ""
        custom string created = "2024-08-14 22:31:46"
        custom string created_by = "cchwo"
        custom float frame = 0
        custom float3 icon_position = (-1872.226, 2327.2444, 684.72363)
        custom string omni:baked_preview = "zTE\"rl=o\\O&GatVDB7JZ.]&ifuHJ>_,8MQD/#\\Js':sN4L/a&[G%_Yf5h;Oka@EtEj^O\"`/KE;K'A\\2S]X<0\\=$kiSF:T,c4S].\\@\\\"#8K<c[>O[V-Fs(%YfJb#cerWG\\$E^0.H=AslV8R$DE\"<bflMRC]G\"8p\\/4.[9+Pe;.+E'gu6FHW\\:7=Y=,e9W?snna^Hpo!!h*Wfj]\"q=-X57e`t9Y@CcITdK5@l@I(/4(]42WOGS3gO)>)W,E%B]#d<n@,7'b=JaTaPenTP6W<C]9r0q'elcRLm#R[k,JHn,&fstdY*iaW1mI0?%.RMGm92UE52t=\"qAZI0>:RqUk9u8g8#G44V*aJI`5fYZSqR&i9sb8hb%<A+$-J_B=X^T`jikS^f%aWX5i?Ele\\&5u@dYo/p4F*$Ddgc#F70.^>;c.2i%A4h$`c^8=#Gp.RWr]3cLPTCo%FZS*g3-r2^RWNIS?5rnQP^;Ufab,;Og)Gg6Ic/<\\%ac=dl*XMIZRF=3<gdBh)`G4FKs>\\%P6^h^[](eo-/B*n3,o&)4\\^b;$&[.5iNM!0s#e;f,63Q1c'mXIErDa8.bRR)W?S?al<WQlf8o@b[NB)W*J.PnkFu*m&hThGQ=(]m`RuT;u?UKD3Z@;tP:Sb*8PCp.6RDT=4NTY8$N_034_aGdOK>ja7pi%SP^lb(IO\\JoI(ZK39mq.@>gS!]0TO4>,'*.E`/!l2IEf:\\PHJjEo*WeLVGl5OuHV`*_kD+Yu+$T&m&1D<cT3NOQj`)a,t<Q!c;^>.HAC6\\coc^No[j_\\W4es%hr)f41At,%L@_.1RR+-AT@2kUV\"fDY+gQLrI@>)RCp;+,\"L-$bmp(>3'7)iN,7h]fKQ2[2tste)tJL$\\-e^28Gj9NSf@=q`^^Dhr=CVIp:H_0>^o2T/)dm1K>0p=4&T^Oa&&C<m/-]KSL.hMn&oKBGh5qgK(W<O?=+kY/'MA+*lh;i.:6C*-6tM\\liS;aJ6RX`FZ5)gbE/rf**Z%rRj5'4>,TBFLqbG!)M/J,QFgEn(kr*rLXW7RDH2H?Y'^sGKKfu&sL8/oA+VUZ^d1nlA,$XK<%f\\J(HfT@0I3O,'dQR*67t78%`2CJ]l@&c0TR#bSW'=m`\"A<0oFduAf:@'29HBHp&MARojW>6H$ul!%l)]E@UH=`q<m3kZs8doq(d>YD_ll#rne$CT!DJ\\/]I'&jD7K\"U,#7\\LffQ5#ME,H-1UXlpq'?\"_#oP9H]-(WYKZ>rJ<)I4SH\"E>8N^c\\bdAu*0lo?fRnGH6CkAVhMo9Ro=DSAk2&fUSrpkM*j)OF:`*hY[f)$r#M8a3&k-:;257qsN:RpHr)17224d=:&)uGT[3UigWR&GbV?5Y:p6H9Hq@u[n\"j)<.ehd,tLHkoJX]rAq\\jF]m1&FYN>H<!+\\@kdA0L\\'D$FoK[lne_+.S[VH)AgVA4kW9jLM[q$*0#@.8_*qfEo`KL!,1R=Y/g*V:A18;3)rZJYW&NR!$sqjqUR(Ja7dPJX245?Mi8kC_h8]D8N&]\"+,%f2kP63:afkOa$,JIkr+Z2\\g8!ZO=IT@D-/@N4<50$h+oj4$T5`3\\?9V!uWA3(NKprd(rlnt!^q=/nGs-#3IE=$WP<,!b-/`EPS+4',-fVCJgG_86+Mr,M8L[f`-k>4Q0`(^#l.ti.s%=Dcor:*g5A+o]0lfmdZY\"RR(&+\"9W=Kjen=]bf*bD<4YK,*O0@e#V-i4UGd,cF.:p6KO=jdaZJ)XY&c8@.J7aP1%F+)QF;d+0^iLHk*W29TDYk-<nq'PYdNC(TO2+gJRWPQ0*9o!cj@e`QI9<H[<)5FVbX,*it*k8'H&<g#bP)t@!Di3NY!`*kOQpe*?L-ZPDSF5q+9Nk[;,Ve'!WY#/OBK/bM9q?,O@oD9tU/=,bOEr%k![e3,*]Wi9=/8n*e[/&U\"^*;pKs&fQ,>T\\#>a<\"I7>S-n$a`G_Cp$dTFo71kq\"FEjOO(5!JH0fBbnN\"?3>PqiLJLf``UC>-^k1l>/n&07ZE0e=@P//p1'.]%-<k!QWZ$\"$U3*]-3(iB5`fi)ls?45a2=S^-\\%S6-!-(a*V2+U!f+nc+-mYb$ULIHW9dlQ*]jgNYPQ-LZ>F&=Le-eV^nMXW`>W`,?cIh*0@>b^tHrO`s'akj>HSip,3O09gT?dbG&*&+#Y52rckZ$-f#*[!'g:`TW2\\CUuSHO&F%58G$N?^5si;X<<uXt\"eb=^B;03Z;XX_O@YlM#C>s+*4FE=F!J&bg']Q_-m.8+'`4aeHa9WfcFTK89nTq)5Ee>>V@YQY<V13K2q$;*^oO\"4Kk$O43@(*#:e]J<5Dlu>Q]1;`5=c@>`8QAC'JLt*V%!]mrc%Bp0lgtqhSmt7L:R>\"+=PKr]7^:.XUU@[p3rk>Lr.hb[QS/0:Bo]S1T\"/G[\"Jh#2'4h7HKX-KGEn_hF#M8#;MS;Vrb#Udo+3`$2*ce5lJ:prYFa>ZSC).*p7DZ;kk7`=<$c/C=%RD]&.#fI6OX68odIoQ_XDFH8-\"]ad=Uf^4nuoGN\\Y'/&@`:UjdM=:?QtB@ZaX!*Z2[c3r8Z\\1sUZcAfpsDQp(!`o\"Bjo7SeG/CLUc\"f!`9f\\KLX?.3<]rh_0DpM8X5qDj0VnDG<Of0jr=6:A\\?h4h_QdSmdas@#pR`:\\-bNKmbZG5cTU=?VNZu`8#_/]lu6M++0.F;[+<p8Y9/aDai@&=S@.8[`3jN>&Cca6S7,W3m=@<W3J>AYceJD3H$9bD+qX3)$X;C\"5CCHW_KiYY\"E'tc>f(@,OY<^<=c!SXReE!\".RL'_[QGgn#Ht>XjIsI=sII7p8o-7p='0hr]2:l8Q-[4l.LH')L36J?VB[NEp1I*^3X6YlKUuo`^.!+_nOaRg8N-nmmPFdo_akYkPS+\"r]DRr#\"d]^J\\T`u0M\"Au!h30@hTo)<RFnkD\\I=W+/q^huO2ig!B?*/!4*I<(f+>(DqjUP\\R#C`<*eQAkAD60:GcoRF/dm0^Lqun*eGaR7p'H.$jsb(_mL)kHAIkScN&*Y\\jA6`TR\\Zr'cDa<Mrb#`cRs7Thkh6]oqLS2b?;oiGcc4V2nht\"gR6U71mCu1EW3rksa`(M9hK1Cl#:[.&gs`-JZ4)14:%::\\\\>8tUqE5\"0/lBih3eJ8;hO=0Xg38BhhJ=Y'0C#n-s2M@Q_Qc&&GukXFQ';3f.W`qt5'X_qS<*;;Q4u-\"T>l.*#@,QIr`qhG6%'#$2gqj!oC\\>2of^K&F!qCE!c)4+`F2iVLs\\426X,G[oNh)\\@I/W<j+F^mY:tUiFZ&R&nE4*o%e3l%7h]QSYSiF_aES`q(2DX,BPm*^Ts&b$58f+&o&OkWqR<6tooqBRlU;ejQqON247]6uh`h\\Oke<@AT*^RE^G1dd8;r;E(Y^cY9[=6`i,us\\m8JufF[e;.'9mkeA5SCM:ZI2\\qs)JZ)s;[ae)Lh+r]m,dD3\\eYA&XIZ,e.nqikF;ue@bNrY(XRe4>&0p_pnQfi'-e5=etisggfc@N,NdO6-PqD>&0ZHbTkHTj+!N<s\"`K-rB:?;$p/G[Aq(L9ZW\\/<5GtK'FH`-:ffCL\\8^n9e?FFToo==Te?Ceq0br@lM9Y)j\"Hd_Qb/Z9it*Ui#,37WY$I,VL+EEt]'^pQ_&5C;Y(:n@n6%/LT`\\bAesV\"$J31P7Mj;5SUEU%DqhpjX'H-T\\]=rL+n9>A<bu^I\"\\KFbS<)EVkac[`.-\\<PKRO?HpS4U>3YQqUXp,EGp_].l+QLo`sT)F4a^U3^[Xg)XFor9%ggH4VrqF^r;6d\\=e-Jr\\u\"%20DS/hP\\)s)Cg*YF]R?+Sfar.r&)<\"ZRZBpb+`e0r\".YcGYOTU^qLV\":\"\"r8A35Od*Z4BoNCC(<J[-$E&qd-bb1&AM.?Cni%VEb9\\PE2I,e6)Ue[Osq1+,]cQRTqH*W=l+$q->(4Kr;.%f]&m]8\"hS`/hTmlNE]\\EF5jfEto7AC]%E`Y%?[6r#BduH.uM81j-RRrFUA*OnY]e6^e*hm,)COo#5np:SY2OE\\*!\\#LGW<G<[b)h-Z/N$e4X?q#if47rr0:$YQG/Ltc&p5(bnA,qh,o?$jdmbjD7Z,M#i87InNfo3L)0^=KmP7h!6R;?$r\\@&hmi%U$`C:ZH[\\#DR<9NoYjL]pb8:-d&+T5gC+;7Euc!DloK6?uXN=.:@G\\LJ^7qZO\\\\YGM1(CkKNOd3t@U[(Z!f5EWiLu1Rr*#Qm8V`bCOV7;;WnoR'88DMKkXU=2jlQjSV49&'K0f+8K3@\\H#snlgn5J*Tt[HK,O^7W3UTjQW9+Cb#.$9hH+-hH_;SV(;S^WbFkF+U@k^KNG'>+i\\<J4';:l)_K3/!%![KZMg[8Apg1lYnrNomV^entd\"iFmh\\thVjGO+POEmW]NULkYnj4D8lcWD%hj3#_6//a91`\"^(J&f)Bc,H^rLRuenJe&KH-1O9Y',f)^X,[DhRLAs%HOZnQr0I9*)bYA?QC>fP)Ab]R<RcI+oj(2Z0(Cl#i5iN_Va+aob@#D4gY&joY0R(4ka6:TCSGKk5uecF3.I:V/n97p;;R*.8\\r\\(W5h&6XY#46ZM9ur7N=T_e0>^q97-M?Fm]>aJa5`CCWf`<1#Yelk#9[[>!q=fdq-i\\2\\Fn-Wih4tO&WJ.ZUql5!/H9Z:jl4>Z-h[E=QX;)\\5/=9q-'iCT@D*?X/Sa?/+GS5\"uR4@P\\ht+f_<0'ZipAo93rTr?T14.cJ#$Jl[ABe-d8!^OK\"ES3rQO\\2k-QgH?5WVs10k+L;PQf@@?9Q\"V,T7T0W83+jUHFnGb2,5']#qo6[l]pS2^;O(3jm)0P=,gG+^\\,3CLG4t-=\\@_7f,0PaR]cs0W/jPYM*AXW?=p398+q*Q.!H%Ap*XS>bid[43>l3ePD'AQ<u*7VlT&)7'f1h@DE/,-$SqH2a^7<Mg1lBI%u?llLarK)BZ`1gfrkVsQ*pjYpo8^q843]Dj4Uq/tiZX^fh49)Z%^4np\\H8UsWP-m,RDlQ6rSrCTMnfW^si!uAPceIIWOa8QoENG_oOdtH'Sg*tNc%cR8Cnp.^Q2^bBI\\&.Fq0jC*%*@rf4O97==#LR?bgmcNS)fB1gYmEYnXMUYQ\\\"`&^TNn#a9S',q:!J.4R`Br3F0qIHc1QHB0s9GngW_Ij_c;@YtM`H]N36'0o?sUJ/j^M&O+8UEdh\\3Z>NO/jHW$id2gj)C>VijeClllo>2@LeJ!e?EbH*WSS_&42LRA;hgaM\\X*MDAEbaKl&ZZ_1TBF\\noSu%PhOL\"nSFc=^VlQ%87I2n+4HK<1pDn:pZ_MfCG)f3I)WMskKLN\"c[H:S2H7Zq/cHRQ*_t3![>.Lqp3*`<4*q<<q\\Ucja=-#M+rGP\\^`*b5;;S@VUX0lg*GK_&V,Ai>7d,5D]I=/3mA<GpE]#84?\\P<&aN-OENbhgu\\%]+YLoh&T2=a7U*NhI#:'TX3eVf$6dU@Ga(A$IE[lEZB#A_d9,1k23-B'8:5_;&>q=)Gls[$3eDT21>il/(f;DlFr*+XQQ(M$9rOj<oepV\"Hb:5@*<9I,iKQMWY]Wb$[XuoFgMmBHM2IUlWV`H2K<'(#dEg1c^Q]d\\iD9&K-q90Sd;9K]^2aJ#Ip\"i-d-6DZsI3\"b2s6]#fLfp:1<I>=f:4KXWhNYN#0Dp`B\"fXum579`'u#Xtt]a2S?9-/i=(!M,^O[(Nq)WLY;iFW#+b!SpQ4e?fu\\#Uac9-Wb&Ce4I0fe>3BhW[3KmuFa=.:1\\&]ZRC^t:b[-3KZFl`X295#fD_&PY4anAr^@Y-$4;maSr@mrZ1jepZ\\t2XV>gD+fG:nssWsNE<^Y/RuNNr-3DXa#\"`GLq;>`Qj&I')oeAli!/LuBZ'TUhk(Erer#Ii3Xb)>-2YU#_\"=@ROu?p+p;U]rf':0XtO`__\"e2#-E\\IapEF\\b2Gf@k\"n1FfX6/f2FV4UqhXTmQGl%G(sMM_gLT_m[>)!>ehK;Sdo9n=.^R4f#*lr,(sTI[)(V<%iU#`qZ$jBmXN-7s0/5+Lk%,8J[Ue6-5E;kLjfY*F4W_4O.<\"ouNcVpj^Nk*r>P\".<cRi<qJlI6BQek_>q9p0ij\"0jcZVg)_R6MX?=/*52DOjZtmdp@DWihgAo:/eF7mC+tEA!Q0<kr$r4:*PM)gV!)MOtl(_:W-&d<7V&g'4lb)K&&S#!!4L9PT=\"8]5%h7EQ3&:E2nYS&b*2gcOTpckl,G?djnm0l]al1=*)2F/RK&lJ@iC3M%(iX%R_GXV&fLc1%7QT$6kd39nQ4)O9Kf7aa;%^5gn'R4$\"&k<r[fT)-aB4[+(;c-#1c>(?'%S+Sn(_=@?Kr0M(\\LWi90EhB5+Fbo_5g$q%iQ_:h<qk?+Ifcp$SL$)tYs&S')REj0\\K\"F-c[h<s'n[:ogD=VQ#P38rab4.@4+gJKiF%H$]X4@ees!.fHX:i3AcZ5sXEf=$pj>s+Rf-qDtH!IO#Gp/7/FYkc<`Uaq@[@XMM>*<JQ(>%p9pD3;/(*l-%H6X33VgTAj7V0:pb#[-8=@l#lJ`40/4<M;^?71[]PBLgoc7a36]-$]PQp:9!R@M'p2bIC5`[5bpe[O)LU^#4$2Q$csbr*<4'O*B=\\/a,>1hTV)hA0HS*c/<*r%6&0V-H=bD\\_W@7I7/71XGa4k9u(N^^B\\QbUHWSGJ(?\\40%\\$%n:@bLQUd\\qiY$HqS]#N1T+Ka7%QphE_h$fqhI63(Ck`WRHHtWD5-W.Fae/>p+s,%cLnuAn<^t(T*[j+V;<OHN96fp2(-_P$^(%g*WPEiqDcZ\\0NF'Ldlt%g:^0\"eI[hKm\\W&al<S+WNmMCrI-Kaa@iQoMMG>;j/h^)ID;2]HRo!V61?ck<c;GYY!dR'Z=pcAE(\"'+?17:)J*r+/p>-<S6\":@)Pk?3#1pia\\X/7=HW=1AMpG*nn,>q6QZk/?Wih[UThZQ8]gK<>OEcgl:>MfAIR6V+qmWO6\\pB6G9*ng4k$Yi?JhbeCm^`+)2kY`aS;K'7[F!X@H0:^5O.\\+6TOa%c$,*m^,HIa+a=kMs&6anpE`>=\\[ab4S^&N>V;pab*KrH^.'A4jtFE.2o/eA=24>?rlE.H3#aYTNQ0[QMZ/PF7VdJE(%+*>f=pk4o3g^%B\\?&R?RB]3n3,ckg$?ImqI>^6?_VpDF1X3[.hd92NMI)*gtgNJ:=9Xt-F^qZnD(n=e<C1_;s)[T(,sb[h-=q<eLTD[Z=>Q+@RnJ3gNNL?-nOpoY^X53.ZiLq<lJkM;EdV[^-3'tAPhN*1ue=Q:(:[qk=[Htk/_(THoQ+/\"h/[goaZ+]Vr-FF2WNZ_^4u%PfREagrfGV=^.Hfr;8(pWEE\"o>epZ3:*TZ<#/.9a*mt/I-dTk@ng,I1O9\"H@Z,]s?oLEle=id^$9Pk10U?3*/&ee%j*p9rWJMSpY2R6S;p-E$-cFRH#i\"'QJJ52k4,U'sf4hH9Rm`E`,u4]i1eM-SGSj!<n?8q$,J8FsaK%ibIl4^O6@_*G37:eUImm!@j(M8=@Pgq:3smuQ+@[r/t!oeQ6e-@92[EQo\"Wf<3#t]bIri:!_^:l\\i\\@S)qtSYFjdT.:4ODA$lhL1sTk_^A#EODaAHZ#7cYbqRFMWY(tL)KkOdddG1XF=Ze@+k2ie8SGHP(*9<eE=NM4\\lem_)g+ih@DRc[?rJc&oc<K2bF*YC3XYH9sSOVt2M*KgRLd?m6A]pu_FJ+*(q4`,.Co?([@G11b_&Ns6ES8?A:WAom6,+:E:S\\cOpV,o4riGi?m[LOiGPI'\\'^'J]rT&qP^GC1qR@1U[F8M(\\IUg(94kF#<WT6.Ge<>0*[SPoZ*j(!(<[u>J]c$OdM0`Y\\;MA]ZKM2.YQd,0X/9bFY43OQeH6^oZ_B6%GVpCZWCI@pOK6Bt7[%l((X?GZ`>IPQ_:Zq%(bc@rfmr'qUnal,4rPG^#-X#2?-$qcDh'-0d24Usj(]'H8TlN+``8cY>RfCaMkM6,fJ^*Mg%^CI=_q6\"*@\"Q/G1RDsM(l_Z'-?220C)g#d*Z=e0SC_&Tj(FM3`O0M=Na;?gp0@$[nHc$g'(P/THHH%FO6W=SS=SED`+'p$AMg\"A_S)@(/b70lb+A:Lk]rQ/@a&0`r%7*V4,Z+DLrA-/5kli[Hheh5^6U;B\\C&#8YW(E;*o6GGMk_k$`9&\\E=0W\\4Rjt#)&o!E9r*1f=V0g(aUCrTRf!WN;CQODu][u*Hk7-d7PTR=cLMK#<,3tNU=q,IWgm\"8G<t9jZC1<c%&t1oJOMnY\\T,d<L>M8<]=eE$A\\D4W@1ZN-YD^@W9\\(Mgnm1#D(N%MVIQ-:V(OPiXk3A2d.$gM*nk1$ku4>pZ@YHIJ+P\\88fl]F-_c_p])\\V%1qDZs=!pFUs2#<@ul]WZj1\\I/$;@#t(eV&6fcF&Ya#kOKg%`O@EP`9\\i=gJ[GL9GOR$%nphlr<[<ONCVa.W!YF5'@MGL<Fb-=XO\")T^,/^tfBN0qk0T+0l@i)`X:4s*W%Sh0aT_-jJPI9KH;ZdFcKgCu\\R^TRA[c9RUqA<`)\\b9:2)+HEqrBUiWem)lokR\"Z74DFNDq=YfrY@?bHN<1Lk^8`XI/HSn:MW7AF4k(&/:4JNs\"`Lc$iY29^E!$lK\"i;8,8K]nQG?g\\`!l$h?P,Y8orbQuWnXiFC#`K4>@j3Hk)N,`H=X#pZ\"f<Yj+h$ml6']%?H9?2_<Xd<9Qc6e3WY-Ppu*&0N\\i@M0prm&2.klg>SfK^,B#S#/Fsi\".;j__L\\CFWep8s\\]VT(_>e@T!,)Fi@/j!CKAGlhDH2bG<F:674@R6%-j3'6M<Jip.?D?=TdeR&&CY'^mE;6d2U@27b9CPFm\\/Om-F[qJF'E09V$@h,d''m=Fqr!K`rqhhUZ*09Z]!Z!Z%cMOA(oi4bg@X%m)ootQ4>t_Agtp!0[uM]`los6dF.(\"l,?)FhFFIeb7#umWn/e7n-Jm&QGb<tW66)\"C/sDp^gp\"I5ok>TSFfZkV;7kFZ\\@WM_G5Z4=I`_&EdsbrmTTo@7n^TQ)YI\"2=W'5&Deu2%1C7u:1`:YMN3Ku>c@>ihu[_Bd>.@lO_TQ@6M=U#tl<I2pOCnGW;k<^QVD`MD`)tWfans@>YP(iXA,O^Qh0=O^1198@N]&[tmKuhT[`8E8g7I,F\\B'q@1T2kY+`RsJJO?'=XS/;d:D4VSoo@*n>*=UK,i-S\\+d\"uX[I%,4%a2\"CXI;J11i0K)[`FJ2f7jckP1d25lj)+5EH2#,JT(2=,C(lHKoK=\\>$]AebCJ_co)#%`L+&\"I-boI4']YqJn@'/CH7>S7\\-8)'7+m-aZHbJ=T*:,)O$PJ?#2;i2P\\/qhDbEntFMQg(C^5;M8cJ*Hs7N<XgEUSq.D6&LWSn0M0?ad5/C687$]m'6\"XTdk\"Dbg9JnL*0`lr!2[WpHjjD_cO>nm#7Ps&I'#bb8#O\\#];JX,)P].CN1/m`RflWO?ddnPs59c:i'[>Gr>%%(C3rpNbBqHY92Vq0T$@E::_%G\"$tf8D=>nA:_X+qg_iAM+-D8Y?qNi<P8&EC?=/gb5K=H%pmmpj*7*%$p*Ej/*T$pCh:#XSEI;,U%IZXVWIV,ge4>G1A8WH)RCRSa1:64ba]KQ%?7MPi'gt]W9YjtGhcZgM=PrpXXiC[n[rko]>nT%5L92f]QKMjWS@%,j=fWTSr:kjR(nTDqdkr\\Qb?1)Dc,OIH!\\d-De-88QmSn7QoAT:\\[1\"\"p1c/<:5,'<A'Z@ucBph*c#3J#@BR=cY.)aQ=C_*LK_rVpa:+YL?W_Dq'HON3*V%+aiR\"Lk!B@/*-J-(BFZ<e_Uq&Cam/aE@b;MCZMg,_a3`^(o,^Eb\"S[W@;.?NuF7FtpdHnTX02qo9UcsAA4_j4eE7H7fF4\\GR]EBW7u4\"#J'TBl[++-2Mono9&I*P7+j959LJo=QO7`r+LRbu-a.UF#W\"q>/D'IFNV;5\"rEKn>C9XNP,Yl[M(,np)Mr!#-bbNb\\\\?(l6PG3/;g4WQ8;r$`&?BSDbt<F!o\"+3`',X*3sS[qT19:sO0^k^m@FZCm#,Qn`=KY<_l9W;dIgQ(3qEGPC=@Jl0Gqs?6uq(PETV#dKg\"EL;j05oYH*SFrSJ`TH,LN\\jq\"gW[=,@bVcJ$RmDntU\\EMdUEcbAV>Y(F#k]g5+\\c5I4P^75jhh\"dVgt+FKI!pZJklGi)RD$qt*Y`rAmi+:bJ[lt(JCio!?\"FXq>aaTQElPb/Oq(u==WJr@ie-+5L%2rZ^_6(J]aN:K!.Uemm,N8;QZUMfm\"<C^YY!R#o+'k:+_gt.mgnYFbGN0&kDNRAb[CZ48sO_bHnCt5;c3fm]T/T7-)_X6?=6q-50=&P_<a3)S_':7j8%!u:4(f]'s/-cXBNgq`s_6YX2Hgb_fDK3G`Y_tS]f8e5-?!U]f6sph0t5#Dr!8ld@C(o?5VdUGHbb%8:+[KB3ggC@(f>2]ki.pmNqk\\hFH@deFSRUXoO`aZ,a,ac\"#!1eIRdcN]G[:n3([p\\K(BXJMU2Fmh/<\",5210,d9dTdVTWel/Nb5rt6khiS5rfGK'Hq54)^H5`[c5Bm[u$)6/HM^jT^^lC^N4&^`SGb^#SCe]n^`o\"Yrbh7R\"%hou>2RL<_tg4At(M/1\\nj0=#Zr>lu+OO$VqZ_'n%?[FHFL<]%MP_YORB-$f,_jT7L\\P'9a3AK9f1KL\"a`Z5/lMa-qrP&!!f*l>3=%rd[+96f@V%\"!9j]u^b!8Vsi$W[llW)KD[FV-/_D4,L@lU(#1]T,Bb\"*t7nH^`h?]6?(L\"*bi5^_D,L.qZ1[?`km?IlotVg%o%;%m1F2T%.',S_].VlO5LhGf[r:KfCPs01Y'55qC_O#$XK/r6e>b?\\V0So1NHdnVDIYjLtAlCf9<XY&doG<?8Loe3h'd81\"LT>1lddg-p..tU;lH:eG48Npc[g9QCQuYSbP?\\4=s^*PS;pV>A%(#<YG)sRrt'17f.9&S)\\oTmXdS7`S2$eGnb25?JUUG1]DQ\\A;rG7=IMb2-0KfsM\"odPa&B!jfb947\"(@6Q/i\\O9&Sn3&)q-cqBGr7!O%`+!j%\".fLsE]na81$%DtfLf!;[2QpSpROG6TnuQ.F3`oDDY'*f[is]\"Q*\\FSu@0OmkL*g\"<X0T82/g99/>M4l3J\"):*@rT4>oRj\"]9>8[$7!H618-bENqj?([&L/$J?NbgaSDL9on/kKLhfq-+U5EeD!:O)hoSe/#Z$?Vlba<o9ru/M$L1R0;qmDdmPG1m60hnND4@e[i\\j&(Wl2\\\"\"`JApiZ^_'.G598t0*lS06gKs3]dh4!JoeItG4LIC;:O5RE3rjY`a-XMj[hNYoU?_.#n?)``rhLCR*LoYjh_/db*FBpJ2hT,RTTBlH3Rj87'pum$gosjd!Ea10?g-![?f8RCb?N,+Lr/Ga56Hl+hcTA<MY>_??8uZt!*/cCqAR:/&S<rQ*cdWt1goX8KLF`=f16442Qnj&m#kj/6Y(Y-'\"SPGqW!q4E.@7:rF0^dJk%rA2\"]iRt3@c57%oUV_p28O;Rc(?jbWRi.F6MVOBj\"_*O48oQ:]na*SEGMr%kIp0%e<=)?L$K,.b*oV?H=,7(ij9-f-TC`9jDb\\23,2%6?R+<P$l-&a?i)8g8s_R0?K@r5>-iSdVR4$2cYat'\"G?m>jgs)?hLUfU@g9XMmDI1.Ai-[CN^uKK<h=/l7dRd,/X@2UY!H-'WWQb.)c$\\J!kZ-idJaP8_GW2)tIC?!;6a0HY*&deA(;\"a*(H=XI[XLc'@i8EC\\5%G<XOi7hT<[`7>.jX9Fn@C[K:]VLA,8FT'XpT]Ynte%0g96<+,sI2r!b?5W.r\\a_>F)'=nMn2thU?_+hA0qE^%%M!3%\"3o.o%=:3,]N>We\"7WdMs4oj'dhO@T>?jtZ`C/D^n#bmSC>&o8^67N3oAXrI2q&fdo,>[;7\"8\"9FWd]7(Kl5Zf9\"'TI$;Hl/W9R-]'`k'C3&6H[1$Z?eV]-1?]X5p=p&$,CJRq*S/dcs5ZKq\\k*^VAa6a4O6^9DJ;_kDM,4h-Cb$;\"F\\r:J?7rcg%4VmQN)K4_W=,sg*DiYR:2<$57:WGFCht#nakHGaj,47'XS[^bS)WKK#^`IJsLMqJ-0E:%2$-;#>;Fal*hRq%s4FGbf=mqb*l-Xi)Hpl``H/$^#%@.tAEINO\"`UbtNq=/d\\S#\"i$k2ibQ#%l7uRK\\'s$i$gk(MM*!-)su$3D9*E0m>OB]A!SJ0\"7>E]ZGDFhsnsi^Se=k;^!c@;lg/\"<6)F>gBQOf_WQhW3p)i.%Ju`0MY3Dej1I.m.<uJ3j,8S=n5ZInVTeoH;num9FWBH-Ek88<ARUZ;/lt`L:m?7L@';hiYr%HPQG'5hkLLOBo\"$jJeY+HlL+9:2)$XkQI?/KQ]bLh.<P_s@\\I7>@*jGs2o$3N6MruE0<koc')tEMrQm0gHNCP(Xn?M9P\"4MYqU$0TgVY0RkdsC_EBg)L?ZsS2mHDK_rRdMsOa19,t!\"Nf>*mi[]RM290p3Fq+?%Zo!ETBEZC2CZ;otCT\"pDkmA)WJRA6aM'tgTigmmTSah*OMQmVTTWo6,Sp+%9(*O$<?GA,NPt,e]65O<7pp`]VXY\"P28r)O-TW4MSB.p%IW/&q$MBonQ1PA.k>si9S7]8g1.+!`kCECFi>?oC/@LT.k>9(fVA<nP^@sCep`dq)R7>S#PO8Bq<&GJ_;=9He$t:G@h0e;Hi1UqgkR*9mN^2n\"^=d<gl\"tEg_ZjZl:]TSs(g)1s'*tP;\"_X`VYf4OV?7mooGeR;ac#\\=TQLUBJR4\\)o0=0PZ[E0bLU_W&A^IT>E;R_b-?bH\\%*sjdYP6&(D9;,)]k*:tdBt`eF^_?i[_Q/&<5PN:8),t*ZGj(`FI^X;fd[4u`hIl7GtblsLV0!=pa=*lMW5\\+9,rHKI-$7/TCuE^rgm\\>T(h%QGO+1elDUGW3VA(2<M?_h=%08n-1>p-X.NSQHRcS[`=!?po,?n>&U,jSm!HYk0aGP\\RSV&k^tm2[:&Ea\":%*_<c.[s1RDHp.R'k7h1;hFfL48+Kg8@/d`UB5@-MZ^#&FYV@K<HI/o30qT>dqrE:W,,/3RP$oI&j,[-/q+X46H'`O3&7(4_H<g?62,E>q1Vgps\\Q>j=12N:$*l-J'G.o:.^XuYG?g*4o*>8*3ZgIOR*@5lA9s7hVQ(SfpDIR`EU:J6ELaci4J)kUt&q2-2baK<?go/^LJpfgNgqJflG0hS[6E7lH3FE%XYAI0mfiPW/bQHW:)ls?[3=QClAfFJ\\+G3H-G,$@dgYEoD0PW#L7d/k17<Dc&BC9h2K,EMj\\tk04sk<mq2@Z04mHXJlcEPC(mVbkkZQP?13Xm?)M=(a#7`UfB2mI)H1e!Cnj\"^q.,KMNiC<.(F8o]#3.a3l3l)Q(%T%g^!3iQN\"LET)0*aL7+^>@OlLJOO#>\\OKdkoCI*q)/oR!qh\\H]8nLg2Wp3lY`lq(%\\3f)K?qc\\]2:/pk$eLun*>7;\\_,>4;&Bf9:TCfHY>)%]J6'fK4)#O4ZN!HP[TAYJB!PfXh022rO+tW;/uo'7md9cn3msngX?$4FN'RMqCXAG4!a#bj^O_bo#5QI/A]Pq#1f1q86RErL94&qc>TQl7ZcEg!>Jnhr+#HEIWc+`UZ&U\\m?5u\\LQjO:C=F<Z2^nA5K$jVQlHc_lO;#aH#,]JG6n'lY%:\\bpGf?$L(JRJhpg[!gV0nj[k$Nh%J@J*b56uPbF'HQBTFCh(/U>3W\\pc&U\"+1OCM;jkj)6sBIlrKlj\"Aq&LHIc9m*XJ(hT61MYOfF&26L0H8oM[Mp37\"4C>>S>V?Z`BkO[#<3Tg1)RdXOnm&B_B<8Re)U5q;%L<Q7[pCuHhr]8u@qqfro[I;<F0m<-LY@[m.\\+SQac1VZt1RgW.SM^S'j)=oNUX+EIK+G[PmAD%GT?#hQjh;jCP=G>JF&1!)&VtcQZf;3^.F.')mN%T+oo,@B/i_TS].V\"k?JEB@<U(3<*WE).1)jHHlq'n=k^JT=NT.A.Jo7)17LDS/*Qg#C<T6dM03$tDThO/5$AH)SprcP4c0$DIRr%]/p$)bVgYCtsNV^p4cSpm:gH1BO1H)N4[d:Of^::YmllBhJ=_h=-ml`DajYO&\\UR^d\"Y&boXdp15i7l_[UaiADXQf.<_dfY(ej_p@Xq]>YIHU%JbCdX\\\"E=2]Bi,9Y!G/7MfroXlCZo4#K=/Rn]?^!2_X*<a]c*Cp$*@tiAnjI\\><I,\\m*QrD=;:2Xtl1=',T'2W)DJ^<^'@dejn-.Yu@@QSBWn&?D0_RW_es];n5H9M!qR5U4*r@\"mP6Go$%-IB>ZrL-Brg.-PMe`jg_;rCBH+_,Q=5eGIi,9\"[[k7N']9Y\\)*OJU'9Bp@R9X#?-pm=;#>INQ1n3.aHCL'&f0b!R'7aBW\"Oe,nV&a=_C:EMYY+4NWj6+h<U*p_K,&GUVORH_E]_Xuacap^K1QMkauL%W2FbSHT#!eX]Ar13e*j6OIInY`<WhZ(UfSp\\W>GVkFd*c1='XDJE:W'QrYWd2@GnTs\"G``e2%,ILFR@gb/ASqq5`MK96[Ek`*0SeoD[PSA<J#/`.c[OB.1]do/oqh$T^Nq`3)H#(8!CU*UKX2JD:4g;`%QicrV=Z'fu7/b.u/`NrpQbO1Ss&\\[D^Onb;_n5]u5FW\\Jd!5bspP&*#*`I^c&UuW\\f&e%F/(4NK?1?Ho7!db_^g?p3\"4K\\ug3Flj]f+@BGG7l,&,c)tpJQKZ!<1R+qpGm;r5O[Zq9_l4lY[jFg\\gbP^tdgLS''RjClU^U_$h`),d512U:tmuC\\5N9?LuV*hnkN5R]FBe9Jla:(ls!fpq<5r7%?8I<HMJ*Mm'7SX5NTG*jN_rU?5hD79.\\(-d.\\?n%&+lF3O1hj`O>ech@0F)b+hVN:T\\.k]e2_+.qk(b4g]V;2)R(K/N(0;r80:;m3e#F5NJ4(]Ljs5E<E3Il%\\47<=u4*[o9a5<.\\K9R$&o<lA?k>jXXccf)(t(AuS47S!:?4souV^[;bupg1nr1Z=Dkb'id27kHfIpBu6\"f4OuVn)82@_-d+L2GjDdF0)Qok@;Hn&@iuJ&&!GPpkIt&Pm1atI3$&IBt]6#HO0Y6CN*4rTlI&:fjeo5la\"$*eEb9oh.&<+7XWT#)\"m.[EsZV*ZW>I7e#`XqbX$Zuo&@[1Ek41lkBL/*/QofXr<bMohL(KAf?o%Rh%SX[26`pieZ/.'\\16M;@a17E&KW$F2cC_,<_L/fkGRj7\\uDIen2=rtqN9!YUNu,dVnDGl8TX=87glE*%aRffEO&#SSnK/PlOEbp5BLp0T@pgf*@c[uVh!o*SN-OQ4Gi'9>N;pVpKm3;O,:[`RD3(HTDIG$kW&tI]cd<IQfN^i_#qG[%p],;%\"@m`q]IU`)LqHn1]$ln1]6/]ISAqP]-a=7BV3:tp\\C7LFKOh+ct336i3,s'JV/hbO1W23'(K)Un^SQ$Z5<=Ja]%?gA*EM!VMHmlQ&%$<nKm;#m-s*06-(8s(C^+'jp.NlXW-'l<GL0:3>47ihJ17Oo0m0$(%Jb\"*SgHJ(3*>PJ)g:ErTo9<\"bEYjO)&0S]G(0Zhfp1!1n\"m6:Ve\"LY79K/l\\O/WOl$at_B8$$q.h^7_I2\\#3.*<)`8&'V)I#l)G=;@7`Vc8jP5/%phke6JbtIQh`8J\\YTAtDaipW;@p[\"ZB5@tIHpn]b@mcS0kH/S20Dp:=F)gt'LJ[asd%I$&;YP[A_jIX]fhQD-p?%D^c^IR-c;uT,/^PF\\k]D45h<&O=S@?B+c?aCa7Q.*B/^FJ$DP_G9ej=OifMuD#r6&LsOgCpjP%a5c!+*//P?c6<fZ:Anr`dj?/4H3Ln.hQPc`)0C&\\YCaq;Xl`b:N0KO^t6A(%<8uak3C#,rDmT`2R`\"-C%OfB5@?>Q%205@VR=tVHO'IuD8?$^?95:YTsYUl(]N>tfSfML%j^*nl\\t#:di<V$*uZ2jlho&O`10!UZ&&.2,kk7:%PO*^l\\N=FlnQQ<VX&^jUfVR6AbOtn7RS>5h=4@dh_U&&'SC2iIL.+o$ESXbYPXdeDXIBU3BjcV;XHe\\HfpGaLqbZ4mH]i-9V'al&:\\e-gmTU9GJ3/6K!.;e@Xm@_NlF1-4r5]B1?q;WQft8+]f#+gQ8KU+bI5Hlq7lfoW;l/iB>RmbkA-N57C</QCPF>595&.-NYTB<`@'3#J,!4*97@.RX1\"seL<!_,l[ZT\"[QSI(9bRr(VU5W]K@%!A=_lYFST2]O:\"IO-4>cAnlXk!D:&1RW@E65,XYJS<CO7o;Wp_Zh8*:HN?ZJ8H_[G4S2nGin)lP!kVa@qgSZb`$-OO,7_-^.:PPG\"`r.2\\\"otZ?dPeZsUr&oc6EU<Wpfs;ZI1;b5KLg\"?feQ9s6BoTQWc$c,2J,4^6i&,gg5<Q[>2,F`#%iS2;[6q])e:mpR5L..YKCRbNe0rrB\\/(dNO+!-mM#>Y]@WKC-ok<Y?hl<_)OrrDl#1pA9EYV'WhT4l-]s\"TBQg,%'q[A0KrLO_GQFeW]pC]Tli^&BuAb\\1HCL$H8=sJY[`612(XThS%FW2[kLW4uE[AF7#/^ku]f@o7Be!gil?u'0$\\(8h#FDTMda(Di:rS;TPh&Sf6TCb/;cLA:jr3[aJY$&sgZ%lL+4sk$T*$/CaY5\"Aq0WE6O^Yh!Kf;'6G_r&'\\J%%.^h7)A3\\`AHD'<f1Gg^Kn5F8-n8I.jOB6OY&5D1.,i3d\\_n=1A\\mT>:=.)lD>dhsG9=s7pcmn>?%RQ02CM5:0U9#Xc`JF2tssRihLnS&K'R1rW.j&]J:`7EV>k4]%dAADbC$MOE#)?K((Hq&3H>R9)i?:e^P^S?irFAaJ#*(I[[,GiERrV:O8`/TB9TYce5sCH]V\\SnX2<VDIV.rhf0Bh3seSm_hfm7V3TED'+_\\k0^cn3hEW(LRVn%]Oa\"*^MuT\\`b+CYA@D1:SH#G]CSpm5N\"L:$U[)$;o5l3<\\ku5O,+e>[8!f`5[Z2Dt(@'`llAcYFN],O*,NcBeSs^)dVaI``D>8I@p:jSnFnpARIDLt<+)DFc2hT0CT`O`*5'cHO?AE:aj%$cUWBo.0)/aH^-iEXj5H6rJ[dSo2JpL`\\NGl3Ip9goHRUr`BZPNA(A^u*/9udo`9iCYoSs4J&Q2HfR[CYeX,S.,eBjH%(>W4@;l>ooLJAkFMJ[9n*XPQ:V7/UlnR`=fYV_uEA&2W)$Y3A].@'+@u[`Q;(ApQ-3?Q3VKE5QKX4%BtR\"Ra(VcKU):-(StBrJN86GHkilY-uRE%<T9pcE9+Nq:,]8piI5?f1>GPlXp_R\"ugDTEHIb50R4I]&+>TkR'r(N1[^bqL2K`[m&B6Cp?84DkZthT?1?J+3R'3Nlh\\0QJ<mr?:Ak4mH3sT1g:.)K1rCEuMUXT_^iXInQi.tsq^&oK):uK\"%roief0#MgaP*F\"rJmWM^8^4ti7>Y#b>>.tT[rSeRb2&q<@tqGInQnCO*WddWi/tWpfWVu[fho&W)f1peC2&bi-A0Vn'>bn(B\\#3Gh?P:CrY3sZanOBRsTQ>g$Y8fSKYY&Hu3].FuP+2GaInGN%nsX;mU\\V!QM!Ks(9E4S_n7QMhg'LlI!&NL<^lZS)]:B+1=*ik59PG>[1\\F*TB(kptHP_Hl[FkIPZ#T+O^(VU>DQ!`\\];nbIMsl_Vq7\\`*XJ][84%rbj3WgH5_,l^XX5JSHI0r0C$/s'(oH)Y<GHOpGpj;e9e(l+5KF,P5gYW&pkX2mhIWRFa)m<+m0$YJ#DgUR\\N1#lH$I2r&`Um]$:]V8@\\]Jj;q!dCY>'uq/*KnYZ$ZEm@k^H>6ANF/s[PQe`dU1SR/bsF(=&V;FbD*0!Z#>SXtb[F%=EfN+l*.D%,0r2aOP#Tia<14+#llZ#UXcm@S<K-doHV#@$P)i+n+UakAr51-=[Rjp:l)5M@h>d++msE40O7*q,JO[sR9\"nNPSe?sPoX1`+(RR(U)b2cnW.?uOqm?6>O:4HD]qrjUk)?gnm$r4QUiXMS?6#6'!?JbE0@hDgS]%XU:qlP5M2hP_L$#L_7[gOl3mC/'Juenb'pn)N,Qa#Q?HE=VEA:i6*g2qWSs\\#IrOF,3cW&'lEc]g/_,k0G)g5\"bL[otE1e40)$+;XO!m`UYmB:cma\"F4$@CXqLa=Vt?QDSstflfAh=PY3E4O,H`eY*]<TpSc5:gSqe$Qh5XAZnf0(Gm=j?UMu(ZOH`J?Go@beGU.s*@n!VQMnufY8Z[KJp%So\"-+gD/G3ks?*QOe;afu#s,F_D8i4XAnd4\"%Q<']*u,3lcMI3-L/W9DI8d/_G[#T4%O1gc[Y%K88CR#](QOo@n\\7p&r_AGRrLcB92c1.<L*mlqR5b#&\\5t0n0Y(:Og;mDB\\aIdf)1d_[C,S:PrqL<\"D$i6)5#>29<*LJ\"$CWgdO=O?Q6ZUS9la()YK34TDlq1jN6S7jutS^C!bWcRY(bJ.0d-Qh.YT_CNA4LqkEcRjF).+9o?W<c5MajjFS`U?NsiC!af.\\=6&g0ii#h\"qTH2b\\RT_3$#alaMT>3s9ok7$dWd4k3@2UFcJbk6d5Y;SN5ogMrc/:Zla2W.n!N6@bH+FibQN(*f)>ldD1c?[.JUK!Zu7!L-=2_c[k;S0^riXe!(.Pu%a=$u6Z_i5pOT\"WYkI:H4Drd+4G7VGq\"PRFErk\\]T-!\"i,NeG5gT+O/3I^er#gWh92X1!oY/R^`ojA]ma3f%S)SG4eNk:jgJqJ<_ObgJbk%pphP2]:6d.8*%'$\"D*!FJ=h7uuZ4Aabm)=8S#ueYY1+VIR6-1r&LK^R47e^G1dk%eoeg=Rn]M5)QtNJ`sf:g@S,*I2d3tXS.0o,F3d++^5Ifm'flZn_Y%5Oc&ZeYmrMUJM+.O@qa.Y4GGM/QMPf**P8`N$tN[YaSh6)]++04`p7b@CCROl1kb%o,H$1Wm8#afmTkq#m@0<[@\"s'op-b8kcCSKPjmLTGfAPiSWTEGJO.DYnHnHIu@upCF^t^a4^H=H9?X9&>[\"TR7J=`C&LX47bc7(l\"5KP!VE4@.ElLB%Y:]m>Z2V5]#7Ou\\/l<dcUnlSGG[C#Ag!@BqUp0hJQ9KX)\"q31Z-j\"B!MK:d_gP/[$Ai3BZRf>!`un,D6*<BG^0=6SPcc;4IT[_Dd2b\\I63F?Yb*g^8NFmqH&hNS3fD&Z0o;pIX_JhmR5hr+2,-Q.PQhc:KF]R%2@\"pmpK#Fe-]Tj73)*(IVc=d5iH5%Lf(dosua)Xjm+4QuK9AR_s9s*VE8s9YfM^ffGKm]l68[kUuG0@k`-7N\\\"Bh:J'\\D;TJGmbMVo$o+ZNC*6^]ETNgXVfo^RXiljN1EG9;t&q_\"Eho\"Vibk2EOpZu(d'1su=fSj;o>q_)T6!=NAK9:.\\lBbc#Yh.GgNcI0^l'`jD\\g4*EP]uepO05!Z+;dKe^qFD&MgNb8HF`ct/&!req'kKPl\\MN&T7oCgk#;6J2eHsrfDdQ%^]14bs3#n[rSRV'm/HoIH%$M(,)s'/c^CA_E_Bk)&U2:Mm!\\N<3&^L$2;.osmJ/9X@;m9;cEUC;9l&Qi'>L<tNoq/\\3^8MajIq=)0aGJN\"`ms'f*?@a`7hJ1%jtt+Z=,)L;_s-rD'Ill7K'fEJR%XV[0#@Man68:\\3oD/H$FKfLI(+sPN,g>Se6J1mcB;9H3K@VpXhTRpJ?NQ:Vb_KV\\eJ2HHb5i(@aoMT3goQqK,fAdC=>7f?0k(P`Z1tH@Ue1Jb-N-WVJ]DQM-uJs*#Kg(c^M8J;skh&V'(q1^AcJO)dG6XtG'2B('B:pH/0H.sp.0DuX5UrpmhJi?/(1lel.L)[u]^F%P60*f,-<p[gfnj1U:b%_=P;Gouu#<,Xp[]peh0C]<)chd&D_8KO4X`e_$@Q_*XYc-7L43i:VF)\\:^]fD=iV/_!=^dF8T%;_ocgaS0j:bS7e#Fh2.-cZe;q]B0t.E@lb>mIZ_8]bBI9-`A&YgLKckgQOY33/>K9_V`<?Yl*pGH1^CO4GDr]\"_1?\">sRnnkJSG6>kr`DSr;c>r\\eqY8(UGk-N4L?^D#)Wq(HUrqF\\dl?H:r-kV18^_sK2O\"0!(=S_d!:71I,=Qh!>_q5DSenHjQ/biARdfL*m=qYh#poagiS^VfYr]q`@@^X3!nNrJmiRDHRDrgi6+;gq7lR%B@R%q=Dh>9`MT_#(]Y;YO)UrP.=[%^\"0(SD+:Ma?%G;_]J\\]B\\@/EhR6,Yh[A%j-3SP+nW[eso\"0luYdXl)@fH]ohs%T&L@6.5]+\\cereL@/)#=3RUD%_H(]nV'\\$E]cm2O7+'?BR5=MIMc^='N<oa3GJ(&[ORQ$E^\"Gn0Nlr[`EIqsZSL:@G)Eh)=-0/mjg)q:epKW;\\b;:W21e#Q>C,*@bPTm(%EVnL)\"`klZ+n\\f*KqUR^fKa#m*io*%T*IqL+t0rcb&cIi+.EVJXG96_OuGP&BED%;uKs2Ael,6grYr0=sZ]Ti2d\\52E\"`;;H&n)N'TPJ3[g52-KqV)Rmf=3a>6Ps$-TM<@N7hijKeFD?aEZfh#?GoUbCVE<Hdj6[<:GSFqkB)<.PSa;`GP:a+h^28&OH2GP:2>,b?)/@r*e=ab7ksNiQGW5_:FR8\"lXZINJgj8\"kk_eHl#7nIpmgqM9RIKqXm(Lj&mmZSk2sd_mguBXAYD2dI*p@P0n[5tJW&psW#S.K!;0+S]=P5F],Fsoor#o+LO)JWkg&9rdn^rXZ5&rW<58jniI3N/E(GAJ^qH_Qs#U)t_+QlrrbqOP6$e2E<T[*L%l<LrUj/7Boh-^./q\"mk\\^OncMS%3$+%)t$m^E(Gt^\\l?855_\"mi2F+ZF'r^a<K6dK2:7&U`np\\gm`56&mE>GEjfeU.q]B*\"76Ic9oK9%SXk5Lpi3!F5X7Z^p1$EV[f>I>nD(I^('KP%$d?`HGgG(dG[CbV6bhh4<[Q1mMf3Ns@X&HrBiJ`0P)S.-],Q=@Ba2\\g>T,tb5^T/0nT4O(:HK3uU;g@/QH2@.GreJ/TjX%rR@ZU>3.^>>m]7c2ALY'Sr\"5H?U#S5]k&)<p?JFL>VotVe+GROdP*<(t:@\\'A54E:/FIG8\\3RkGi'r)rLS?HCc's5A<:mIio=)_cU6Kc.Su[9;,\\*dQWIY9E`YY&1XFisL98GPi8tgIT7-o\"TgLs5!$js*(gB`U@CGreA`__s=tpf;GlDlG\\)pe7?I6;k`*DD:*:*GId09^PP\"<^F9)q]a%H+.lE(RO/!b&W-r/^/(lhGFq<@;9c]fqgbk2ZL$KE$?D!\\Z.Ce,cpX'i2nMYHt_g1)[l3r'S2ok':fXh8n2^]S`0-AU):[Cpe4QUtY8nFF&]$(,F\\c-e0,H>1D5!.r_O#Xe#0us1\\4I<P8n'RghVXY2d(IU\"1n\\@<.\"!.A/i:$<,\\SI`cIk&%c3cQ!!OkWoahQc`?Aa`U=i[FLEn*;1cp+F>]#*1r%CJR,Pld%dOUK:fjnb_44ksmt*NDG$.6bf&VY7Yunq^^:2`8;&>h#1U[diA@Iq\"sr<Rj3a`M7m9q_sI?oDeA1e^REEnIl1_>#=iPt/mmUd532$r#L`e8NUa\\eh_MUr`)Je`VUAX(jfiY1I-hBIa76W&VuPrN2p3E<!2FO=XYFMeJpJoSd##$`SdB`$%13<X*OI^k^,LW3;80Mr)?]>CJN`]i`*E#K*OC68TO%k#]R=l?j`hS;::Wl=I@Kda=)$gZl.OICpKbHl1mbBWIpX4hp-!HU0)Q5RP4oQ<PkS$Nqr7-s3<F]eBZ'V$_*2=I\"*I-?rgM@6K*SjSH*e+-GV2u$0t7;i45d<c\\i*iu1nt_HjfY/cSRCu@fMhc?BAi4[hM6K[LO,_VH=ML%@#0,=rS>fE#kdHcbY18#d;1lAm=;t-+9')mmD7Zi^u)u3i!j[n7=?#kh*($*;K%<L23!NAn23F[(\\+t+4Wi`*1`q^+0;O=>>T6AP_MIBEQG\\8&2gYE!k0_i%SFMXCD^FZ4d2J'^.3AMcH.+lV(>*bi9jWbDFl71oZ&Q/6e&:Q2LRVQ#2Fm)11EN#LC>6RXlAQ2?-WA6[Wpf=!ero39N4f@<PhS?ug@j$d5<WNMKHJoS6'o1_:U'ReqKg@)kC4;L9AY7XlG:+o\"+(U3A,_Q#5(mgFTCQbom(IXc@*Tk^S&=hLj2&d<#<!-GRu\"m4`8EQKCEj%-^g@=$\\-iMQi3*CZ=Ra'HGjDDD^NU<k6QQQ]<c/:tdIrgs:iqH%$hh.J\\+$+>n@e#S]m&F^+2IV7L@9NphtmKAI;Ll=F)66pUY5MAB=!TM]7\\bJ$i]jLr.ir1?O-)86a1_>jpk7(*$?<ks71*<mpF<\\oqT8(Y@%<E[ZERGhZ)$*4oGBNpF5:6r7`CE$Q.@mA]*$L`hnb9YhED>-2:h-kjlA&qX'\\NRM/j4b\\G\\k)E*b=s17f&kW/ilMR.OI?,J5QNoFoV@qt(KaQpq)>2t`ZO2e&PqKj7>0\\P)4,Oe1q/_([OLcfU%\\7%;+`h4;icQ$:h/HPQ_:<i$u1NWOtqBukmWTLjJpKT4eeGDDHp+3@dk6e<HWbA$F1es`#B+'`l>pHdaREML0i!ang.lZn=R)dGZ]Zr<jn]./DSj,=mB;gRq:/Q@s-H;Oj\"#mY^@qu>K[g2ppJG1'N?k>&[)*A+U-XcH)&j?R\"c:D@//BOIHHB)U`l[q>9q!3RI!VdUaL#L8aZOZFC4oN`diI)Aah\\</.T]Xo)jEl.':M0K^T?ZfU^R;cRs'k[uHQ7R<K0TCR*2<FDJ\\)##l.EgJIg:=M_g-`^=*WjDa;[ACer8KT/T^fll!M;O.EB6u0#Vt<6/P1[08%*npc[\\Eh)48%I9uM2r09CChNk]*F]C<[GqclXUb5l`5(r'O7Q#$jj\"+JoTPM1mlA;nLHu<IuM\"t>\\h]$L$[?9r;!e9OjS++\"+1Yj-oDhVu_rJB2ggd:A`27mL#iuTE54#Vk\\qr[\\MLhkgf`*OAF+>5j,EXjGBfafaOh$%i39CR004tklU[\"%n9mK6P\"k9:n\\VOBgB`,!<>lfU4N*(fq;6G3EnTW=tgmj@WinilHkJDj/>hfIkOB?3RRnGT=0YGdN?JWigWR-qcm&(guR4(&V>QopHIC`f4a\"4,X&4/X!L:L1Ek1%uRj:K.1^K0OV<g@[6XI.YR_hnF\"un@gWiDi/jb\"0ln<UMnE.-U5ED^u(Kn^rM\\Sn,@k;rJ`gIhL>G/Dte7@Nplr9#<WX5pW`/=ql='8]2:Lcs5jLMksmC#n!n._;uW7Rb!Y*8!HNR;0JX^Eo/Ztu+SZ=u^S9>?k?\\aIIP[GA(Tf4Z)U\\DBU5cQ0rbCB;mrXZW%H)_DI=Sh#*$XOR7r-J%[iNu.>qjqP:Cr\"'V?ajQT_93t\\\"I%%j,P#Gn!Wj^\"8LoJRI66B%o)f-b[_gp\\\\Di:Ni4>8D)RIK_![fI52?IU#@&dCp<NEW5'1am?k/;h*aBjX?IM#f,L%Ts\\V<+k#_.QK?9Go/>p>SA6+kN)LG[>h4Z)=YVr86%'/\\j!6Z]`FnNB1?FL5b^pm^Te$-+!'[\"UIJ%n$h@+qG*+N_C;/@Ih6UdlFeGTJ/oAFcRQ6]LKEGKA*)9L&A+Zrd)d1]^PEj),T[Jkf2K*&UV8\\m/7-6hfiJk8$i0iT?YZJn@u/U21&_G%rCXN\"8@r4m?8([BY\"!j4:guX>O_C[?bkOEm%'X854[3G>3>q$V=,\"AICOk)$_Jkn?[X'3MaXh:C(JJcXT'$K(3<R8\\UUWZc9o!\\9-#)@h\"m0UkC$4@6.`W>(u4Cs%TmLjN0!p@#PE#5aWg^IeA5I<@-VTt>Hl,]lutl>r7T4?iI&Dha)1\\P@#O4=^q&?<Jb>T@.G\"6k10+X`mu3%!46`1d^2q3^2ON?Un*ZQc`5D-5%fCM%9Fk*X]3ok\"%.BXe'@Moo3^Xs-8\\IU96heeg\\33+5I0^qO7o$X>E<O#MfVc2S_>Z0\\o4SNG4uO_b/X8M?m(q3$OE8oAW(A>Jp`*sRi.23C:lFZ[,::UDYT9'G*p^K&K<)p/Oecl,Nu^3$nY?)AXa?[[/P80m!FkL9eK(ihmMLSkn]0N[mYBMIipVnRi9iOR@0ZJ?q^]]rg?ufkGJBtZ&\"`OWn#068\"hQuBL4=+gmsPAJ5;?qu*L^n@Ih0f=n40F(f/?@:YB<?^SSO9Y@fRTdRp8*1\\Ji_@nY>n5fo!iJff@FLG5aVeU8l/`/jimprc4\"LHL!G).8Q1F,G*@#fJVVZPnUVoB.G^O*/(osf?Otm@qD+(`Rd:jno_3^h+&mFJ#VBbI37`kn4gQJAKQjfi6b8H-X6@`[YA;[!Hfel*Ht4rg?8-Gc1RrJNEWtaU^d!o4Ytk7@b^#!SIo_TqLil!I$aC$V(VbnoKQ^;5i\"pjiJu-?M<7:n]S)hSSKG!*nnF*Q_4):3a/$nNmCPImriTSEs5#\\M[i]V9Dd@^=it('N@#&LSNDJJ@TDcts'WQ_n^A;.30W[KLq\\<jNE48EoiEU]QPcf<$r\\nHf`>AIM*O+D]^>CsN#((KPH@E6@%H#@k\\g`@s;eU8H+_YrcO8COe:O=bCqig@3aBV['9<Q0<j54TjkM$eOr)'V!8kBj/pj1/ik$u\\!rTH6uhm?V>Mkf%#U\\&CRiLH=VQKf\\uqo0gTrK^d%NNRu^jE80Or')[`kI#<b.i3BnH:G8\"WsjI#+api`3kk^Ad4%\"f*C(@6[DaG.bD7;f;eR>XTf%Ne`#JD8qH^gPR2;'US(60=oca5p7Ip=X/q`,6X9Ecm$P0C[b^*WZ5s+MNlT_c>gqS<Wld)Nm2gkTBr,4cK)pI1mlt]g4rl2#OLWgt>h/@[j`#eTPWGh_f]FS9Al.TuechP2-oUEan4]CQ]ik($8+oP_n3&J0rk52R]HDgZ[%/cTIo%Ukr]\"Sh`K9G@XdlIr,#L1\"ZUN<)R*QR!kUtJBp1%-hLF*$G^=&5i,pLb<PPC?eSR,g;nGjS+#^DFP#Y8/Uo5qJV*dfcEtj=,=J?h32#rce0agaf&t'7WN1(&eX\\\\s?*Rq?n!UX9T6;#O^mTr8dchnj**LD,#dODbmP!ij.b7.t=^,rcHAZj,CHechXR02gY..bhn2o+)2&?n'aK/K:d]\\p;'jQh)%/f4[NTG#OWOkC$YtO8o2uBOQY?jD3a&i^4RB[F0;tA^M\"'NSpuNr&+?:Z%<]KnS&N-t7)+XZ!LK&_s&8_51M--lL?=)nDnW@L#4F'&lm3Cd\\q@[oMS7GB.)DkTd;&$s1[Cm%7Cs>\"f$['_hIal>XjT(C=>^h!B8omLFfF$q>rRdmj033_Z?`e1ke[E,OU\"c*=G7\"2i.:R+`aN-tCtC)_n+[(agUn#GqV,iGKu+^S$fpd*]Zr#>STf#ncUf8YU>-:Wh138\\+7QeYn:g?jG5;%!LY)\\R#\"@#Tg]2OsniXK:@deXb2du0M[D$ar(g>fi^L'@CD)a\\sGA[ZY#5IMEH&ZC33AddfnAi;]<JMCA_&q=QeQV`3\\!T>(r?<<iBDaBQpYEeqnP/r+0^#b9)V._8Z.sbS43_:#4l\"\"aP!reuQ.^fY([J/=Tk:V+Wl_>CbY#$SQEqm9@$WQnZad;U*\\:mI_Vto39\\]*QF]0UtZuK2`&Qp?!aL+P`Fe&YAX0)k#H(a2?iP+dtf\\`U^^PZLi%\"C=p45fYc:O%;4m!mosLJ9u/NaldT6&3@;1j_&$+-.0*qiZ\"mnlK;VNqrOmrFijQ`jsttq-,XDW]PerC(KBV@'GI@G8:+DX1#P<P1S$oi-85FgFS8,nMf(OoK8JRpb>LrhT;:gepR:7Nhn^/qI#c(H2Q3X^KQdbqVAV#r%:nJHf/g&a8FbCYfskebT>F'Rj*4;-s;Hr*ba0)'8%\\'4/R'9P\\\\*?lh8JX]iRch/UqrXbJc8M^4FiV&V\".:J):T_+5&WT%([F-qNJ5Z,Nk!WR.:&\\Mt`q5+CCuAL0fqt\"(0YkZ>[C`/Q5.,=)Q(V<Hu`I`]\\XhD=#nF)[s0F[?jYW-(R]BL;.g>&9F2t0?r?X`n1%1[3Lr:I+tuJ335-tV`2QP[.iZ5Hhe$D/&VD.qhgF.jktP)F)PKDIp4qrM[)io?B=)bjFLg]\"#l:8[@3Tng?Z^;EB%QK<q?-e.K7VG^]*n!WBI!0fAR6_l\\&d;GJY*8i=pp,IZ/;2HHc.IXZO<SkC.OO/GLgiK'9hbf+e@:<NSD4pP[(>mC7olqnVAoDl*%#cs^l7HXS\\$cG\\*EPBXrLb?!<=MffhWAbEX?_d'!fe<-lp;)u!I=@b.`X^/Z!^Hud4m#A^I!PE?%]l/W#U[)T+f`O=qJQdtrkOrCp\"rf1I=qC4C7n4U[?h0]6GObDWakr\"%J)e*;rP6(Bfpf;AIE.DBfLsQ.\\_iU336.h@LO>Kb)sqY&O)'dord$;KShp*!qHkHHRq6PFmmS(_j+VRQ1\"?3D/9_\\U%YKI]MF#;SMS<?-7^u)?njE0K22ApLH`>YeLq>,)>IJfa`nXp'2XfF.2#fcE^Y*o"
        custom string render = "{}"
        custom string sunstudy = '{"date": null, "time": null, "location": [null, null, null]}'

        def "OmniverseKit_Persp"
        {
            custom float4[] clippingPlanes = []
            custom float2 clippingRange = (1, 1000000)
            custom float exposure = 0
            custom float focalLength = 8
            custom float focusDistance = 0
            custom float fStop = 0
            custom float horizontalAperture = 20.955
            custom float horizontalApertureOffset = 0
            custom bool omni:ignorePrim = 1
            custom vector3d omni:kit:centerOfInterest = (-2.2135369862366224e-14, 0, -2029.7875596783376)
            custom token projection = "perspective"
            custom token purpose = "default"
            custom double shutter:close = 0
            custom double shutter:open = 0
            custom token stereoRole = "mono"
            custom float verticalAperture = 15.2908
            custom float verticalApertureOffset = 0
            custom token visibility = "inherited"
            custom float3 xformOp:rotateXYZ = (117.02953, -1.3676385e-13, -14.257975)
            custom float3 xformOp:scale = (1, 1, 1)
            custom double3 xformOp:translate = (-1872.225955427495, 2327.244401431985, 684.7236584035709)
            custom token[] xformOpOrder = ["xformOp:translate", "xformOp:rotateXYZ", "xformOp:scale"]
        }
    }

    over "Waypoint_03" (
        active = false
    )
    {
    }
}

